

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 30 12:36:31 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1826
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F1826 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0097                     	;# 
    85  0098                     	;# 
    86  0099                     	;# 
    87  009A                     	;# 
    88  009B                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  010C                     	;# 
    94  010D                     	;# 
    95  0111                     	;# 
    96  0112                     	;# 
    97  0113                     	;# 
    98  0114                     	;# 
    99  0115                     	;# 
   100  0116                     	;# 
   101  0117                     	;# 
   102  0118                     	;# 
   103  0119                     	;# 
   104  011A                     	;# 
   105  011B                     	;# 
   106  011D                     	;# 
   107  011E                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0191                     	;# 
   111  0191                     	;# 
   112  0192                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0194                     	;# 
   117  0195                     	;# 
   118  0196                     	;# 
   119  0199                     	;# 
   120  019A                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019C                     	;# 
   126  019C                     	;# 
   127  019D                     	;# 
   128  019E                     	;# 
   129  019F                     	;# 
   130  020C                     	;# 
   131  020D                     	;# 
   132  0211                     	;# 
   133  0211                     	;# 
   134  0212                     	;# 
   135  0212                     	;# 
   136  0213                     	;# 
   137  0213                     	;# 
   138  0214                     	;# 
   139  0214                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0215                     	;# 
   143  0216                     	;# 
   144  0216                     	;# 
   145  0217                     	;# 
   146  0217                     	;# 
   147  0291                     	;# 
   148  0291                     	;# 
   149  0292                     	;# 
   150  0293                     	;# 
   151  0294                     	;# 
   152  0295                     	;# 
   153  0295                     	;# 
   154  0296                     	;# 
   155  0394                     	;# 
   156  0395                     	;# 
   157  0396                     	;# 
   158  039A                     	;# 
   159  039C                     	;# 
   160  039D                     	;# 
   161  039E                     	;# 
   162  039F                     	;# 
   163  0FE4                     	;# 
   164  0FE5                     	;# 
   165  0FE6                     	;# 
   166  0FE7                     	;# 
   167  0FE8                     	;# 
   168  0FE9                     	;# 
   169  0FEA                     	;# 
   170  0FEB                     	;# 
   171  0FED                     	;# 
   172  0FEE                     	;# 
   173  0FEF                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  008C                     	;# 
   202  008D                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  0111                     	;# 
   219  0112                     	;# 
   220  0113                     	;# 
   221  0114                     	;# 
   222  0115                     	;# 
   223  0116                     	;# 
   224  0117                     	;# 
   225  0118                     	;# 
   226  0119                     	;# 
   227  011A                     	;# 
   228  011B                     	;# 
   229  011D                     	;# 
   230  011E                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0191                     	;# 
   234  0191                     	;# 
   235  0192                     	;# 
   236  0193                     	;# 
   237  0193                     	;# 
   238  0193                     	;# 
   239  0194                     	;# 
   240  0195                     	;# 
   241  0196                     	;# 
   242  0199                     	;# 
   243  019A                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019B                     	;# 
   247  019B                     	;# 
   248  019C                     	;# 
   249  019C                     	;# 
   250  019D                     	;# 
   251  019E                     	;# 
   252  019F                     	;# 
   253  020C                     	;# 
   254  020D                     	;# 
   255  0211                     	;# 
   256  0211                     	;# 
   257  0212                     	;# 
   258  0212                     	;# 
   259  0213                     	;# 
   260  0213                     	;# 
   261  0214                     	;# 
   262  0214                     	;# 
   263  0215                     	;# 
   264  0215                     	;# 
   265  0215                     	;# 
   266  0216                     	;# 
   267  0216                     	;# 
   268  0217                     	;# 
   269  0217                     	;# 
   270  0291                     	;# 
   271  0291                     	;# 
   272  0292                     	;# 
   273  0293                     	;# 
   274  0294                     	;# 
   275  0295                     	;# 
   276  0295                     	;# 
   277  0296                     	;# 
   278  0394                     	;# 
   279  0395                     	;# 
   280  0396                     	;# 
   281  039A                     	;# 
   282  039C                     	;# 
   283  039D                     	;# 
   284  039E                     	;# 
   285  039F                     	;# 
   286  0FE4                     	;# 
   287  0FE5                     	;# 
   288  0FE6                     	;# 
   289  0FE7                     	;# 
   290  0FE8                     	;# 
   291  0FE9                     	;# 
   292  0FEA                     	;# 
   293  0FEB                     	;# 
   294  0FED                     	;# 
   295  0FEE                     	;# 
   296  0FEF                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  008C                     	;# 
   325  008D                     	;# 
   326  0091                     	;# 
   327  0092                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0097                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009A                     	;# 
   334  009B                     	;# 
   335  009B                     	;# 
   336  009C                     	;# 
   337  009D                     	;# 
   338  009E                     	;# 
   339  010C                     	;# 
   340  010D                     	;# 
   341  0111                     	;# 
   342  0112                     	;# 
   343  0113                     	;# 
   344  0114                     	;# 
   345  0115                     	;# 
   346  0116                     	;# 
   347  0117                     	;# 
   348  0118                     	;# 
   349  0119                     	;# 
   350  011A                     	;# 
   351  011B                     	;# 
   352  011D                     	;# 
   353  011E                     	;# 
   354  018C                     	;# 
   355  018D                     	;# 
   356  0191                     	;# 
   357  0191                     	;# 
   358  0192                     	;# 
   359  0193                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0194                     	;# 
   363  0195                     	;# 
   364  0196                     	;# 
   365  0199                     	;# 
   366  019A                     	;# 
   367  019B                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019B                     	;# 
   371  019C                     	;# 
   372  019C                     	;# 
   373  019D                     	;# 
   374  019E                     	;# 
   375  019F                     	;# 
   376  020C                     	;# 
   377  020D                     	;# 
   378  0211                     	;# 
   379  0211                     	;# 
   380  0212                     	;# 
   381  0212                     	;# 
   382  0213                     	;# 
   383  0213                     	;# 
   384  0214                     	;# 
   385  0214                     	;# 
   386  0215                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0216                     	;# 
   390  0216                     	;# 
   391  0217                     	;# 
   392  0217                     	;# 
   393  0291                     	;# 
   394  0291                     	;# 
   395  0292                     	;# 
   396  0293                     	;# 
   397  0294                     	;# 
   398  0295                     	;# 
   399  0295                     	;# 
   400  0296                     	;# 
   401  0394                     	;# 
   402  0395                     	;# 
   403  0396                     	;# 
   404  039A                     	;# 
   405  039C                     	;# 
   406  039D                     	;# 
   407  039E                     	;# 
   408  039F                     	;# 
   409  0FE4                     	;# 
   410  0FE5                     	;# 
   411  0FE6                     	;# 
   412  0FE7                     	;# 
   413  0FE8                     	;# 
   414  0FE9                     	;# 
   415  0FEA                     	;# 
   416  0FEB                     	;# 
   417  0FED                     	;# 
   418  0FEE                     	;# 
   419  0FEF                     	;# 
   420  000D                     _PORTBbits	set	13
   421  0015                     _TMR0	set	21
   422  000B                     _INTCON	set	11
   423  008B                     _SSP1IF	set	139
   424  008D                     _TRISB	set	141
   425  008C                     _TRISA	set	140
   426  0091                     _PIE1	set	145
   427  0095                     _OPTION_REG	set	149
   428  0099                     _OSCCON	set	153
   429  010C                     _LATA	set	268
   430  018D                     _ANSELB	set	397
   431  018C                     _ANSELA	set	396
   432  0215                     _SSP1CON1bits	set	533
   433  0216                     _SSP1CON2bits	set	534
   434  0214                     _SSP1STATbits	set	532
   435  0217                     _SSP1CON3bits	set	535
   436  0211                     _SSP1BUF	set	529
   437  0212                     _SSP1ADD	set	530
   438  0217                     _SSP1CON3	set	535
   439  0216                     _SSP1CON2	set	534
   440  0215                     _SSP1CON1	set	533
   441  0214                     _SSP1STAT	set	532
   442  020D                     _WPUB	set	525
   443                           
   444                           ; #config settings
   445  0000                     
   446                           	psect	cinit
   447  0011                     start_initialization:	
   448  0011                     __initialization:	
   449                           
   450                           ; Clear objects allocated to COMMON
   451  0011  01FA               	clrf	__pbssCOMMON& (0+127)
   452  0012  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   453                           
   454                           ; Clear objects allocated to BANK0
   455  0013  0020               	movlb	0	; select bank0
   456  0014  01A9               	clrf	__pbssBANK0& (0+127)
   457  0015  01AA               	clrf	(__pbssBANK0+1)& (0+127)
   458  0016  01AB               	clrf	(__pbssBANK0+2)& (0+127)
   459  0017  01AC               	clrf	(__pbssBANK0+3)& (0+127)
   460  0018  01AD               	clrf	(__pbssBANK0+4)& (0+127)
   461  0019  01AE               	clrf	(__pbssBANK0+5)& (0+127)
   462  001A                     end_of_initialization:	
   463                           ;End of C runtime variable initialization code
   464                           
   465  001A                     __end_of__initialization:	
   466  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   467  001B  0020               	movlb	0
   468  001C  281D               	ljmp	_main	;jump to C main() function
   469                           
   470                           	psect	bssCOMMON
   471  007A                     __pbssCOMMON:	
   472  007A                     _debug:	
   473  007A                     	ds	1
   474  007B                     _i2c_settings:	
   475  007B                     	ds	1
   476                           
   477                           	psect	bssBANK0
   478  0029                     __pbssBANK0:	
   479  0029                     _flagUp:	
   480  0029                     	ds	1
   481  002A                     _harr:	
   482  002A                     	ds	5
   483                           
   484                           	psect	cstackCOMMON
   485  0070                     __pcstackCOMMON:	
   486  0070                     ?_i2cISR:	
   487  0070                     ?_handleWrite:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_handleRead:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ??_handleRead:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_checkData:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ??_checkData:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_ISR:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_main:	
   506                           ; 1 bytes @ 0x0
   507                           
   508                           
   509                           ; 1 bytes @ 0x0
   510  0070                     	ds	2
   511  0072                     checkData@stat:	
   512  0072                     handleRead@holderSel:	
   513                           ; 1 bytes @ 0x2
   514                           
   515                           
   516                           ; 1 bytes @ 0x2
   517  0072                     	ds	1
   518  0073                     checkData@holderSel:	
   519                           
   520                           ; 1 bytes @ 0x3
   521  0073                     	ds	1
   522  0074                     checkData@s:	
   523                           
   524                           ; 1 bytes @ 0x4
   525  0074                     	ds	1
   526  0075                     checkData@h:	
   527                           
   528                           ; 1 bytes @ 0x5
   529  0075                     	ds	1
   530  0076                     ??_handleWrite:	
   531                           
   532                           ; 1 bytes @ 0x6
   533  0076                     	ds	1
   534  0077                     handleWrite@d:	
   535                           
   536                           ; 1 bytes @ 0x7
   537  0077                     	ds	1
   538  0078                     ??_i2cISR:	
   539                           
   540                           ; 1 bytes @ 0x8
   541  0078                     	ds	1
   542  0079                     i2cISR@d:	
   543                           
   544                           ; 1 bytes @ 0x9
   545  0079                     	ds	1
   546  007A                     ??_ISR:	
   547                           
   548                           	psect	cstackBANK0
   549  0020                     __pcstackBANK0:	
   550                           ; 1 bytes @ 0xA
   551                           
   552  0020                     ??_main:	
   553                           
   554                           ; 1 bytes @ 0x0
   555  0020                     	ds	3
   556  0023                     main@flag:	
   557                           
   558                           ; 1 bytes @ 0x3
   559  0023                     	ds	1
   560  0024                     main@lataClosed:	
   561                           
   562                           ; 1 bytes @ 0x4
   563  0024                     	ds	1
   564  0025                     main@h:	
   565                           
   566                           ; 1 bytes @ 0x5
   567  0025                     	ds	1
   568  0026                     main@i:	
   569                           
   570                           ; 1 bytes @ 0x6
   571  0026                     	ds	1
   572  0027                     main@i_89:	
   573                           
   574                           ; 2 bytes @ 0x7
   575  0027                     	ds	2
   576                           
   577                           	psect	maintext
   578  001D                     __pmaintext:	
   579 ;;
   580 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   581 ;;
   582 ;; *************** function _main *****************
   583 ;; Defined at:
   584 ;;		line 58 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  h               1    5[BANK0 ] PTR unsigned char 
   589 ;;		 -> harr(5), 
   590 ;;  i               2    7[BANK0 ] int 
   591 ;;  i               1    6[BANK0 ] unsigned char 
   592 ;;  lataClosed      1    4[BANK0 ] unsigned char 
   593 ;;  flag            1    3[BANK0 ] unsigned char 
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   598 ;; Tracked objects:
   599 ;;		On entry : B1F/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   603 ;;      Params:         0       0       0       0
   604 ;;      Locals:         0       6       0       0
   605 ;;      Temps:          0       3       0       0
   606 ;;      Totals:         0       9       0       0
   607 ;;Total ram usage:        9 bytes
   608 ;; Hardware stack levels required when called:    4
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		Startup code after reset
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _main
   618  001D                     _main:	
   619  001D                     l956:	
   620                           ;incstack = 0
   621                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0]
   622                           
   623                           
   624                           ;main.c: 59:     OSCCON = 0b01111010;
   625  001D  307A               	movlw	122
   626  001E  0021               	movlb	1	; select bank1
   627  001F  0099               	movwf	25	;volatile
   628                           
   629                           ;main.c: 60:     OPTION_REG = 0b00000111;
   630  0020  3007               	movlw	7
   631  0021  0095               	movwf	21	;volatile
   632                           
   633                           ;main.c: 61:     INTCON = 0b11000000;
   634  0022  30C0               	movlw	192
   635  0023  008B               	movwf	11	;volatile
   636                           
   637                           ;main.c: 62:     PIE1 = 0b00001000;
   638  0024  3008               	movlw	8
   639  0025  0091               	movwf	17	;volatile
   640                           
   641                           ;main.c: 68:     TRISA = 0b00100000;
   642  0026  3020               	movlw	32
   643  0027  008C               	movwf	12	;volatile
   644                           
   645                           ;main.c: 69:     TRISB = 0b01111111;
   646  0028  307F               	movlw	127
   647  0029  008D               	movwf	13	;volatile
   648  002A                     l958:	
   649                           
   650                           ;main.c: 70:     ANSELA = 0;
   651  002A  0023               	movlb	3	; select bank3
   652  002B  018C               	clrf	12	;volatile
   653  002C                     l960:	
   654                           
   655                           ;main.c: 71:     ANSELB = 0;
   656  002C  018D               	clrf	13	;volatile
   657  002D                     l962:	
   658                           
   659                           ;main.c: 72:     LATA = 0;
   660  002D  0022               	movlb	2	; select bank2
   661  002E  018C               	clrf	12	;volatile
   662  002F                     l964:	
   663                           
   664                           ;main.c: 73:     WPUB = 0b01111111;
   665  002F  307F               	movlw	127
   666  0030  0024               	movlb	4	; select bank4
   667  0031  008D               	movwf	13	;volatile
   668  0032                     l966:	
   669                           
   670                           ;main.c: 76:     SSP1STAT = 0b01000000;
   671  0032  3040               	movlw	64
   672  0033  0094               	movwf	20	;volatile
   673  0034                     l968:	
   674                           
   675                           ;main.c: 77:     SSP1CON1 = 0b00100110;
   676  0034  3026               	movlw	38
   677  0035  0095               	movwf	21	;volatile
   678  0036                     l970:	
   679                           
   680                           ;main.c: 78:     SSP1CON2 = 0b00000001;
   681  0036  3001               	movlw	1
   682  0037  0096               	movwf	22	;volatile
   683  0038                     l972:	
   684                           
   685                           ;main.c: 79:     SSP1CON3 = 0b00101011;
   686  0038  302B               	movlw	43
   687  0039  0097               	movwf	23	;volatile
   688  003A                     l974:	
   689                           
   690                           ;main.c: 80:     SSP1ADD = 0b00110100;
   691  003A  3034               	movlw	52
   692  003B  0092               	movwf	18	;volatile
   693  003C                     l976:	
   694                           
   695                           ;main.c: 82:     flagUp = 0;
   696  003C  0020               	movlb	0	; select bank0
   697  003D  01A9               	clrf	_flagUp
   698                           
   699                           ;main.c: 83:     unsigned char flag = 0b11111111;
   700  003E  30FF               	movlw	255
   701  003F  00A0               	movwf	??_main
   702  0040  0820               	movf	??_main,w
   703  0041  00A3               	movwf	main@flag
   704  0042                     l978:	
   705                           
   706                           ;main.c: 85:     for(char i=0;i<5;i++){
   707  0042  01A6               	clrf	main@i
   708  0043                     l984:	
   709                           
   710                           ;main.c: 86:         harr[i] = 0b10000000;
   711  0043  3080               	movlw	128
   712  0044  00A0               	movwf	??_main
   713  0045  0826               	movf	main@i,w
   714  0046  3E2A               	addlw	(low (_harr| 0))& (0+255)
   715  0047  0086               	movwf	6
   716  0048  0187               	clrf	7
   717  0049  0820               	movf	??_main,w
   718  004A  0081               	movwf	1
   719  004B                     l986:	
   720                           
   721                           ;main.c: 87:     }
   722  004B  3001               	movlw	1
   723  004C  00A0               	movwf	??_main
   724  004D  0820               	movf	??_main,w
   725  004E  07A6               	addwf	main@i,f
   726  004F                     l988:	
   727  004F  3005               	movlw	5
   728  0050  0226               	subwf	main@i,w
   729  0051  1C03               	skipc
   730  0052  2854               	goto	u431
   731  0053  2855               	goto	u430
   732  0054                     u431:	
   733  0054  2843               	goto	l984
   734  0055                     u430:	
   735  0055                     l990:	
   736                           
   737                           ;main.c: 94:         if(TMR0 > 240){
   738  0055  30F1               	movlw	241
   739  0056  0215               	subwf	21,w	;volatile
   740  0057  1C03               	skipc
   741  0058  285A               	goto	u441
   742  0059  285B               	goto	u440
   743  005A                     u441:	
   744  005A  2896               	goto	l60
   745  005B                     u440:	
   746  005B                     l994:	
   747  005B  30F1               	movlw	241
   748  005C  0215               	subwf	21,w	;volatile
   749  005D  1803               	skipnc
   750  005E  2860               	goto	u451
   751  005F  2861               	goto	u450
   752  0060                     u451:	
   753  0060  285B               	goto	l994
   754  0061                     u450:	
   755  0061                     l996:	
   756                           
   757                           ;main.c: 96:             LATA |= 0b01101111;
   758  0061  306F               	movlw	111
   759  0062  00A0               	movwf	??_main
   760  0063  0820               	movf	??_main,w
   761  0064  0022               	movlb	2	; select bank2
   762  0065  048C               	iorwf	12,f	;volatile
   763  0066                     l998:	
   764                           ;main.c: 97:             while(TMR0 < 11);
   765                           
   766  0066  300B               	movlw	11
   767  0067  0020               	movlb	0	; select bank0
   768  0068  0215               	subwf	21,w	;volatile
   769  0069  1C03               	skipc
   770  006A  286C               	goto	u461
   771  006B  286D               	goto	u460
   772  006C                     u461:	
   773  006C  2866               	goto	l998
   774  006D                     u460:	
   775  006D                     l1000:	
   776                           
   777                           ;main.c: 98:             LATA &= flag;
   778  006D  0823               	movf	main@flag,w	;volatile
   779  006E  00A0               	movwf	??_main
   780  006F  0820               	movf	??_main,w
   781  0070  0022               	movlb	2	; select bank2
   782  0071  058C               	andwf	12,f	;volatile
   783  0072                     l1002:	
   784                           ;main.c: 99:             while(TMR0 < 21);
   785                           
   786  0072  3015               	movlw	21
   787  0073  0020               	movlb	0	; select bank0
   788  0074  0215               	subwf	21,w	;volatile
   789  0075  1C03               	skipc
   790  0076  2878               	goto	u471
   791  0077  2879               	goto	u470
   792  0078                     u471:	
   793  0078  2872               	goto	l1002
   794  0079                     u470:	
   795  0079                     l1004:	
   796                           
   797                           ;main.c: 100:             LATA &= lataClosed;
   798  0079  0824               	movf	main@lataClosed,w	;volatile
   799  007A  00A0               	movwf	??_main
   800  007B  0820               	movf	??_main,w
   801  007C  0022               	movlb	2	; select bank2
   802  007D  058C               	andwf	12,f	;volatile
   803  007E                     l1006:	
   804                           ;main.c: 101:             while(TMR0 < 28);
   805                           
   806  007E  301C               	movlw	28
   807  007F  0020               	movlb	0	; select bank0
   808  0080  0215               	subwf	21,w	;volatile
   809  0081  1C03               	skipc
   810  0082  2884               	goto	u481
   811  0083  2885               	goto	u480
   812  0084                     u481:	
   813  0084  287E               	goto	l1006
   814  0085                     u480:	
   815  0085                     l1008:	
   816                           
   817                           ;main.c: 102:             LATA &= 0b10111111;
   818  0085  30BF               	movlw	191
   819  0086  00A0               	movwf	??_main
   820  0087  0820               	movf	??_main,w
   821  0088  0022               	movlb	2	; select bank2
   822  0089  058C               	andwf	12,f	;volatile
   823  008A                     l1010:	
   824                           ;main.c: 103:             while(TMR0 < 36);
   825                           
   826  008A  3024               	movlw	36
   827  008B  0020               	movlb	0	; select bank0
   828  008C  0215               	subwf	21,w	;volatile
   829  008D  1C03               	skipc
   830  008E  2890               	goto	u491
   831  008F  2891               	goto	u490
   832  0090                     u491:	
   833  0090  288A               	goto	l1010
   834  0091                     u490:	
   835  0091                     l1012:	
   836                           
   837                           ;main.c: 104:             LATA &= 0b10100000;
   838  0091  30A0               	movlw	160
   839  0092  00A0               	movwf	??_main
   840  0093  0820               	movf	??_main,w
   841  0094  0022               	movlb	2	; select bank2
   842  0095  058C               	andwf	12,f	;volatile
   843  0096                     l60:	
   844                           ;main.c: 105:         }
   845                           
   846                           
   847                           ;main.c: 106:         harr[0]|=(!PORTBbits.RB0<<5); harr[0]&=~(!!PORTBbits.RB0<<5);;
   848  0096  1003               	clrc
   849  0097  0020               	movlb	0	; select bank0
   850  0098  1C0D               	btfss	13,0	;volatile
   851  0099  1403               	setc
   852  009A  3000               	movlw	0
   853  009B  3D09               	addwfc	9,w
   854  009C  00A0               	movwf	??_main
   855  009D  3004               	movlw	4
   856  009E                     u505:	
   857  009E  35A0               	lslf	??_main,f
   858  009F  3EFF               	addlw	-1
   859  00A0  1D03               	skipz
   860  00A1  289E               	goto	u505
   861  00A2  3520               	lslf	??_main,w
   862  00A3  00A1               	movwf	??_main+1
   863  00A4  0821               	movf	??_main+1,w
   864  00A5  04AA               	iorwf	_harr,f
   865  00A6  080D               	movf	13,w	;volatile
   866  00A7  3901               	andlw	1
   867  00A8  00A0               	movwf	??_main
   868  00A9  3004               	movlw	4
   869  00AA                     u515:	
   870  00AA  35A0               	lslf	??_main,f
   871  00AB  3EFF               	addlw	-1
   872  00AC  1D03               	skipz
   873  00AD  28AA               	goto	u515
   874  00AE  3520               	lslf	??_main,w
   875  00AF  3AFF               	xorlw	255
   876  00B0  00A1               	movwf	??_main+1
   877  00B1  0821               	movf	??_main+1,w
   878  00B2  05AA               	andwf	_harr,f
   879                           
   880                           ;main.c: 107:         harr[1]|=(!PORTBbits.RB2<<5); harr[1]&=~(!!PORTBbits.RB2<<5);;
   881  00B3  1003               	clrc
   882  00B4  1D0D               	btfss	13,2	;volatile
   883  00B5  1403               	setc
   884  00B6  3000               	movlw	0
   885  00B7  3D09               	addwfc	9,w
   886  00B8  00A0               	movwf	??_main
   887  00B9  3004               	movlw	4
   888  00BA                     u525:	
   889  00BA  35A0               	lslf	??_main,f
   890  00BB  3EFF               	addlw	-1
   891  00BC  1D03               	skipz
   892  00BD  28BA               	goto	u525
   893  00BE  3520               	lslf	??_main,w
   894  00BF  00A1               	movwf	??_main+1
   895  00C0  0821               	movf	??_main+1,w
   896  00C1  04AB               	iorwf	_harr+1,f
   897  00C2  0C0D               	rrf	13,w	;volatile
   898  00C3  0C89               	rrf	9,f
   899  00C4  3901               	andlw	1
   900  00C5  00A0               	movwf	??_main
   901  00C6  3004               	movlw	4
   902  00C7                     u535:	
   903  00C7  35A0               	lslf	??_main,f
   904  00C8  3EFF               	addlw	-1
   905  00C9  1D03               	skipz
   906  00CA  28C7               	goto	u535
   907  00CB  3520               	lslf	??_main,w
   908  00CC  3AFF               	xorlw	255
   909  00CD  00A1               	movwf	??_main+1
   910  00CE  0821               	movf	??_main+1,w
   911  00CF  05AB               	andwf	_harr+1,f
   912                           
   913                           ;main.c: 108:         harr[2]|=(!PORTBbits.RB3<<5); harr[2]&=~(!!PORTBbits.RB3<<5);;
   914  00D0  1003               	clrc
   915  00D1  1D8D               	btfss	13,3	;volatile
   916  00D2  1403               	setc
   917  00D3  3000               	movlw	0
   918  00D4  3D09               	addwfc	9,w
   919  00D5  00A0               	movwf	??_main
   920  00D6  3004               	movlw	4
   921  00D7                     u545:	
   922  00D7  35A0               	lslf	??_main,f
   923  00D8  3EFF               	addlw	-1
   924  00D9  1D03               	skipz
   925  00DA  28D7               	goto	u545
   926  00DB  3520               	lslf	??_main,w
   927  00DC  00A1               	movwf	??_main+1
   928  00DD  0821               	movf	??_main+1,w
   929  00DE  04AC               	iorwf	_harr+2,f
   930  00DF  0C0D               	rrf	13,w	;volatile
   931  00E0  00A0               	movwf	??_main
   932  00E1  0CA0               	rrf	??_main,f
   933  00E2  0C20               	rrf	??_main,w
   934  00E3  3901               	andlw	1
   935  00E4  00A1               	movwf	??_main+1
   936  00E5  3004               	movlw	4
   937  00E6                     u555:	
   938  00E6  35A1               	lslf	??_main+1,f
   939  00E7  3EFF               	addlw	-1
   940  00E8  1D03               	skipz
   941  00E9  28E6               	goto	u555
   942  00EA  3521               	lslf	??_main+1,w
   943  00EB  3AFF               	xorlw	255
   944  00EC  00A2               	movwf	??_main+2
   945  00ED  0822               	movf	??_main+2,w
   946  00EE  05AC               	andwf	_harr+2,f
   947                           
   948                           ;main.c: 109:         harr[3]|=(!PORTBbits.RB5<<5); harr[3]&=~(!!PORTBbits.RB5<<5);;
   949  00EF  1003               	clrc
   950  00F0  1E8D               	btfss	13,5	;volatile
   951  00F1  1403               	setc
   952  00F2  3000               	movlw	0
   953  00F3  3D09               	addwfc	9,w
   954  00F4  00A0               	movwf	??_main
   955  00F5  3004               	movlw	4
   956  00F6                     u565:	
   957  00F6  35A0               	lslf	??_main,f
   958  00F7  3EFF               	addlw	-1
   959  00F8  1D03               	skipz
   960  00F9  28F6               	goto	u565
   961  00FA  3520               	lslf	??_main,w
   962  00FB  00A1               	movwf	??_main+1
   963  00FC  0821               	movf	??_main+1,w
   964  00FD  04AD               	iorwf	_harr+3,f
   965  00FE  0E0D               	swapf	13,w	;volatile
   966  00FF  0C89               	rrf	9,f
   967  0100  3901               	andlw	1
   968  0101  00A0               	movwf	??_main
   969  0102  3004               	movlw	4
   970  0103                     u575:	
   971  0103  35A0               	lslf	??_main,f
   972  0104  3EFF               	addlw	-1
   973  0105  1D03               	skipz
   974  0106  2903               	goto	u575
   975  0107  3520               	lslf	??_main,w
   976  0108  3AFF               	xorlw	255
   977  0109  00A1               	movwf	??_main+1
   978  010A  0821               	movf	??_main+1,w
   979  010B  05AD               	andwf	_harr+3,f
   980                           
   981                           ;main.c: 110:         harr[4]|=(!PORTBbits.RB6<<5); harr[4]&=~(!!PORTBbits.RB6<<5);;
   982  010C  1003               	clrc
   983  010D  1F0D               	btfss	13,6	;volatile
   984  010E  1403               	setc
   985  010F  3000               	movlw	0
   986  0110  3D09               	addwfc	9,w
   987  0111  00A0               	movwf	??_main
   988  0112  3004               	movlw	4
   989  0113                     u585:	
   990  0113  35A0               	lslf	??_main,f
   991  0114  3EFF               	addlw	-1
   992  0115  1D03               	skipz
   993  0116  2913               	goto	u585
   994  0117  3520               	lslf	??_main,w
   995  0118  00A1               	movwf	??_main+1
   996  0119  0821               	movf	??_main+1,w
   997  011A  04AE               	iorwf	_harr+4,f
   998  011B  0E0D               	swapf	13,w	;volatile
   999  011C  0C89               	rrf	9,f
  1000  011D  0C89               	rrf	9,f
  1001  011E  3901               	andlw	1
  1002  011F  00A0               	movwf	??_main
  1003  0120  3004               	movlw	4
  1004  0121                     u595:	
  1005  0121  35A0               	lslf	??_main,f
  1006  0122  3EFF               	addlw	-1
  1007  0123  1D03               	skipz
  1008  0124  2921               	goto	u595
  1009  0125  3520               	lslf	??_main,w
  1010  0126  3AFF               	xorlw	255
  1011  0127  00A1               	movwf	??_main+1
  1012  0128  0821               	movf	??_main+1,w
  1013  0129  05AE               	andwf	_harr+4,f
  1014  012A                     l1014:	
  1015                           
  1016                           ;main.c: 112:         lataClosed = 0b11111111;
  1017  012A  30FF               	movlw	255
  1018  012B  00A0               	movwf	??_main
  1019  012C  0820               	movf	??_main,w
  1020  012D  00A4               	movwf	main@lataClosed
  1021  012E                     l1016:	
  1022                           
  1023                           ;main.c: 114:         for(int i=0;i<5;i++){
  1024  012E  01A7               	clrf	main@i_89
  1025  012F  01A8               	clrf	main@i_89+1
  1026  0130                     l1022:	
  1027                           
  1028                           ;main.c: 115:             holder *h = &harr[i];
  1029  0130  0020               	movlb	0	; select bank0
  1030  0131  0827               	movf	main@i_89,w
  1031  0132  3E2A               	addlw	(low (_harr| 0))& (0+255)
  1032  0133  00A0               	movwf	??_main
  1033  0134  0820               	movf	??_main,w
  1034  0135  00A5               	movwf	main@h
  1035  0136                     l1024:	
  1036                           
  1037                           ;main.c: 116:             if((*h & 0b01100000)==0b01100000){
  1038  0136  0825               	movf	main@h,w
  1039  0137  0086               	movwf	6
  1040  0138  0187               	clrf	7
  1041  0139  3060               	movlw	96
  1042  013A  0501               	andwf	1,w
  1043  013B  00A0               	movwf	??_main
  1044  013C  3060               	movlw	96
  1045  013D  0620               	xorwf	??_main,w
  1046  013E  1D03               	btfss	3,2
  1047  013F  2941               	goto	u601
  1048  0140  2942               	goto	u600
  1049  0141                     u601:	
  1050  0141  2949               	goto	l1028
  1051  0142                     u600:	
  1052  0142                     l1026:	
  1053                           
  1054                           ;main.c: 117:                 *h &= 0b00111111;
  1055  0142  303F               	movlw	63
  1056  0143  00A0               	movwf	??_main
  1057  0144  0825               	movf	main@h,w
  1058  0145  0086               	movwf	6
  1059  0146  0187               	clrf	7
  1060  0147  0820               	movf	??_main,w
  1061  0148  0581               	andwf	1,f
  1062  0149                     l1028:	
  1063  0149  0825               	movf	main@h,w
  1064  014A  0086               	movwf	6
  1065  014B  0187               	clrf	7
  1066  014C  1B81               	btfsc	1,7
  1067  014D  294F               	goto	u611
  1068  014E  2950               	goto	u610
  1069  014F                     u611:	
  1070  014F  295C               	goto	l1032
  1071  0150                     u610:	
  1072  0150                     l1030:	
  1073                           
  1074                           ;main.c: 119:                 lataClosed &= ~(1<<i);
  1075  0150  3001               	movlw	1
  1076  0151  00A0               	movwf	??_main
  1077  0152  0A27               	incf	main@i_89,w
  1078  0153  2955               	goto	u624
  1079  0154                     u625:	
  1080  0154  35A0               	lslf	??_main,f
  1081  0155                     u624:	
  1082  0155  0B89               	decfsz	9,f
  1083  0156  2954               	goto	u625
  1084  0157  0820               	movf	??_main,w
  1085  0158  3AFF               	xorlw	255
  1086  0159  00A1               	movwf	??_main+1
  1087  015A  0821               	movf	??_main+1,w
  1088  015B  05A4               	andwf	main@lataClosed,f
  1089  015C                     l1032:	
  1090                           
  1091                           ;main.c: 120:         }
  1092  015C  3001               	movlw	1
  1093  015D  07A7               	addwf	main@i_89,f
  1094  015E  3000               	movlw	0
  1095  015F  3DA8               	addwfc	main@i_89+1,f
  1096  0160                     l1034:	
  1097  0160  0828               	movf	main@i_89+1,w
  1098  0161  3A80               	xorlw	128
  1099  0162  00A0               	movwf	??_main
  1100  0163  3080               	movlw	128
  1101  0164  0220               	subwf	??_main,w
  1102  0165  1D03               	skipz
  1103  0166  2969               	goto	u635
  1104  0167  3005               	movlw	5
  1105  0168  0227               	subwf	main@i_89,w
  1106  0169                     u635:	
  1107  0169  1C03               	skipc
  1108  016A  296C               	goto	u631
  1109  016B  296D               	goto	u630
  1110  016C                     u631:	
  1111  016C  2930               	goto	l1022
  1112  016D                     u630:	
  1113  016D                     l1036:	
  1114                           
  1115                           ;main.c: 122:         if(flagUp)
  1116  016D  0020               	movlb	0	; select bank0
  1117  016E  0829               	movf	_flagUp,w
  1118  016F  1903               	btfsc	3,2
  1119  0170  2972               	goto	u641
  1120  0171  2973               	goto	u640
  1121  0172                     u641:	
  1122  0172  2855               	goto	l990
  1123  0173                     u640:	
  1124  0173                     l1038:	
  1125                           
  1126                           ;main.c: 123:             flag &= 0b10111111;
  1127  0173  30BF               	movlw	191
  1128  0174  00A0               	movwf	??_main
  1129  0175  0820               	movf	??_main,w
  1130  0176  05A3               	andwf	main@flag,f
  1131  0177  2855               	goto	l990
  1132  0178  2810               	ljmp	start
  1133  0179                     __end_of_main:	
  1134                           
  1135                           	psect	intentry
  1136  0004                     __pintentry:	
  1137 ;; *************** function _ISR *****************
  1138 ;; Defined at:
  1139 ;;		line 52 in file "main.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1153 ;;      Params:         0       0       0       0
  1154 ;;      Locals:         0       0       0       0
  1155 ;;      Temps:          0       0       0       0
  1156 ;;      Totals:         0       0       0       0
  1157 ;;Total ram usage:        0 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    3
  1160 ;; This function calls:
  1161 ;;		_i2cISR
  1162 ;; This function is called by:
  1163 ;;		Interrupt level 1
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167  0004                     _ISR:	
  1168                           
  1169                           ;incstack = 0
  1170  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1171                           
  1172                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1173  0005  3180               	pagesel	$
  1174  0006                     i1l952:	
  1175                           
  1176                           ;main.c: 53:     if(SSP1IF == 1){
  1177  0006  0020               	movlb	0	; select bank0
  1178  0007  1D91               	btfss	17,3	;volatile
  1179  0008  280A               	goto	u42_21
  1180  0009  280B               	goto	u42_20
  1181  000A                     u42_21:	
  1182  000A  280E               	goto	i1l52
  1183  000B                     u42_20:	
  1184  000B                     i1l954:	
  1185                           
  1186                           ;main.c: 54:         i2cISR();
  1187  000B  3181  21CD  3180   	fcall	_i2cISR
  1188  000E                     i1l52:	
  1189  000E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1190  000F  0009               	retfie
  1191  0010                     __end_of_ISR:	
  1192                           
  1193                           	psect	text2
  1194  01CD                     __ptext2:	
  1195 ;; *************** function _i2cISR *****************
  1196 ;; Defined at:
  1197 ;;		line 7 in file "i2c.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  d               1    9[COMMON] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1211 ;;      Params:         0       0       0       0
  1212 ;;      Locals:         1       0       0       0
  1213 ;;      Temps:          1       0       0       0
  1214 ;;      Totals:         2       0       0       0
  1215 ;;Total ram usage:        2 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    2
  1218 ;; This function calls:
  1219 ;;		_handleRead
  1220 ;;		_handleWrite
  1221 ;; This function is called by:
  1222 ;;		_ISR
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           
  1227                           ;psect for function _i2cISR
  1228  01CD                     _i2cISR:	
  1229  01CD                     i1l928:	
  1230                           ;incstack = 0
  1231                           ; Regs used in _i2cISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1232                           
  1233  01CD                     i1l930:	
  1234                           
  1235                           ;i2c.c: 9:     SSP1IF = 0;
  1236  01CD  0020               	movlb	0	; select bank0
  1237  01CE  1191               	bcf	17,3	;volatile
  1238  01CF                     i1l932:	
  1239                           
  1240                           ;i2c.c: 10:     d = SSP1BUF;
  1241  01CF  0024               	movlb	4	; select bank4
  1242  01D0  0811               	movf	17,w	;volatile
  1243  01D1  00F8               	movwf	??_i2cISR
  1244  01D2  0878               	movf	??_i2cISR,w
  1245  01D3  00F9               	movwf	i2cISR@d
  1246  01D4                     i1l934:	
  1247                           
  1248                           ;i2c.c: 11:     if(SSP1CON3bits.ACKTIM){
  1249  01D4  1F97               	btfss	23,7	;volatile
  1250  01D5  29D7               	goto	u37_21
  1251  01D6  29D8               	goto	u37_20
  1252  01D7                     u37_21:	
  1253  01D7  29E5               	goto	i1l110
  1254  01D8                     u37_20:	
  1255  01D8                     i1l936:	
  1256                           
  1257                           ;i2c.c: 12:         if(SSP1STATbits.D_nA){
  1258  01D8  1E94               	btfss	20,5	;volatile
  1259  01D9  29DB               	goto	u38_21
  1260  01DA  29DC               	goto	u38_20
  1261  01DB                     u38_21:	
  1262  01DB  29F2               	goto	i1l948
  1263  01DC                     u38_20:	
  1264  01DC                     i1l938:	
  1265                           
  1266                           ;i2c.c: 13:             if(SSP1STATbits.R_nW == 0)
  1267  01DC  1914               	btfsc	20,2	;volatile
  1268  01DD  29DF               	goto	u39_21
  1269  01DE  29E0               	goto	u39_20
  1270  01DF                     u39_21:	
  1271  01DF  29F2               	goto	i1l948
  1272  01E0                     u39_20:	
  1273  01E0                     i1l940:	
  1274                           
  1275                           ;i2c.c: 14:                 handleWrite(d);
  1276  01E0  0879               	movf	i2cISR@d,w
  1277  01E1  3182  2209  3181   	fcall	_handleWrite
  1278  01E4  29F2               	goto	i1l948
  1279  01E5                     i1l110:	
  1280                           
  1281                           ;i2c.c: 17:         if(!SSP1CON3bits.ACKTIM){
  1282  01E5  1B97               	btfsc	23,7	;volatile
  1283  01E6  29E8               	goto	u40_21
  1284  01E7  29E9               	goto	u40_20
  1285  01E8                     u40_21:	
  1286  01E8  29F2               	goto	i1l948
  1287  01E9                     u40_20:	
  1288  01E9                     i1l942:	
  1289                           
  1290                           ;i2c.c: 18:             if(SSP1STATbits.R_nW == 0)
  1291  01E9  1914               	btfsc	20,2	;volatile
  1292  01EA  29EC               	goto	u41_21
  1293  01EB  29ED               	goto	u41_20
  1294  01EC                     u41_21:	
  1295  01EC  29EF               	goto	i1l946
  1296  01ED                     u41_20:	
  1297  01ED                     i1l944:	
  1298                           
  1299                           ;i2c.c: 19:                 i2c_settings = 0;
  1300  01ED  01FB               	clrf	_i2c_settings
  1301  01EE  29F2               	goto	i1l948
  1302  01EF                     i1l946:	
  1303                           
  1304                           ;i2c.c: 21:                 handleRead();
  1305  01EF  3181  21F6  3181   	fcall	_handleRead
  1306  01F2                     i1l948:	
  1307                           
  1308                           ;i2c.c: 24:     SSP1CON2bits.ACKDT = 0;
  1309  01F2  0024               	movlb	4	; select bank4
  1310  01F3  1296               	bcf	22,5	;volatile
  1311  01F4                     i1l950:	
  1312                           
  1313                           ;i2c.c: 25:     SSP1CON1bits.CKP = 1;
  1314  01F4  1615               	bsf	21,4	;volatile
  1315  01F5                     i1l117:	
  1316  01F5  0008               	return
  1317  01F6                     __end_of_i2cISR:	
  1318                           
  1319                           	psect	text3
  1320  0209                     __ptext3:	
  1321 ;; *************** function _handleWrite *****************
  1322 ;; Defined at:
  1323 ;;		line 28 in file "i2c.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  d               1    wreg     unsigned char 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  d               1    7[COMMON] unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1337 ;;      Params:         0       0       0       0
  1338 ;;      Locals:         1       0       0       0
  1339 ;;      Temps:          1       0       0       0
  1340 ;;      Totals:         2       0       0       0
  1341 ;;Total ram usage:        2 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    1
  1344 ;; This function calls:
  1345 ;;		_checkData
  1346 ;; This function is called by:
  1347 ;;		_i2cISR
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           
  1352                           ;psect for function _handleWrite
  1353  0209                     _handleWrite:	
  1354                           
  1355                           ;incstack = 0
  1356                           ; Regs used in _handleWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1357                           ;handleWrite@d stored from wreg
  1358  0209  00F7               	movwf	handleWrite@d
  1359  020A                     i1l920:	
  1360                           
  1361                           ;i2c.c: 29:     i2c_settings = d;
  1362  020A  0877               	movf	handleWrite@d,w
  1363  020B  00F6               	movwf	??_handleWrite
  1364  020C  0876               	movf	??_handleWrite,w
  1365  020D  00FB               	movwf	_i2c_settings
  1366  020E                     i1l922:	
  1367                           
  1368                           ;i2c.c: 30:     checkData(d);
  1369  020E  0877               	movf	handleWrite@d,w
  1370  020F  3181  2179  3182   	fcall	_checkData
  1371  0212                     i1l120:	
  1372  0212  0008               	return
  1373  0213                     __end_of_handleWrite:	
  1374                           
  1375                           	psect	text4
  1376  0179                     __ptext4:	
  1377 ;; *************** function _checkData *****************
  1378 ;; Defined at:
  1379 ;;		line 33 in file "i2c.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  s               1    wreg     unsigned char 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  s               1    4[COMMON] unsigned char 
  1384 ;;  h               1    5[COMMON] PTR unsigned char 
  1385 ;;		 -> harr(5), 
  1386 ;;  holderSel       1    3[COMMON] unsigned char 
  1387 ;;  stat            1    2[COMMON] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1397 ;;      Params:         0       0       0       0
  1398 ;;      Locals:         4       0       0       0
  1399 ;;      Temps:          2       0       0       0
  1400 ;;      Totals:         6       0       0       0
  1401 ;;Total ram usage:        6 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_handleWrite
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function _checkData
  1412  0179                     _checkData:	
  1413                           
  1414                           ;incstack = 0
  1415                           ; Regs used in _checkData: [wreg-fsr1h+status,2+status,0]
  1416                           ;checkData@s stored from wreg
  1417  0179  00F4               	movwf	checkData@s
  1418  017A                     i1l900:	
  1419                           
  1420                           ;i2c.c: 34:     unsigned char stat = (s&0b1100)>>2;
  1421  017A  0874               	movf	checkData@s,w
  1422  017B  00F0               	movwf	??_checkData
  1423  017C  3002               	movlw	2
  1424  017D                     u33_25:	
  1425  017D  36F0               	lsrf	??_checkData,f
  1426  017E  0B89               	decfsz	9,f
  1427  017F  297D               	goto	u33_25
  1428  0180  0870               	movf	??_checkData,w
  1429  0181  3903               	andlw	3
  1430  0182  00F1               	movwf	??_checkData+1
  1431  0183  0871               	movf	??_checkData+1,w
  1432  0184  00F2               	movwf	checkData@stat
  1433                           
  1434                           ;i2c.c: 35:     unsigned char holderSel = (s&0b01110000)>>4;
  1435  0185  0874               	movf	checkData@s,w
  1436  0186  00F0               	movwf	??_checkData
  1437  0187  3004               	movlw	4
  1438  0188                     u34_25:	
  1439  0188  36F0               	lsrf	??_checkData,f
  1440  0189  0B89               	decfsz	9,f
  1441  018A  2988               	goto	u34_25
  1442  018B  0870               	movf	??_checkData,w
  1443  018C  3907               	andlw	7
  1444  018D  00F1               	movwf	??_checkData+1
  1445  018E  0871               	movf	??_checkData+1,w
  1446  018F  00F3               	movwf	checkData@holderSel
  1447                           
  1448                           ;i2c.c: 37:     holder *h = &harr[holderSel];
  1449  0190  0873               	movf	checkData@holderSel,w
  1450  0191  3E2A               	addlw	(low (_harr| 0))& (0+255)
  1451  0192  00F0               	movwf	??_checkData
  1452  0193  0870               	movf	??_checkData,w
  1453  0194  00F5               	movwf	checkData@h
  1454                           
  1455                           ;i2c.c: 38:     switch(stat){
  1456  0195  29B2               	goto	i1l912
  1457  0196                     i1l902:	
  1458                           
  1459                           ;i2c.c: 40:             *h &= 0b01011111;
  1460  0196  305F               	movlw	95
  1461  0197  00F0               	movwf	??_checkData
  1462  0198  0875               	movf	checkData@h,w
  1463  0199  0086               	movwf	6
  1464  019A  0187               	clrf	7
  1465  019B  0870               	movf	??_checkData,w
  1466  019C  0581               	andwf	1,f
  1467                           
  1468                           ;i2c.c: 41:             break;
  1469  019D  29C5               	goto	i1l125
  1470  019E                     i1l904:	
  1471                           
  1472                           ;i2c.c: 43:             *h |= 0b10000000;
  1473  019E  0875               	movf	checkData@h,w
  1474  019F  0086               	movwf	6
  1475  01A0  0187               	clrf	7
  1476  01A1  1781               	bsf	1,7
  1477  01A2                     i1l906:	
  1478                           
  1479                           ;i2c.c: 44:             *h &= 0b10100000;
  1480  01A2  30A0               	movlw	160
  1481  01A3  00F0               	movwf	??_checkData
  1482  01A4  0875               	movf	checkData@h,w
  1483  01A5  0086               	movwf	6
  1484  01A6  0187               	clrf	7
  1485  01A7  0870               	movf	??_checkData,w
  1486  01A8  0581               	andwf	1,f
  1487                           
  1488                           ;i2c.c: 45:             break;
  1489  01A9  29C5               	goto	i1l125
  1490  01AA                     i1l908:	
  1491                           
  1492                           ;i2c.c: 47:             *h |= 0b11000000;
  1493  01AA  30C0               	movlw	192
  1494  01AB  00F0               	movwf	??_checkData
  1495  01AC  0875               	movf	checkData@h,w
  1496  01AD  0086               	movwf	6
  1497  01AE  0187               	clrf	7
  1498  01AF  0870               	movf	??_checkData,w
  1499  01B0  0481               	iorwf	1,f
  1500                           
  1501                           ;i2c.c: 48:             break;
  1502  01B1  29C5               	goto	i1l125
  1503  01B2                     i1l912:	
  1504  01B2  0872               	movf	checkData@stat,w
  1505  01B3  00F0               	movwf	??_checkData
  1506  01B4  01F1               	clrf	??_checkData+1
  1507                           
  1508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1509                           ; Switch size 1, requested type "simple"
  1510                           ; Number of cases is 1, Range of values is 0 to 0
  1511                           ; switch strategies available:
  1512                           ; Name         Instructions Cycles
  1513                           ; simple_byte            4     3 (average)
  1514                           ; direct_byte            8     6 (fixed)
  1515                           ; jumptable            260     6 (fixed)
  1516                           ;	Chosen strategy is simple_byte
  1517  01B5  0871               	movf	??_checkData+1,w
  1518  01B6  3A00               	xorlw	0	; case 0
  1519  01B7  1903               	skipnz
  1520  01B8  29BA               	goto	i1l1060
  1521  01B9  29C5               	goto	i1l125
  1522  01BA                     i1l1060:	
  1523                           
  1524                           ; Switch size 1, requested type "simple"
  1525                           ; Number of cases is 3, Range of values is 1 to 3
  1526                           ; switch strategies available:
  1527                           ; Name         Instructions Cycles
  1528                           ; simple_byte           10     6 (average)
  1529                           ; direct_byte           15     9 (fixed)
  1530                           ; jumptable            263     9 (fixed)
  1531                           ;	Chosen strategy is simple_byte
  1532  01BA  0870               	movf	??_checkData,w
  1533  01BB  3A01               	xorlw	1	; case 1
  1534  01BC  1903               	skipnz
  1535  01BD  2996               	goto	i1l902
  1536  01BE  3A03               	xorlw	3	; case 2
  1537  01BF  1903               	skipnz
  1538  01C0  299E               	goto	i1l904
  1539  01C1  3A01               	xorlw	1	; case 3
  1540  01C2  1903               	skipnz
  1541  01C3  29AA               	goto	i1l908
  1542  01C4  29C5               	goto	i1l125
  1543  01C5                     i1l125:	
  1544                           
  1545                           ;i2c.c: 50:     if(s&0b10){
  1546  01C5  1CF4               	btfss	checkData@s,1
  1547  01C6  29C8               	goto	u35_21
  1548  01C7  29C9               	goto	u35_20
  1549  01C8                     u35_21:	
  1550  01C8  29CC               	goto	i1l129
  1551  01C9                     u35_20:	
  1552  01C9                     i1l914:	
  1553                           
  1554                           ;i2c.c: 51:         flagUp = 1;
  1555  01C9  0020               	movlb	0	; select bank0
  1556  01CA  01A9               	clrf	_flagUp
  1557  01CB  0AA9               	incf	_flagUp,f
  1558  01CC                     i1l129:	
  1559  01CC  0008               	return
  1560  01CD                     __end_of_checkData:	
  1561                           
  1562                           	psect	text5
  1563  01F6                     __ptext5:	
  1564 ;; *************** function _handleRead *****************
  1565 ;; Defined at:
  1566 ;;		line 55 in file "i2c.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  holderSel       1    2[COMMON] unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1580 ;;      Params:         0       0       0       0
  1581 ;;      Locals:         1       0       0       0
  1582 ;;      Temps:          2       0       0       0
  1583 ;;      Totals:         3       0       0       0
  1584 ;;Total ram usage:        3 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_i2cISR
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           
  1594                           ;psect for function _handleRead
  1595  01F6                     _handleRead:	
  1596  01F6                     i1l924:	
  1597                           ;incstack = 0
  1598                           ; Regs used in _handleRead: [wreg+fsr1l+fsr1h+status,2+status,0]
  1599                           
  1600                           
  1601                           ;i2c.c: 56:     unsigned char holderSel = (i2c_settings & 0b01110000)>>4;
  1602  01F6  087B               	movf	_i2c_settings,w
  1603  01F7  00F0               	movwf	??_handleRead
  1604  01F8  3004               	movlw	4
  1605  01F9                     u36_25:	
  1606  01F9  36F0               	lsrf	??_handleRead,f
  1607  01FA  0B89               	decfsz	9,f
  1608  01FB  29F9               	goto	u36_25
  1609  01FC  0870               	movf	??_handleRead,w
  1610  01FD  3907               	andlw	7
  1611  01FE  00F1               	movwf	??_handleRead+1
  1612  01FF  0871               	movf	??_handleRead+1,w
  1613  0200  00F2               	movwf	handleRead@holderSel
  1614  0201                     i1l926:	
  1615                           
  1616                           ;i2c.c: 57:     SSP1BUF = harr[holderSel];
  1617  0201  0872               	movf	handleRead@holderSel,w
  1618  0202  3E2A               	addlw	(low (_harr| 0))& (0+255)
  1619  0203  0086               	movwf	6
  1620  0204  0187               	clrf	7
  1621  0205  0801               	movf	1,w
  1622  0206  0024               	movlb	4	; select bank4
  1623  0207  0091               	movwf	17	;volatile
  1624  0208                     i1l132:	
  1625  0208  0008               	return
  1626  0209                     __end_of_handleRead:	
  1627  007E                     btemp	set	126	;btemp
  1628  007E                     int$flags	set	126
  1629  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      9      15
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    checkData@h	PTR unsigned char  size(1) Largest target is 5
		 -> harr(BANK0[5]), 

    main@h	PTR unsigned char  size(1) Largest target is 5
		 -> harr(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_i2cISR
    _i2cISR->_handleWrite
    _handleWrite->_checkData

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     273
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  0     0      0     292
                             _i2cISR
 ---------------------------------------------------------------------------------
 (2) _i2cISR                                               2     2      0     292
                                              8 COMMON     2     2      0
                         _handleRead
                        _handleWrite
 ---------------------------------------------------------------------------------
 (3) _handleWrite                                          2     2      0     245
                                              6 COMMON     2     2      0
                          _checkData
 ---------------------------------------------------------------------------------
 (4) _checkData                                            6     6      0     201
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (3) _handleRead                                           3     3      0      23
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _i2cISR
     _handleRead
     _handleWrite
       _checkData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      9       F       6       18.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      1B      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 30 12:36:31 2019

            __CFG_CP$OFF 0000                       l60 0096                      l960 002C  
                    l970 0036                      l962 002D                      l972 0038  
                    l964 002F                      l956 001D                      l990 0055  
                    l974 003A                      l966 0032                      l958 002A  
                    l984 0043                      l976 003C                      l968 0034  
                    l994 005B                      l986 004B                      l978 0042  
                    l996 0061                      l988 004F                      l998 0066  
                    u430 0055                      u431 0054                      u600 0142  
                    u440 005B                      u601 0141                      u505 009E  
                    u441 005A                      u610 0150                      u450 0061  
           __CFG_CPD$OFF 0000                      u611 014F                      u515 00AA  
                    u451 0060                      u460 006D                      _ISR 0004  
                    u525 00BA                      u461 006C                      u630 016D  
                    u470 0079                      u631 016C                      u535 00C7  
                    u471 0078                      u640 0173                      u624 0155  
                    u480 0085                      u641 0172                      u625 0154  
                    u545 00D7                      u481 0084                      u490 0091  
                    u635 0169                      u555 00E6                      u491 0090  
                    u565 00F6                      u575 0103                      u585 0113  
                    u595 0121             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_IESO$ON 0000             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   l1000 006D                     l1010 008A                     l1002 0072  
                   l1012 0091                     l1004 0079                     l1030 0150  
                   l1022 0130                     l1014 012A                     l1006 007E  
                   l1032 015C                     l1024 0136                     l1016 012E  
                   l1008 0085                     l1034 0160                     l1026 0142  
                   l1036 016D                     l1028 0149                     l1038 0173  
                   _LATA 010C                     _PIE1 0091                     i1l52 000E  
                   _TMR0 0015                     _WPUB 020D             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _harr 002A                     _main 001D  
                   fsr1h 0007                     indf1 0001                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0010  
          __CFG_MCLRE$ON 0000                    ??_ISR 007A            __CFG_PLLEN$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    i1l110 01E5  
                  i1l120 0212                    i1l132 0208                    i1l125 01C5  
                  i1l117 01F5                    i1l129 01CC                    i1l900 017A  
                  i1l902 0196                    i1l904 019E                    i1l912 01B2  
                  i1l920 020A                    i1l914 01C9                    i1l906 01A2  
                  i1l922 020E                    i1l930 01CD                    i1l924 01F6  
                  i1l908 01AA                    i1l940 01E0                    i1l932 01CF  
                  i1l926 0201                    i1l950 01F4                    i1l942 01E9  
                  i1l934 01D4                    i1l944 01ED                    i1l936 01D8  
                  i1l928 01CD                    i1l952 0006                    i1l946 01EF  
                  i1l938 01DC                    i1l954 000B                    i1l948 01F2  
                  u40_20 01E9                    u40_21 01E8                    u41_20 01ED  
                  u41_21 01EC                    u33_25 017D                    u42_20 000B  
                  u42_21 000A                    u34_25 0188                    u35_20 01C9  
                  u35_21 01C8                    u36_25 01F9                    u37_20 01D8  
                  u37_21 01D7                    u38_20 01DC                    u38_21 01DB  
                  u39_20 01E0                    u39_21 01DF                    _TRISA 008C  
                  _TRISB 008D                    _debug 007A                    main@h 0025  
                  main@i 0026                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0179                   ??_main 0020  
     checkData@holderSel 0073            checkData@stat 0072     __size_of_handleWrite 000A  
                 _ANSELA 018C                   _ANSELB 018D                   i1l1060 01BA  
                 _INTCON 000B                   _OSCCON 0099                   _SSP1IF 008B  
                 _i2cISR 01CD           __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000  
                 _flagUp 0029  __end_of__initialization 001A           __pcstackCOMMON 0070  
     __size_of_checkData 0054               __pbssBANK0 0029                  ?_i2cISR 0070  
             __pmaintext 001D           main@lataClosed 0024               __pintentry 0004  
             _handleRead 01F6                  i2cISR@d 0079                  _SSP1ADD 0212  
                _SSP1BUF 0211        __end_of_checkData 01CD               checkData@h 0075  
             checkData@s 0074          __size_of_i2cISR 0029                  __ptext2 01CD  
                __ptext3 0209                  __ptext4 0179                  __ptext5 01F6  
           __size_of_ISR 000C     end_of_initialization 001A              ?_handleRead 0070  
              _PORTBbits 000D            ??_handleWrite 0076         __CFG_FOSC$INTOSC 0000  
         __end_of_i2cISR 01F6             _i2c_settings 007B      start_initialization 0011  
            __end_of_ISR 0010      __end_of_handleWrite 0213      __size_of_handleRead 0013  
               ??_i2cISR 0078      handleRead@holderSel 0072              __pbssCOMMON 007A  
              ___latbits 0000            __pcstackBANK0 0020                _checkData 0179  
            _handleWrite 0209               ?_checkData 0070                 _SSP1CON1 0215  
               _SSP1CON2 0216                 _SSP1CON3 0217                 _SSP1STAT 0214  
           ??_handleRead 0070       __end_of_handleRead 0209             _SSP1CON1bits 0215  
           _SSP1CON2bits 0216             _SSP1CON3bits 0217              ??_checkData 0070  
          __size_of_main 015C                 int$flags 007E                 main@i_89 0027  
               main@flag 0023             _SSP1STATbits 0214                 intlevel1 0000  
           handleWrite@d 0077        __CFG_CLKOUTEN$OFF 0000               _OPTION_REG 0095  
           ?_handleWrite 0070  
