

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 30 12:30:42 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1826
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F1826 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  008C                     	;# 
    78  008D                     	;# 
    79  0091                     	;# 
    80  0092                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  010C                     	;# 
    93  010D                     	;# 
    94  0111                     	;# 
    95  0112                     	;# 
    96  0113                     	;# 
    97  0114                     	;# 
    98  0115                     	;# 
    99  0116                     	;# 
   100  0117                     	;# 
   101  0118                     	;# 
   102  0119                     	;# 
   103  011A                     	;# 
   104  011B                     	;# 
   105  011D                     	;# 
   106  011E                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0191                     	;# 
   110  0191                     	;# 
   111  0192                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0194                     	;# 
   116  0195                     	;# 
   117  0196                     	;# 
   118  0199                     	;# 
   119  019A                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019C                     	;# 
   125  019C                     	;# 
   126  019D                     	;# 
   127  019E                     	;# 
   128  019F                     	;# 
   129  020C                     	;# 
   130  020D                     	;# 
   131  0211                     	;# 
   132  0211                     	;# 
   133  0212                     	;# 
   134  0212                     	;# 
   135  0213                     	;# 
   136  0213                     	;# 
   137  0214                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0216                     	;# 
   143  0216                     	;# 
   144  0217                     	;# 
   145  0217                     	;# 
   146  0291                     	;# 
   147  0291                     	;# 
   148  0292                     	;# 
   149  0293                     	;# 
   150  0294                     	;# 
   151  0295                     	;# 
   152  0295                     	;# 
   153  0296                     	;# 
   154  0394                     	;# 
   155  0395                     	;# 
   156  0396                     	;# 
   157  039A                     	;# 
   158  039C                     	;# 
   159  039D                     	;# 
   160  039E                     	;# 
   161  039F                     	;# 
   162  0FE4                     	;# 
   163  0FE5                     	;# 
   164  0FE6                     	;# 
   165  0FE7                     	;# 
   166  0FE8                     	;# 
   167  0FE9                     	;# 
   168  0FEA                     	;# 
   169  0FEB                     	;# 
   170  0FED                     	;# 
   171  0FEE                     	;# 
   172  0FEF                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  0111                     	;# 
   218  0112                     	;# 
   219  0113                     	;# 
   220  0114                     	;# 
   221  0115                     	;# 
   222  0116                     	;# 
   223  0117                     	;# 
   224  0118                     	;# 
   225  0119                     	;# 
   226  011A                     	;# 
   227  011B                     	;# 
   228  011D                     	;# 
   229  011E                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0191                     	;# 
   233  0191                     	;# 
   234  0192                     	;# 
   235  0193                     	;# 
   236  0193                     	;# 
   237  0193                     	;# 
   238  0194                     	;# 
   239  0195                     	;# 
   240  0196                     	;# 
   241  0199                     	;# 
   242  019A                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019B                     	;# 
   247  019C                     	;# 
   248  019C                     	;# 
   249  019D                     	;# 
   250  019E                     	;# 
   251  019F                     	;# 
   252  020C                     	;# 
   253  020D                     	;# 
   254  0211                     	;# 
   255  0211                     	;# 
   256  0212                     	;# 
   257  0212                     	;# 
   258  0213                     	;# 
   259  0213                     	;# 
   260  0214                     	;# 
   261  0214                     	;# 
   262  0215                     	;# 
   263  0215                     	;# 
   264  0215                     	;# 
   265  0216                     	;# 
   266  0216                     	;# 
   267  0217                     	;# 
   268  0217                     	;# 
   269  0291                     	;# 
   270  0291                     	;# 
   271  0292                     	;# 
   272  0293                     	;# 
   273  0294                     	;# 
   274  0295                     	;# 
   275  0295                     	;# 
   276  0296                     	;# 
   277  0394                     	;# 
   278  0395                     	;# 
   279  0396                     	;# 
   280  039A                     	;# 
   281  039C                     	;# 
   282  039D                     	;# 
   283  039E                     	;# 
   284  039F                     	;# 
   285  0FE4                     	;# 
   286  0FE5                     	;# 
   287  0FE6                     	;# 
   288  0FE7                     	;# 
   289  0FE8                     	;# 
   290  0FE9                     	;# 
   291  0FEA                     	;# 
   292  0FEB                     	;# 
   293  0FED                     	;# 
   294  0FEE                     	;# 
   295  0FEF                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  0091                     	;# 
   326  0092                     	;# 
   327  0095                     	;# 
   328  0096                     	;# 
   329  0097                     	;# 
   330  0098                     	;# 
   331  0099                     	;# 
   332  009A                     	;# 
   333  009B                     	;# 
   334  009B                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009E                     	;# 
   338  010C                     	;# 
   339  010D                     	;# 
   340  0111                     	;# 
   341  0112                     	;# 
   342  0113                     	;# 
   343  0114                     	;# 
   344  0115                     	;# 
   345  0116                     	;# 
   346  0117                     	;# 
   347  0118                     	;# 
   348  0119                     	;# 
   349  011A                     	;# 
   350  011B                     	;# 
   351  011D                     	;# 
   352  011E                     	;# 
   353  018C                     	;# 
   354  018D                     	;# 
   355  0191                     	;# 
   356  0191                     	;# 
   357  0192                     	;# 
   358  0193                     	;# 
   359  0193                     	;# 
   360  0193                     	;# 
   361  0194                     	;# 
   362  0195                     	;# 
   363  0196                     	;# 
   364  0199                     	;# 
   365  019A                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019C                     	;# 
   371  019C                     	;# 
   372  019D                     	;# 
   373  019E                     	;# 
   374  019F                     	;# 
   375  020C                     	;# 
   376  020D                     	;# 
   377  0211                     	;# 
   378  0211                     	;# 
   379  0212                     	;# 
   380  0212                     	;# 
   381  0213                     	;# 
   382  0213                     	;# 
   383  0214                     	;# 
   384  0214                     	;# 
   385  0215                     	;# 
   386  0215                     	;# 
   387  0215                     	;# 
   388  0216                     	;# 
   389  0216                     	;# 
   390  0217                     	;# 
   391  0217                     	;# 
   392  0291                     	;# 
   393  0291                     	;# 
   394  0292                     	;# 
   395  0293                     	;# 
   396  0294                     	;# 
   397  0295                     	;# 
   398  0295                     	;# 
   399  0296                     	;# 
   400  0394                     	;# 
   401  0395                     	;# 
   402  0396                     	;# 
   403  039A                     	;# 
   404  039C                     	;# 
   405  039D                     	;# 
   406  039E                     	;# 
   407  039F                     	;# 
   408  0FE4                     	;# 
   409  0FE5                     	;# 
   410  0FE6                     	;# 
   411  0FE7                     	;# 
   412  0FE8                     	;# 
   413  0FE9                     	;# 
   414  0FEA                     	;# 
   415  0FEB                     	;# 
   416  0FED                     	;# 
   417  0FEE                     	;# 
   418  0FEF                     	;# 
   419  000D                     _PORTBbits	set	13
   420  0015                     _TMR0	set	21
   421  000B                     _INTCON	set	11
   422  008B                     _SSP1IF	set	139
   423  008D                     _TRISB	set	141
   424  008C                     _TRISA	set	140
   425  0091                     _PIE1	set	145
   426  0095                     _OPTION_REG	set	149
   427  0099                     _OSCCON	set	153
   428  010C                     _LATA	set	268
   429  018D                     _ANSELB	set	397
   430  018C                     _ANSELA	set	396
   431  0215                     _SSP1CON1bits	set	533
   432  0216                     _SSP1CON2bits	set	534
   433  0214                     _SSP1STATbits	set	532
   434  0217                     _SSP1CON3bits	set	535
   435  0211                     _SSP1BUF	set	529
   436  0212                     _SSP1ADD	set	530
   437  0217                     _SSP1CON3	set	535
   438  0216                     _SSP1CON2	set	534
   439  0215                     _SSP1CON1	set	533
   440  0214                     _SSP1STAT	set	532
   441  020D                     _WPUB	set	525
   442                           
   443                           ; #config settings
   444  0000                     
   445                           	psect	cinit
   446  0011                     start_initialization:	
   447  0011                     __initialization:	
   448                           
   449                           ; Clear objects allocated to COMMON
   450  0011  01FA               	clrf	__pbssCOMMON& (0+127)
   451  0012  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   452                           
   453                           ; Clear objects allocated to BANK0
   454  0013  0020               	movlb	0	; select bank0
   455  0014  01A9               	clrf	__pbssBANK0& (0+127)
   456  0015  01AA               	clrf	(__pbssBANK0+1)& (0+127)
   457  0016  01AB               	clrf	(__pbssBANK0+2)& (0+127)
   458  0017  01AC               	clrf	(__pbssBANK0+3)& (0+127)
   459  0018  01AD               	clrf	(__pbssBANK0+4)& (0+127)
   460  0019  01AE               	clrf	(__pbssBANK0+5)& (0+127)
   461  001A                     end_of_initialization:	
   462                           ;End of C runtime variable initialization code
   463                           
   464  001A                     __end_of__initialization:	
   465  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   466  001B  0020               	movlb	0
   467  001C  281D               	ljmp	_main	;jump to C main() function
   468                           
   469                           	psect	bssCOMMON
   470  007A                     __pbssCOMMON:	
   471  007A                     _debug:	
   472  007A                     	ds	1
   473  007B                     _i2c_settings:	
   474  007B                     	ds	1
   475                           
   476                           	psect	bssBANK0
   477  0029                     __pbssBANK0:	
   478  0029                     _flagUp:	
   479  0029                     	ds	1
   480  002A                     _harr:	
   481  002A                     	ds	5
   482                           
   483                           	psect	cstackCOMMON
   484  0070                     __pcstackCOMMON:	
   485  0070                     ?_i2cISR:	
   486  0070                     ?_handleWrite:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_checkData:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ??_checkData:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_ISR:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_main:	
   499                           ; 1 bytes @ 0x0
   500                           
   501                           
   502                           ; 1 bytes @ 0x0
   503  0070                     	ds	2
   504  0072                     checkData@stat:	
   505                           
   506                           ; 1 bytes @ 0x2
   507  0072                     	ds	1
   508  0073                     checkData@holderSel:	
   509                           
   510                           ; 1 bytes @ 0x3
   511  0073                     	ds	1
   512  0074                     checkData@s:	
   513                           
   514                           ; 1 bytes @ 0x4
   515  0074                     	ds	1
   516  0075                     checkData@h:	
   517                           
   518                           ; 1 bytes @ 0x5
   519  0075                     	ds	1
   520  0076                     ??_handleWrite:	
   521                           
   522                           ; 1 bytes @ 0x6
   523  0076                     	ds	1
   524  0077                     handleWrite@d:	
   525                           
   526                           ; 1 bytes @ 0x7
   527  0077                     	ds	1
   528  0078                     ??_i2cISR:	
   529                           
   530                           ; 1 bytes @ 0x8
   531  0078                     	ds	1
   532  0079                     i2cISR@d:	
   533                           
   534                           ; 1 bytes @ 0x9
   535  0079                     	ds	1
   536  007A                     ??_ISR:	
   537                           
   538                           	psect	cstackBANK0
   539  0020                     __pcstackBANK0:	
   540                           ; 1 bytes @ 0xA
   541                           
   542  0020                     ??_main:	
   543                           
   544                           ; 1 bytes @ 0x0
   545  0020                     	ds	3
   546  0023                     main@flag:	
   547                           
   548                           ; 1 bytes @ 0x3
   549  0023                     	ds	1
   550  0024                     main@lataClosed:	
   551                           
   552                           ; 1 bytes @ 0x4
   553  0024                     	ds	1
   554  0025                     main@h:	
   555                           
   556                           ; 1 bytes @ 0x5
   557  0025                     	ds	1
   558  0026                     main@i:	
   559                           
   560                           ; 1 bytes @ 0x6
   561  0026                     	ds	1
   562  0027                     main@i_89:	
   563                           
   564                           ; 2 bytes @ 0x7
   565  0027                     	ds	2
   566                           
   567                           	psect	maintext
   568  001D                     __pmaintext:	
   569 ;;
   570 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   571 ;;
   572 ;; *************** function _main *****************
   573 ;; Defined at:
   574 ;;		line 58 in file "main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;  h               1    5[BANK0 ] PTR unsigned char 
   579 ;;		 -> harr(5), 
   580 ;;  i               2    7[BANK0 ] int 
   581 ;;  i               1    6[BANK0 ] unsigned char 
   582 ;;  lataClosed      1    4[BANK0 ] unsigned char 
   583 ;;  flag            1    3[BANK0 ] unsigned char 
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   588 ;; Tracked objects:
   589 ;;		On entry : B1F/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   593 ;;      Params:         0       0       0       0
   594 ;;      Locals:         0       6       0       0
   595 ;;      Temps:          0       3       0       0
   596 ;;      Totals:         0       9       0       0
   597 ;;Total ram usage:        9 bytes
   598 ;; Hardware stack levels required when called:    4
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		Startup code after reset
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _main
   608  001D                     _main:	
   609  001D                     l945:	
   610                           ;incstack = 0
   611                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0]
   612                           
   613                           
   614                           ;main.c: 59:     OSCCON = 0b01111010;
   615  001D  307A               	movlw	122
   616  001E  0021               	movlb	1	; select bank1
   617  001F  0099               	movwf	25	;volatile
   618                           
   619                           ;main.c: 60:     OPTION_REG = 0b00000111;
   620  0020  3007               	movlw	7
   621  0021  0095               	movwf	21	;volatile
   622                           
   623                           ;main.c: 61:     INTCON = 0b11000000;
   624  0022  30C0               	movlw	192
   625  0023  008B               	movwf	11	;volatile
   626                           
   627                           ;main.c: 62:     PIE1 = 0b00001000;
   628  0024  3008               	movlw	8
   629  0025  0091               	movwf	17	;volatile
   630                           
   631                           ;main.c: 68:     TRISA = 0b00100000;
   632  0026  3020               	movlw	32
   633  0027  008C               	movwf	12	;volatile
   634                           
   635                           ;main.c: 69:     TRISB = 0b01111111;
   636  0028  307F               	movlw	127
   637  0029  008D               	movwf	13	;volatile
   638  002A                     l947:	
   639                           
   640                           ;main.c: 70:     ANSELA = 0;
   641  002A  0023               	movlb	3	; select bank3
   642  002B  018C               	clrf	12	;volatile
   643  002C                     l949:	
   644                           
   645                           ;main.c: 71:     ANSELB = 0;
   646  002C  018D               	clrf	13	;volatile
   647  002D                     l951:	
   648                           
   649                           ;main.c: 72:     LATA = 0;
   650  002D  0022               	movlb	2	; select bank2
   651  002E  018C               	clrf	12	;volatile
   652  002F                     l953:	
   653                           
   654                           ;main.c: 73:     WPUB = 0b01111111;
   655  002F  307F               	movlw	127
   656  0030  0024               	movlb	4	; select bank4
   657  0031  008D               	movwf	13	;volatile
   658  0032                     l955:	
   659                           
   660                           ;main.c: 76:     SSP1STAT = 0b01000000;
   661  0032  3040               	movlw	64
   662  0033  0094               	movwf	20	;volatile
   663  0034                     l957:	
   664                           
   665                           ;main.c: 77:     SSP1CON1 = 0b00100110;
   666  0034  3026               	movlw	38
   667  0035  0095               	movwf	21	;volatile
   668  0036                     l959:	
   669                           
   670                           ;main.c: 78:     SSP1CON2 = 0b00000001;
   671  0036  3001               	movlw	1
   672  0037  0096               	movwf	22	;volatile
   673  0038                     l961:	
   674                           
   675                           ;main.c: 79:     SSP1CON3 = 0b00101011;
   676  0038  302B               	movlw	43
   677  0039  0097               	movwf	23	;volatile
   678  003A                     l963:	
   679                           
   680                           ;main.c: 80:     SSP1ADD = 0b00110100;
   681  003A  3034               	movlw	52
   682  003B  0092               	movwf	18	;volatile
   683  003C                     l965:	
   684                           
   685                           ;main.c: 82:     flagUp = 0;
   686  003C  0020               	movlb	0	; select bank0
   687  003D  01A9               	clrf	_flagUp
   688                           
   689                           ;main.c: 83:     unsigned char flag = 0b11111111;
   690  003E  30FF               	movlw	255
   691  003F  00A0               	movwf	??_main
   692  0040  0820               	movf	??_main,w
   693  0041  00A3               	movwf	main@flag
   694  0042                     l967:	
   695                           
   696                           ;main.c: 85:     for(char i=0;i<5;i++){
   697  0042  01A6               	clrf	main@i
   698  0043                     l973:	
   699                           
   700                           ;main.c: 86:         harr[i] = 0b10000000;
   701  0043  3080               	movlw	128
   702  0044  00A0               	movwf	??_main
   703  0045  0826               	movf	main@i,w
   704  0046  3E2A               	addlw	(low (_harr| 0))& (0+255)
   705  0047  0086               	movwf	6
   706  0048  0187               	clrf	7
   707  0049  0820               	movf	??_main,w
   708  004A  0081               	movwf	1
   709  004B                     l975:	
   710                           
   711                           ;main.c: 87:     }
   712  004B  3001               	movlw	1
   713  004C  00A0               	movwf	??_main
   714  004D  0820               	movf	??_main,w
   715  004E  07A6               	addwf	main@i,f
   716  004F                     l977:	
   717  004F  3005               	movlw	5
   718  0050  0226               	subwf	main@i,w
   719  0051  1C03               	skipc
   720  0052  2854               	goto	u391
   721  0053  2855               	goto	u390
   722  0054                     u391:	
   723  0054  2843               	goto	l973
   724  0055                     u390:	
   725  0055                     l979:	
   726                           
   727                           ;main.c: 94:         if(TMR0 > 240){
   728  0055  30F1               	movlw	241
   729  0056  0215               	subwf	21,w	;volatile
   730  0057  1C03               	skipc
   731  0058  285A               	goto	u401
   732  0059  285B               	goto	u400
   733  005A                     u401:	
   734  005A  2896               	goto	l60
   735  005B                     u400:	
   736  005B                     l983:	
   737  005B  30F1               	movlw	241
   738  005C  0215               	subwf	21,w	;volatile
   739  005D  1803               	skipnc
   740  005E  2860               	goto	u411
   741  005F  2861               	goto	u410
   742  0060                     u411:	
   743  0060  285B               	goto	l983
   744  0061                     u410:	
   745  0061                     l985:	
   746                           
   747                           ;main.c: 96:             LATA |= 0b01101111;
   748  0061  306F               	movlw	111
   749  0062  00A0               	movwf	??_main
   750  0063  0820               	movf	??_main,w
   751  0064  0022               	movlb	2	; select bank2
   752  0065  048C               	iorwf	12,f	;volatile
   753  0066                     l987:	
   754                           ;main.c: 97:             while(TMR0 < 11);
   755                           
   756  0066  300B               	movlw	11
   757  0067  0020               	movlb	0	; select bank0
   758  0068  0215               	subwf	21,w	;volatile
   759  0069  1C03               	skipc
   760  006A  286C               	goto	u421
   761  006B  286D               	goto	u420
   762  006C                     u421:	
   763  006C  2866               	goto	l987
   764  006D                     u420:	
   765  006D                     l989:	
   766                           
   767                           ;main.c: 98:             LATA &= flag;
   768  006D  0823               	movf	main@flag,w	;volatile
   769  006E  00A0               	movwf	??_main
   770  006F  0820               	movf	??_main,w
   771  0070  0022               	movlb	2	; select bank2
   772  0071  058C               	andwf	12,f	;volatile
   773  0072                     l991:	
   774                           ;main.c: 99:             while(TMR0 < 21);
   775                           
   776  0072  3015               	movlw	21
   777  0073  0020               	movlb	0	; select bank0
   778  0074  0215               	subwf	21,w	;volatile
   779  0075  1C03               	skipc
   780  0076  2878               	goto	u431
   781  0077  2879               	goto	u430
   782  0078                     u431:	
   783  0078  2872               	goto	l991
   784  0079                     u430:	
   785  0079                     l993:	
   786                           
   787                           ;main.c: 100:             LATA &= lataClosed;
   788  0079  0824               	movf	main@lataClosed,w	;volatile
   789  007A  00A0               	movwf	??_main
   790  007B  0820               	movf	??_main,w
   791  007C  0022               	movlb	2	; select bank2
   792  007D  058C               	andwf	12,f	;volatile
   793  007E                     l995:	
   794                           ;main.c: 101:             while(TMR0 < 28);
   795                           
   796  007E  301C               	movlw	28
   797  007F  0020               	movlb	0	; select bank0
   798  0080  0215               	subwf	21,w	;volatile
   799  0081  1C03               	skipc
   800  0082  2884               	goto	u441
   801  0083  2885               	goto	u440
   802  0084                     u441:	
   803  0084  287E               	goto	l995
   804  0085                     u440:	
   805  0085                     l997:	
   806                           
   807                           ;main.c: 102:             LATA &= 0b10111111;
   808  0085  30BF               	movlw	191
   809  0086  00A0               	movwf	??_main
   810  0087  0820               	movf	??_main,w
   811  0088  0022               	movlb	2	; select bank2
   812  0089  058C               	andwf	12,f	;volatile
   813  008A                     l999:	
   814                           ;main.c: 103:             while(TMR0 < 36);
   815                           
   816  008A  3024               	movlw	36
   817  008B  0020               	movlb	0	; select bank0
   818  008C  0215               	subwf	21,w	;volatile
   819  008D  1C03               	skipc
   820  008E  2890               	goto	u451
   821  008F  2891               	goto	u450
   822  0090                     u451:	
   823  0090  288A               	goto	l999
   824  0091                     u450:	
   825  0091                     l1001:	
   826                           
   827                           ;main.c: 104:             LATA &= 0b10100000;
   828  0091  30A0               	movlw	160
   829  0092  00A0               	movwf	??_main
   830  0093  0820               	movf	??_main,w
   831  0094  0022               	movlb	2	; select bank2
   832  0095  058C               	andwf	12,f	;volatile
   833  0096                     l60:	
   834                           ;main.c: 105:         }
   835                           
   836                           
   837                           ;main.c: 106:         harr[0]|=(!PORTBbits.RB0<<5); harr[0]&=~(!!PORTBbits.RB0<<5);;
   838  0096  1003               	clrc
   839  0097  0020               	movlb	0	; select bank0
   840  0098  1C0D               	btfss	13,0	;volatile
   841  0099  1403               	setc
   842  009A  3000               	movlw	0
   843  009B  3D09               	addwfc	9,w
   844  009C  00A0               	movwf	??_main
   845  009D  3004               	movlw	4
   846  009E                     u465:	
   847  009E  35A0               	lslf	??_main,f
   848  009F  3EFF               	addlw	-1
   849  00A0  1D03               	skipz
   850  00A1  289E               	goto	u465
   851  00A2  3520               	lslf	??_main,w
   852  00A3  00A1               	movwf	??_main+1
   853  00A4  0821               	movf	??_main+1,w
   854  00A5  04AA               	iorwf	_harr,f
   855  00A6  080D               	movf	13,w	;volatile
   856  00A7  3901               	andlw	1
   857  00A8  00A0               	movwf	??_main
   858  00A9  3004               	movlw	4
   859  00AA                     u475:	
   860  00AA  35A0               	lslf	??_main,f
   861  00AB  3EFF               	addlw	-1
   862  00AC  1D03               	skipz
   863  00AD  28AA               	goto	u475
   864  00AE  3520               	lslf	??_main,w
   865  00AF  3AFF               	xorlw	255
   866  00B0  00A1               	movwf	??_main+1
   867  00B1  0821               	movf	??_main+1,w
   868  00B2  05AA               	andwf	_harr,f
   869                           
   870                           ;main.c: 107:         harr[1]|=(!PORTBbits.RB2<<5); harr[1]&=~(!!PORTBbits.RB2<<5);;
   871  00B3  1003               	clrc
   872  00B4  1D0D               	btfss	13,2	;volatile
   873  00B5  1403               	setc
   874  00B6  3000               	movlw	0
   875  00B7  3D09               	addwfc	9,w
   876  00B8  00A0               	movwf	??_main
   877  00B9  3004               	movlw	4
   878  00BA                     u485:	
   879  00BA  35A0               	lslf	??_main,f
   880  00BB  3EFF               	addlw	-1
   881  00BC  1D03               	skipz
   882  00BD  28BA               	goto	u485
   883  00BE  3520               	lslf	??_main,w
   884  00BF  00A1               	movwf	??_main+1
   885  00C0  0821               	movf	??_main+1,w
   886  00C1  04AB               	iorwf	_harr+1,f
   887  00C2  0C0D               	rrf	13,w	;volatile
   888  00C3  0C89               	rrf	9,f
   889  00C4  3901               	andlw	1
   890  00C5  00A0               	movwf	??_main
   891  00C6  3004               	movlw	4
   892  00C7                     u495:	
   893  00C7  35A0               	lslf	??_main,f
   894  00C8  3EFF               	addlw	-1
   895  00C9  1D03               	skipz
   896  00CA  28C7               	goto	u495
   897  00CB  3520               	lslf	??_main,w
   898  00CC  3AFF               	xorlw	255
   899  00CD  00A1               	movwf	??_main+1
   900  00CE  0821               	movf	??_main+1,w
   901  00CF  05AB               	andwf	_harr+1,f
   902                           
   903                           ;main.c: 108:         harr[2]|=(!PORTBbits.RB3<<5); harr[2]&=~(!!PORTBbits.RB3<<5);;
   904  00D0  1003               	clrc
   905  00D1  1D8D               	btfss	13,3	;volatile
   906  00D2  1403               	setc
   907  00D3  3000               	movlw	0
   908  00D4  3D09               	addwfc	9,w
   909  00D5  00A0               	movwf	??_main
   910  00D6  3004               	movlw	4
   911  00D7                     u505:	
   912  00D7  35A0               	lslf	??_main,f
   913  00D8  3EFF               	addlw	-1
   914  00D9  1D03               	skipz
   915  00DA  28D7               	goto	u505
   916  00DB  3520               	lslf	??_main,w
   917  00DC  00A1               	movwf	??_main+1
   918  00DD  0821               	movf	??_main+1,w
   919  00DE  04AC               	iorwf	_harr+2,f
   920  00DF  0C0D               	rrf	13,w	;volatile
   921  00E0  00A0               	movwf	??_main
   922  00E1  0CA0               	rrf	??_main,f
   923  00E2  0C20               	rrf	??_main,w
   924  00E3  3901               	andlw	1
   925  00E4  00A1               	movwf	??_main+1
   926  00E5  3004               	movlw	4
   927  00E6                     u515:	
   928  00E6  35A1               	lslf	??_main+1,f
   929  00E7  3EFF               	addlw	-1
   930  00E8  1D03               	skipz
   931  00E9  28E6               	goto	u515
   932  00EA  3521               	lslf	??_main+1,w
   933  00EB  3AFF               	xorlw	255
   934  00EC  00A2               	movwf	??_main+2
   935  00ED  0822               	movf	??_main+2,w
   936  00EE  05AC               	andwf	_harr+2,f
   937                           
   938                           ;main.c: 109:         harr[3]|=(!PORTBbits.RB5<<5); harr[3]&=~(!!PORTBbits.RB5<<5);;
   939  00EF  1003               	clrc
   940  00F0  1E8D               	btfss	13,5	;volatile
   941  00F1  1403               	setc
   942  00F2  3000               	movlw	0
   943  00F3  3D09               	addwfc	9,w
   944  00F4  00A0               	movwf	??_main
   945  00F5  3004               	movlw	4
   946  00F6                     u525:	
   947  00F6  35A0               	lslf	??_main,f
   948  00F7  3EFF               	addlw	-1
   949  00F8  1D03               	skipz
   950  00F9  28F6               	goto	u525
   951  00FA  3520               	lslf	??_main,w
   952  00FB  00A1               	movwf	??_main+1
   953  00FC  0821               	movf	??_main+1,w
   954  00FD  04AD               	iorwf	_harr+3,f
   955  00FE  0E0D               	swapf	13,w	;volatile
   956  00FF  0C89               	rrf	9,f
   957  0100  3901               	andlw	1
   958  0101  00A0               	movwf	??_main
   959  0102  3004               	movlw	4
   960  0103                     u535:	
   961  0103  35A0               	lslf	??_main,f
   962  0104  3EFF               	addlw	-1
   963  0105  1D03               	skipz
   964  0106  2903               	goto	u535
   965  0107  3520               	lslf	??_main,w
   966  0108  3AFF               	xorlw	255
   967  0109  00A1               	movwf	??_main+1
   968  010A  0821               	movf	??_main+1,w
   969  010B  05AD               	andwf	_harr+3,f
   970                           
   971                           ;main.c: 110:         harr[4]|=(!PORTBbits.RB6<<5); harr[4]&=~(!!PORTBbits.RB6<<5);;
   972  010C  1003               	clrc
   973  010D  1F0D               	btfss	13,6	;volatile
   974  010E  1403               	setc
   975  010F  3000               	movlw	0
   976  0110  3D09               	addwfc	9,w
   977  0111  00A0               	movwf	??_main
   978  0112  3004               	movlw	4
   979  0113                     u545:	
   980  0113  35A0               	lslf	??_main,f
   981  0114  3EFF               	addlw	-1
   982  0115  1D03               	skipz
   983  0116  2913               	goto	u545
   984  0117  3520               	lslf	??_main,w
   985  0118  00A1               	movwf	??_main+1
   986  0119  0821               	movf	??_main+1,w
   987  011A  04AE               	iorwf	_harr+4,f
   988  011B  0E0D               	swapf	13,w	;volatile
   989  011C  0C89               	rrf	9,f
   990  011D  0C89               	rrf	9,f
   991  011E  3901               	andlw	1
   992  011F  00A0               	movwf	??_main
   993  0120  3004               	movlw	4
   994  0121                     u555:	
   995  0121  35A0               	lslf	??_main,f
   996  0122  3EFF               	addlw	-1
   997  0123  1D03               	skipz
   998  0124  2921               	goto	u555
   999  0125  3520               	lslf	??_main,w
  1000  0126  3AFF               	xorlw	255
  1001  0127  00A1               	movwf	??_main+1
  1002  0128  0821               	movf	??_main+1,w
  1003  0129  05AE               	andwf	_harr+4,f
  1004  012A                     l1003:	
  1005                           
  1006                           ;main.c: 112:         lataClosed = 0b11111111;
  1007  012A  30FF               	movlw	255
  1008  012B  00A0               	movwf	??_main
  1009  012C  0820               	movf	??_main,w
  1010  012D  00A4               	movwf	main@lataClosed
  1011  012E                     l1005:	
  1012                           
  1013                           ;main.c: 114:         for(int i=0;i<5;i++){
  1014  012E  01A7               	clrf	main@i_89
  1015  012F  01A8               	clrf	main@i_89+1
  1016  0130                     l1011:	
  1017                           
  1018                           ;main.c: 115:             holder *h = &harr[i];
  1019  0130  0020               	movlb	0	; select bank0
  1020  0131  0827               	movf	main@i_89,w
  1021  0132  3E2A               	addlw	(low (_harr| 0))& (0+255)
  1022  0133  00A0               	movwf	??_main
  1023  0134  0820               	movf	??_main,w
  1024  0135  00A5               	movwf	main@h
  1025  0136                     l1013:	
  1026                           
  1027                           ;main.c: 116:             if((*h & 0b01100000)==0b01100000){
  1028  0136  0825               	movf	main@h,w
  1029  0137  0086               	movwf	6
  1030  0138  0187               	clrf	7
  1031  0139  3060               	movlw	96
  1032  013A  0501               	andwf	1,w
  1033  013B  00A0               	movwf	??_main
  1034  013C  3060               	movlw	96
  1035  013D  0620               	xorwf	??_main,w
  1036  013E  1D03               	btfss	3,2
  1037  013F  2941               	goto	u561
  1038  0140  2942               	goto	u560
  1039  0141                     u561:	
  1040  0141  2949               	goto	l1017
  1041  0142                     u560:	
  1042  0142                     l1015:	
  1043                           
  1044                           ;main.c: 117:                 *h &= 0b00111111;
  1045  0142  303F               	movlw	63
  1046  0143  00A0               	movwf	??_main
  1047  0144  0825               	movf	main@h,w
  1048  0145  0086               	movwf	6
  1049  0146  0187               	clrf	7
  1050  0147  0820               	movf	??_main,w
  1051  0148  0581               	andwf	1,f
  1052  0149                     l1017:	
  1053  0149  0825               	movf	main@h,w
  1054  014A  0086               	movwf	6
  1055  014B  0187               	clrf	7
  1056  014C  1B81               	btfsc	1,7
  1057  014D  294F               	goto	u571
  1058  014E  2950               	goto	u570
  1059  014F                     u571:	
  1060  014F  295C               	goto	l1021
  1061  0150                     u570:	
  1062  0150                     l1019:	
  1063                           
  1064                           ;main.c: 119:                 lataClosed &= ~(1<<i);
  1065  0150  3001               	movlw	1
  1066  0151  00A0               	movwf	??_main
  1067  0152  0A27               	incf	main@i_89,w
  1068  0153  2955               	goto	u584
  1069  0154                     u585:	
  1070  0154  35A0               	lslf	??_main,f
  1071  0155                     u584:	
  1072  0155  0B89               	decfsz	9,f
  1073  0156  2954               	goto	u585
  1074  0157  0820               	movf	??_main,w
  1075  0158  3AFF               	xorlw	255
  1076  0159  00A1               	movwf	??_main+1
  1077  015A  0821               	movf	??_main+1,w
  1078  015B  05A4               	andwf	main@lataClosed,f
  1079  015C                     l1021:	
  1080                           
  1081                           ;main.c: 120:         }
  1082  015C  3001               	movlw	1
  1083  015D  07A7               	addwf	main@i_89,f
  1084  015E  3000               	movlw	0
  1085  015F  3DA8               	addwfc	main@i_89+1,f
  1086  0160                     l1023:	
  1087  0160  0828               	movf	main@i_89+1,w
  1088  0161  3A80               	xorlw	128
  1089  0162  00A0               	movwf	??_main
  1090  0163  3080               	movlw	128
  1091  0164  0220               	subwf	??_main,w
  1092  0165  1D03               	skipz
  1093  0166  2969               	goto	u595
  1094  0167  3005               	movlw	5
  1095  0168  0227               	subwf	main@i_89,w
  1096  0169                     u595:	
  1097  0169  1C03               	skipc
  1098  016A  296C               	goto	u591
  1099  016B  296D               	goto	u590
  1100  016C                     u591:	
  1101  016C  2930               	goto	l1011
  1102  016D                     u590:	
  1103  016D                     l1025:	
  1104                           
  1105                           ;main.c: 122:         if(flagUp)
  1106  016D  0020               	movlb	0	; select bank0
  1107  016E  0829               	movf	_flagUp,w
  1108  016F  1903               	btfsc	3,2
  1109  0170  2972               	goto	u601
  1110  0171  2973               	goto	u600
  1111  0172                     u601:	
  1112  0172  2855               	goto	l979
  1113  0173                     u600:	
  1114  0173                     l1027:	
  1115                           
  1116                           ;main.c: 123:             flag &= 0b10111111;
  1117  0173  30BF               	movlw	191
  1118  0174  00A0               	movwf	??_main
  1119  0175  0820               	movf	??_main,w
  1120  0176  05A3               	andwf	main@flag,f
  1121  0177  2855               	goto	l979
  1122  0178  2810               	ljmp	start
  1123  0179                     __end_of_main:	
  1124                           
  1125                           	psect	intentry
  1126  0004                     __pintentry:	
  1127 ;; *************** function _ISR *****************
  1128 ;; Defined at:
  1129 ;;		line 52 in file "main.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1143 ;;      Params:         0       0       0       0
  1144 ;;      Locals:         0       0       0       0
  1145 ;;      Temps:          0       0       0       0
  1146 ;;      Totals:         0       0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    3
  1150 ;; This function calls:
  1151 ;;		_i2cISR
  1152 ;; This function is called by:
  1153 ;;		Interrupt level 1
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157  0004                     _ISR:	
  1158                           
  1159                           ;incstack = 0
  1160  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1161                           
  1162                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1163  0005  3180               	pagesel	$
  1164  0006                     i1l941:	
  1165                           
  1166                           ;main.c: 53:     if(SSP1IF == 1){
  1167  0006  0020               	movlb	0	; select bank0
  1168  0007  1D91               	btfss	17,3	;volatile
  1169  0008  280A               	goto	u38_21
  1170  0009  280B               	goto	u38_20
  1171  000A                     u38_21:	
  1172  000A  280E               	goto	i1l52
  1173  000B                     u38_20:	
  1174  000B                     i1l943:	
  1175                           
  1176                           ;main.c: 54:         i2cISR();
  1177  000B  3181  21CD  3180   	fcall	_i2cISR
  1178  000E                     i1l52:	
  1179  000E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1180  000F  0009               	retfie
  1181  0010                     __end_of_ISR:	
  1182                           
  1183                           	psect	text2
  1184  01CD                     __ptext2:	
  1185 ;; *************** function _i2cISR *****************
  1186 ;; Defined at:
  1187 ;;		line 11 in file "i2c.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  d               1    9[COMMON] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1201 ;;      Params:         0       0       0       0
  1202 ;;      Locals:         1       0       0       0
  1203 ;;      Temps:          1       0       0       0
  1204 ;;      Totals:         2       0       0       0
  1205 ;;Total ram usage:        2 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    2
  1208 ;; This function calls:
  1209 ;;		_handleWrite
  1210 ;; This function is called by:
  1211 ;;		_ISR
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           
  1216                           ;psect for function _i2cISR
  1217  01CD                     _i2cISR:	
  1218  01CD                     i1l919:	
  1219                           ;incstack = 0
  1220                           ; Regs used in _i2cISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1221                           
  1222  01CD                     i1l921:	
  1223                           
  1224                           ;i2c.c: 13:     SSP1IF = 0;
  1225  01CD  0020               	movlb	0	; select bank0
  1226  01CE  1191               	bcf	17,3	;volatile
  1227  01CF                     i1l923:	
  1228                           
  1229                           ;i2c.c: 14:     d = SSP1BUF;
  1230  01CF  0024               	movlb	4	; select bank4
  1231  01D0  0811               	movf	17,w	;volatile
  1232  01D1  00F8               	movwf	??_i2cISR
  1233  01D2  0878               	movf	??_i2cISR,w
  1234  01D3  00F9               	movwf	i2cISR@d
  1235  01D4                     i1l925:	
  1236                           
  1237                           ;i2c.c: 15:     if(SSP1CON3bits.ACKTIM){
  1238  01D4  1F97               	btfss	23,7	;volatile
  1239  01D5  29D7               	goto	u34_21
  1240  01D6  29D8               	goto	u34_20
  1241  01D7                     u34_21:	
  1242  01D7  29ED               	goto	i1l937
  1243  01D8                     u34_20:	
  1244  01D8                     i1l927:	
  1245                           
  1246                           ;i2c.c: 17:         if(SSP1STATbits.D_nA){
  1247  01D8  1E94               	btfss	20,5	;volatile
  1248  01D9  29DB               	goto	u35_21
  1249  01DA  29DC               	goto	u35_20
  1250  01DB                     u35_21:	
  1251  01DB  29E5               	goto	i1l109
  1252  01DC                     u35_20:	
  1253  01DC                     i1l929:	
  1254                           
  1255                           ;i2c.c: 18:             if(SSP1STATbits.R_nW == 0)
  1256  01DC  1914               	btfsc	20,2	;volatile
  1257  01DD  29DF               	goto	u36_21
  1258  01DE  29E0               	goto	u36_20
  1259  01DF                     u36_21:	
  1260  01DF  29ED               	goto	i1l937
  1261  01E0                     u36_20:	
  1262  01E0                     i1l931:	
  1263                           
  1264                           ;i2c.c: 19:                 handleWrite(d);
  1265  01E0  0879               	movf	i2cISR@d,w
  1266  01E1  3181  21F1  3181   	fcall	_handleWrite
  1267  01E4  29ED               	goto	i1l937
  1268  01E5                     i1l109:	
  1269                           
  1270                           ;i2c.c: 21:             if(SSP1STATbits.R_nW == 0)
  1271  01E5  1914               	btfsc	20,2	;volatile
  1272  01E6  29E8               	goto	u37_21
  1273  01E7  29E9               	goto	u37_20
  1274  01E8                     u37_21:	
  1275  01E8  29EB               	goto	i1l935
  1276  01E9                     u37_20:	
  1277  01E9                     i1l933:	
  1278                           
  1279                           ;i2c.c: 22:                 i2c_settings = 0;
  1280  01E9  01FB               	clrf	_i2c_settings
  1281  01EA  29ED               	goto	i1l937
  1282  01EB                     i1l935:	
  1283                           
  1284                           ;i2c.c: 24:                 SSP1BUF = 5;
  1285  01EB  3005               	movlw	5
  1286  01EC  0091               	movwf	17	;volatile
  1287  01ED                     i1l937:	
  1288                           
  1289                           ;i2c.c: 28:     SSP1CON2bits.ACKDT = 0;
  1290  01ED  0024               	movlb	4	; select bank4
  1291  01EE  1296               	bcf	22,5	;volatile
  1292  01EF                     i1l939:	
  1293                           
  1294                           ;i2c.c: 29:     SSP1CON1bits.CKP = 1;
  1295  01EF  1615               	bsf	21,4	;volatile
  1296  01F0                     i1l114:	
  1297  01F0  0008               	return
  1298  01F1                     __end_of_i2cISR:	
  1299                           
  1300                           	psect	text3
  1301  01F1                     __ptext3:	
  1302 ;; *************** function _handleWrite *****************
  1303 ;; Defined at:
  1304 ;;		line 32 in file "i2c.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  d               1    wreg     unsigned char 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  d               1    7[COMMON] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1318 ;;      Params:         0       0       0       0
  1319 ;;      Locals:         1       0       0       0
  1320 ;;      Temps:          1       0       0       0
  1321 ;;      Totals:         2       0       0       0
  1322 ;;Total ram usage:        2 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    1
  1325 ;; This function calls:
  1326 ;;		_checkData
  1327 ;; This function is called by:
  1328 ;;		_i2cISR
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _handleWrite
  1334  01F1                     _handleWrite:	
  1335                           
  1336                           ;incstack = 0
  1337                           ; Regs used in _handleWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1338                           ;handleWrite@d stored from wreg
  1339  01F1  00F7               	movwf	handleWrite@d
  1340  01F2                     i1l915:	
  1341                           
  1342                           ;i2c.c: 33:     i2c_settings = d;
  1343  01F2  0877               	movf	handleWrite@d,w
  1344  01F3  00F6               	movwf	??_handleWrite
  1345  01F4  0876               	movf	??_handleWrite,w
  1346  01F5  00FB               	movwf	_i2c_settings
  1347  01F6                     i1l917:	
  1348                           
  1349                           ;i2c.c: 34:     checkData(d);
  1350  01F6  0877               	movf	handleWrite@d,w
  1351  01F7  3181  2179  3181   	fcall	_checkData
  1352  01FA                     i1l117:	
  1353  01FA  0008               	return
  1354  01FB                     __end_of_handleWrite:	
  1355                           
  1356                           	psect	text4
  1357  0179                     __ptext4:	
  1358 ;; *************** function _checkData *****************
  1359 ;; Defined at:
  1360 ;;		line 37 in file "i2c.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  s               1    wreg     unsigned char 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  s               1    4[COMMON] unsigned char 
  1365 ;;  h               1    5[COMMON] PTR unsigned char 
  1366 ;;		 -> harr(5), 
  1367 ;;  holderSel       1    3[COMMON] unsigned char 
  1368 ;;  stat            1    2[COMMON] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1378 ;;      Params:         0       0       0       0
  1379 ;;      Locals:         4       0       0       0
  1380 ;;      Temps:          2       0       0       0
  1381 ;;      Totals:         6       0       0       0
  1382 ;;Total ram usage:        6 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_handleWrite
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           
  1392                           ;psect for function _checkData
  1393  0179                     _checkData:	
  1394                           
  1395                           ;incstack = 0
  1396                           ; Regs used in _checkData: [wreg-fsr1h+status,2+status,0]
  1397                           ;checkData@s stored from wreg
  1398  0179  00F4               	movwf	checkData@s
  1399  017A                     i1l895:	
  1400                           
  1401                           ;i2c.c: 38:     unsigned char stat = (s&0b1100)>>2;
  1402  017A  0874               	movf	checkData@s,w
  1403  017B  00F0               	movwf	??_checkData
  1404  017C  3002               	movlw	2
  1405  017D                     u31_25:	
  1406  017D  36F0               	lsrf	??_checkData,f
  1407  017E  0B89               	decfsz	9,f
  1408  017F  297D               	goto	u31_25
  1409  0180  0870               	movf	??_checkData,w
  1410  0181  3903               	andlw	3
  1411  0182  00F1               	movwf	??_checkData+1
  1412  0183  0871               	movf	??_checkData+1,w
  1413  0184  00F2               	movwf	checkData@stat
  1414                           
  1415                           ;i2c.c: 39:     unsigned char holderSel = (s&0b01110000)>>4;
  1416  0185  0874               	movf	checkData@s,w
  1417  0186  00F0               	movwf	??_checkData
  1418  0187  3004               	movlw	4
  1419  0188                     u32_25:	
  1420  0188  36F0               	lsrf	??_checkData,f
  1421  0189  0B89               	decfsz	9,f
  1422  018A  2988               	goto	u32_25
  1423  018B  0870               	movf	??_checkData,w
  1424  018C  3907               	andlw	7
  1425  018D  00F1               	movwf	??_checkData+1
  1426  018E  0871               	movf	??_checkData+1,w
  1427  018F  00F3               	movwf	checkData@holderSel
  1428                           
  1429                           ;i2c.c: 41:     holder *h = &harr[holderSel];
  1430  0190  0873               	movf	checkData@holderSel,w
  1431  0191  3E2A               	addlw	(low (_harr| 0))& (0+255)
  1432  0192  00F0               	movwf	??_checkData
  1433  0193  0870               	movf	??_checkData,w
  1434  0194  00F5               	movwf	checkData@h
  1435                           
  1436                           ;i2c.c: 42:     switch(stat){
  1437  0195  29B2               	goto	i1l907
  1438  0196                     i1l897:	
  1439                           
  1440                           ;i2c.c: 44:             *h &= 0b01011111;
  1441  0196  305F               	movlw	95
  1442  0197  00F0               	movwf	??_checkData
  1443  0198  0875               	movf	checkData@h,w
  1444  0199  0086               	movwf	6
  1445  019A  0187               	clrf	7
  1446  019B  0870               	movf	??_checkData,w
  1447  019C  0581               	andwf	1,f
  1448                           
  1449                           ;i2c.c: 45:             break;
  1450  019D  29C5               	goto	i1l122
  1451  019E                     i1l899:	
  1452                           
  1453                           ;i2c.c: 47:             *h |= 0b10000000;
  1454  019E  0875               	movf	checkData@h,w
  1455  019F  0086               	movwf	6
  1456  01A0  0187               	clrf	7
  1457  01A1  1781               	bsf	1,7
  1458  01A2                     i1l901:	
  1459                           
  1460                           ;i2c.c: 48:             *h &= 0b10100000;
  1461  01A2  30A0               	movlw	160
  1462  01A3  00F0               	movwf	??_checkData
  1463  01A4  0875               	movf	checkData@h,w
  1464  01A5  0086               	movwf	6
  1465  01A6  0187               	clrf	7
  1466  01A7  0870               	movf	??_checkData,w
  1467  01A8  0581               	andwf	1,f
  1468                           
  1469                           ;i2c.c: 49:             break;
  1470  01A9  29C5               	goto	i1l122
  1471  01AA                     i1l903:	
  1472                           
  1473                           ;i2c.c: 51:             *h |= 0b11000000;
  1474  01AA  30C0               	movlw	192
  1475  01AB  00F0               	movwf	??_checkData
  1476  01AC  0875               	movf	checkData@h,w
  1477  01AD  0086               	movwf	6
  1478  01AE  0187               	clrf	7
  1479  01AF  0870               	movf	??_checkData,w
  1480  01B0  0481               	iorwf	1,f
  1481                           
  1482                           ;i2c.c: 52:             break;
  1483  01B1  29C5               	goto	i1l122
  1484  01B2                     i1l907:	
  1485  01B2  0872               	movf	checkData@stat,w
  1486  01B3  00F0               	movwf	??_checkData
  1487  01B4  01F1               	clrf	??_checkData+1
  1488                           
  1489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1490                           ; Switch size 1, requested type "simple"
  1491                           ; Number of cases is 1, Range of values is 0 to 0
  1492                           ; switch strategies available:
  1493                           ; Name         Instructions Cycles
  1494                           ; simple_byte            4     3 (average)
  1495                           ; direct_byte            8     6 (fixed)
  1496                           ; jumptable            260     6 (fixed)
  1497                           ;	Chosen strategy is simple_byte
  1498  01B5  0871               	movf	??_checkData+1,w
  1499  01B6  3A00               	xorlw	0	; case 0
  1500  01B7  1903               	skipnz
  1501  01B8  29BA               	goto	i1l1049
  1502  01B9  29C5               	goto	i1l122
  1503  01BA                     i1l1049:	
  1504                           
  1505                           ; Switch size 1, requested type "simple"
  1506                           ; Number of cases is 3, Range of values is 1 to 3
  1507                           ; switch strategies available:
  1508                           ; Name         Instructions Cycles
  1509                           ; simple_byte           10     6 (average)
  1510                           ; direct_byte           15     9 (fixed)
  1511                           ; jumptable            263     9 (fixed)
  1512                           ;	Chosen strategy is simple_byte
  1513  01BA  0870               	movf	??_checkData,w
  1514  01BB  3A01               	xorlw	1	; case 1
  1515  01BC  1903               	skipnz
  1516  01BD  2996               	goto	i1l897
  1517  01BE  3A03               	xorlw	3	; case 2
  1518  01BF  1903               	skipnz
  1519  01C0  299E               	goto	i1l899
  1520  01C1  3A01               	xorlw	1	; case 3
  1521  01C2  1903               	skipnz
  1522  01C3  29AA               	goto	i1l903
  1523  01C4  29C5               	goto	i1l122
  1524  01C5                     i1l122:	
  1525                           
  1526                           ;i2c.c: 54:     if(s&0b10){
  1527  01C5  1CF4               	btfss	checkData@s,1
  1528  01C6  29C8               	goto	u33_21
  1529  01C7  29C9               	goto	u33_20
  1530  01C8                     u33_21:	
  1531  01C8  29CC               	goto	i1l126
  1532  01C9                     u33_20:	
  1533  01C9                     i1l909:	
  1534                           
  1535                           ;i2c.c: 55:         flagUp = 1;
  1536  01C9  0020               	movlb	0	; select bank0
  1537  01CA  01A9               	clrf	_flagUp
  1538  01CB  0AA9               	incf	_flagUp,f
  1539  01CC                     i1l126:	
  1540  01CC  0008               	return
  1541  01CD                     __end_of_checkData:	
  1542  007E                     btemp	set	126	;btemp
  1543  007E                     int$flags	set	126
  1544  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      9      15
    BANK1            80      0       0
    BANK2            64      0       0

Pointer List with Targets:

    checkData@h	PTR unsigned char  size(1) Largest target is 5
		 -> harr(BANK0[5]), 

    main@h	PTR unsigned char  size(1) Largest target is 5
		 -> harr(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_i2cISR
    _i2cISR->_handleWrite
    _handleWrite->_checkData

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     273
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  0     0      0     269
                             _i2cISR
 ---------------------------------------------------------------------------------
 (2) _i2cISR                                               2     2      0     269
                                              8 COMMON     2     2      0
                        _handleWrite
 ---------------------------------------------------------------------------------
 (3) _handleWrite                                          2     2      0     245
                                              6 COMMON     2     2      0
                          _checkData
 ---------------------------------------------------------------------------------
 (4) _checkData                                            6     6      0     201
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _i2cISR
     _handleWrite
       _checkData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      9       F       6       18.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            40      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               40      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      1B      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 30 12:30:42 2019

            __CFG_CP$OFF 0000                       l60 0096                      l951 002D  
                    l961 0038                      l953 002F                      l945 001D  
                    l963 003A                      l955 0032                      l947 002A  
                    l973 0043                      l965 003C                      l957 0034  
                    l949 002C                      l991 0072                      l983 005B  
                    l975 004B                      l967 0042                      l959 0036  
                    l993 0079                      l985 0061                      l977 004F  
                    l995 007E                      l987 0066                      l979 0055  
                    l997 0085                      l989 006D                      l999 008A  
                    u400 005B                      u401 005A                      u410 0061  
                    u411 0060                      u420 006D                      u421 006C  
                    u430 0079                      u431 0078                      u600 0173  
                    u440 0085                      u601 0172                      u505 00D7  
                    u441 0084                      u450 0091             __CFG_CPD$OFF 0000  
                    u515 00E6                      u451 0090                      _ISR 0004  
                    u525 00F6                      u390 0055                      u535 0103  
                    u391 0054                      u560 0142                      u561 0141  
                    u545 0113                      u465 009E                      u570 0150  
                    u571 014F                      u555 0121                      u475 00AA  
                    u485 00BA                      u590 016D                      u591 016C  
                    u495 00C7                      u584 0155                      u585 0154  
                    u595 0169             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_IESO$ON 0000             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   l1001 0091                     l1011 0130                     l1003 012A  
                   l1021 015C                     l1013 0136                     l1005 012E  
                   l1023 0160                     l1015 0142                     l1025 016D  
                   l1017 0149                     l1027 0173                     l1019 0150  
                   _LATA 010C                     _PIE1 0091                     i1l52 000E  
                   _TMR0 0015                     _WPUB 020D             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _harr 002A                     _main 001D  
                   fsr1h 0007                     indf1 0001                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0010  
          __CFG_MCLRE$ON 0000                    ??_ISR 007A            __CFG_PLLEN$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    i1l122 01C5  
                  i1l114 01F0                    i1l117 01FA                    i1l109 01E5  
                  i1l126 01CC                    i1l901 01A2                    i1l903 01AA  
                  i1l921 01CD                    i1l907 01B2                    i1l915 01F2  
                  i1l931 01E0                    i1l923 01CF                    i1l909 01C9  
                  i1l917 01F6                    i1l933 01E9                    i1l925 01D4  
                  i1l941 0006                    i1l935 01EB                    i1l927 01D8  
                  i1l919 01CD                    i1l943 000B                    i1l929 01DC  
                  i1l937 01ED                    i1l939 01EF                    i1l895 017A  
                  i1l897 0196                    i1l899 019E                    u31_25 017D  
                  u32_25 0188                    u33_20 01C9                    u33_21 01C8  
                  u34_20 01D8                    u34_21 01D7                    u35_20 01DC  
                  u35_21 01DB                    u36_20 01E0                    u36_21 01DF  
                  u37_20 01E9                    u37_21 01E8                    u38_20 000B  
                  u38_21 000A                    _TRISA 008C                    _TRISB 008D  
                  _debug 007A                    main@h 0025                    main@i 0026  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0179                   ??_main 0020       checkData@holderSel 0073  
          checkData@stat 0072     __size_of_handleWrite 000A                   _ANSELA 018C  
                 _ANSELB 018D                   i1l1049 01BA                   _INTCON 000B  
                 _OSCCON 0099                   _SSP1IF 008B                   _i2cISR 01CD  
         __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000                   _flagUp 0029  
__end_of__initialization 001A           __pcstackCOMMON 0070       __size_of_checkData 0054  
             __pbssBANK0 0029                  ?_i2cISR 0070               __pmaintext 001D  
         main@lataClosed 0024               __pintentry 0004                  i2cISR@d 0079  
                _SSP1ADD 0212                  _SSP1BUF 0211        __end_of_checkData 01CD  
             checkData@h 0075               checkData@s 0074          __size_of_i2cISR 0024  
                __ptext2 01CD                  __ptext3 01F1                  __ptext4 0179  
           __size_of_ISR 000C     end_of_initialization 001A                _PORTBbits 000D  
          ??_handleWrite 0076         __CFG_FOSC$INTOSC 0000           __end_of_i2cISR 01F1  
           _i2c_settings 007B      start_initialization 0011              __end_of_ISR 0010  
    __end_of_handleWrite 01FB                 ??_i2cISR 0078              __pbssCOMMON 007A  
              ___latbits 0000            __pcstackBANK0 0020                _checkData 0179  
            _handleWrite 01F1               ?_checkData 0070                 _SSP1CON1 0215  
               _SSP1CON2 0216                 _SSP1CON3 0217                 _SSP1STAT 0214  
           _SSP1CON1bits 0215             _SSP1CON2bits 0216             _SSP1CON3bits 0217  
            ??_checkData 0070            __size_of_main 015C                 int$flags 007E  
               main@i_89 0027                 main@flag 0023             _SSP1STATbits 0214  
               intlevel1 0000             handleWrite@d 0077        __CFG_CLKOUTEN$OFF 0000  
             _OPTION_REG 0095             ?_handleWrite 0070  
