

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jan 28 20:50:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.10
    40                           ; Generated 31/07/2019 GMT
    41                           ; 
    42                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F18875 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001C                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  008C                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0110                     	;# 
   133  0110                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0119                     	;# 
   145  0119                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011A                     	;# 
   149  011A                     	;# 
   150  011B                     	;# 
   151  011B                     	;# 
   152  011B                     	;# 
   153  011B                     	;# 
   154  011B                     	;# 
   155  011C                     	;# 
   156  011C                     	;# 
   157  011C                     	;# 
   158  011D                     	;# 
   159  011D                     	;# 
   160  011D                     	;# 
   161  011E                     	;# 
   162  011E                     	;# 
   163  011E                     	;# 
   164  011F                     	;# 
   165  011F                     	;# 
   166  011F                     	;# 
   167  011F                     	;# 
   168  011F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  018E                     	;# 
   172  018F                     	;# 
   173  0190                     	;# 
   174  0191                     	;# 
   175  0192                     	;# 
   176  0196                     	;# 
   177  0197                     	;# 
   178  0198                     	;# 
   179  0199                     	;# 
   180  019A                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  020C                     	;# 
   184  020C                     	;# 
   185  020D                     	;# 
   186  020E                     	;# 
   187  020F                     	;# 
   188  020F                     	;# 
   189  0210                     	;# 
   190  0210                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0216                     	;# 
   201  0217                     	;# 
   202  0217                     	;# 
   203  0218                     	;# 
   204  0218                     	;# 
   205  0219                     	;# 
   206  021A                     	;# 
   207  021B                     	;# 
   208  021B                     	;# 
   209  021C                     	;# 
   210  021C                     	;# 
   211  021D                     	;# 
   212  021D                     	;# 
   213  021E                     	;# 
   214  021F                     	;# 
   215  028C                     	;# 
   216  028C                     	;# 
   217  028D                     	;# 
   218  028D                     	;# 
   219  028E                     	;# 
   220  028F                     	;# 
   221  0290                     	;# 
   222  0290                     	;# 
   223  0291                     	;# 
   224  0292                     	;# 
   225  0292                     	;# 
   226  0293                     	;# 
   227  0293                     	;# 
   228  0294                     	;# 
   229  0295                     	;# 
   230  0296                     	;# 
   231  0296                     	;# 
   232  0297                     	;# 
   233  0298                     	;# 
   234  0298                     	;# 
   235  0299                     	;# 
   236  0299                     	;# 
   237  029A                     	;# 
   238  029B                     	;# 
   239  029C                     	;# 
   240  029C                     	;# 
   241  029D                     	;# 
   242  030C                     	;# 
   243  030C                     	;# 
   244  030D                     	;# 
   245  030E                     	;# 
   246  030F                     	;# 
   247  0310                     	;# 
   248  0310                     	;# 
   249  0311                     	;# 
   250  0312                     	;# 
   251  0313                     	;# 
   252  0314                     	;# 
   253  0314                     	;# 
   254  0315                     	;# 
   255  0316                     	;# 
   256  0317                     	;# 
   257  0318                     	;# 
   258  0318                     	;# 
   259  0319                     	;# 
   260  031A                     	;# 
   261  031B                     	;# 
   262  031C                     	;# 
   263  031C                     	;# 
   264  031D                     	;# 
   265  031E                     	;# 
   266  031F                     	;# 
   267  038C                     	;# 
   268  038C                     	;# 
   269  038D                     	;# 
   270  038E                     	;# 
   271  0390                     	;# 
   272  0390                     	;# 
   273  0391                     	;# 
   274  0392                     	;# 
   275  040C                     	;# 
   276  040D                     	;# 
   277  040E                     	;# 
   278  040F                     	;# 
   279  0410                     	;# 
   280  0411                     	;# 
   281  0416                     	;# 
   282  0416                     	;# 
   283  0417                     	;# 
   284  0418                     	;# 
   285  0418                     	;# 
   286  0419                     	;# 
   287  041A                     	;# 
   288  041A                     	;# 
   289  041B                     	;# 
   290  041C                     	;# 
   291  041C                     	;# 
   292  041D                     	;# 
   293  041E                     	;# 
   294  041F                     	;# 
   295  048C                     	;# 
   296  048C                     	;# 
   297  048D                     	;# 
   298  048E                     	;# 
   299  048F                     	;# 
   300  048F                     	;# 
   301  0490                     	;# 
   302  0491                     	;# 
   303  0492                     	;# 
   304  0492                     	;# 
   305  0493                     	;# 
   306  0494                     	;# 
   307  0495                     	;# 
   308  0495                     	;# 
   309  0496                     	;# 
   310  0497                     	;# 
   311  0498                     	;# 
   312  0499                     	;# 
   313  049A                     	;# 
   314  049B                     	;# 
   315  049C                     	;# 
   316  049D                     	;# 
   317  050C                     	;# 
   318  050C                     	;# 
   319  050D                     	;# 
   320  050E                     	;# 
   321  050F                     	;# 
   322  050F                     	;# 
   323  0510                     	;# 
   324  0511                     	;# 
   325  0512                     	;# 
   326  0512                     	;# 
   327  0513                     	;# 
   328  0514                     	;# 
   329  0515                     	;# 
   330  0515                     	;# 
   331  0516                     	;# 
   332  0517                     	;# 
   333  0518                     	;# 
   334  0519                     	;# 
   335  051A                     	;# 
   336  051B                     	;# 
   337  051C                     	;# 
   338  051D                     	;# 
   339  058C                     	;# 
   340  058C                     	;# 
   341  058D                     	;# 
   342  058E                     	;# 
   343  058F                     	;# 
   344  058F                     	;# 
   345  0590                     	;# 
   346  0591                     	;# 
   347  0592                     	;# 
   348  0593                     	;# 
   349  060C                     	;# 
   350  060D                     	;# 
   351  060E                     	;# 
   352  060F                     	;# 
   353  0610                     	;# 
   354  0611                     	;# 
   355  0612                     	;# 
   356  0613                     	;# 
   357  0614                     	;# 
   358  0616                     	;# 
   359  0617                     	;# 
   360  0618                     	;# 
   361  0619                     	;# 
   362  061A                     	;# 
   363  061B                     	;# 
   364  061C                     	;# 
   365  061D                     	;# 
   366  061E                     	;# 
   367  068C                     	;# 
   368  068D                     	;# 
   369  068E                     	;# 
   370  068F                     	;# 
   371  0690                     	;# 
   372  0691                     	;# 
   373  0692                     	;# 
   374  0693                     	;# 
   375  0694                     	;# 
   376  070C                     	;# 
   377  070D                     	;# 
   378  070E                     	;# 
   379  070F                     	;# 
   380  0710                     	;# 
   381  0711                     	;# 
   382  0712                     	;# 
   383  0713                     	;# 
   384  0714                     	;# 
   385  0716                     	;# 
   386  0717                     	;# 
   387  0718                     	;# 
   388  0719                     	;# 
   389  071A                     	;# 
   390  071B                     	;# 
   391  071C                     	;# 
   392  071D                     	;# 
   393  071E                     	;# 
   394  0796                     	;# 
   395  0797                     	;# 
   396  0798                     	;# 
   397  0799                     	;# 
   398  079A                     	;# 
   399  079B                     	;# 
   400  080C                     	;# 
   401  080D                     	;# 
   402  080E                     	;# 
   403  080F                     	;# 
   404  0810                     	;# 
   405  0811                     	;# 
   406  0812                     	;# 
   407  0813                     	;# 
   408  0814                     	;# 
   409  081A                     	;# 
   410  081B                     	;# 
   411  081C                     	;# 
   412  081D                     	;# 
   413  081E                     	;# 
   414  081F                     	;# 
   415  088C                     	;# 
   416  088D                     	;# 
   417  088E                     	;# 
   418  088F                     	;# 
   419  0890                     	;# 
   420  0891                     	;# 
   421  0892                     	;# 
   422  0893                     	;# 
   423  0895                     	;# 
   424  0896                     	;# 
   425  0897                     	;# 
   426  0898                     	;# 
   427  0899                     	;# 
   428  089A                     	;# 
   429  089B                     	;# 
   430  090C                     	;# 
   431  090E                     	;# 
   432  090F                     	;# 
   433  091F                     	;# 
   434  091F                     	;# 
   435  098F                     	;# 
   436  098F                     	;# 
   437  0990                     	;# 
   438  0991                     	;# 
   439  0992                     	;# 
   440  0993                     	;# 
   441  0994                     	;# 
   442  0995                     	;# 
   443  0996                     	;# 
   444  0997                     	;# 
   445  0E0F                     	;# 
   446  0E10                     	;# 
   447  0E11                     	;# 
   448  0E12                     	;# 
   449  0E13                     	;# 
   450  0E14                     	;# 
   451  0E15                     	;# 
   452  0E16                     	;# 
   453  0E17                     	;# 
   454  0E18                     	;# 
   455  0E19                     	;# 
   456  0E1A                     	;# 
   457  0E1B                     	;# 
   458  0E1C                     	;# 
   459  0E1D                     	;# 
   460  0E1E                     	;# 
   461  0E1F                     	;# 
   462  0E20                     	;# 
   463  0E21                     	;# 
   464  0E22                     	;# 
   465  0E23                     	;# 
   466  0E24                     	;# 
   467  0E25                     	;# 
   468  0E26                     	;# 
   469  0E27                     	;# 
   470  0E28                     	;# 
   471  0E29                     	;# 
   472  0E2A                     	;# 
   473  0E2B                     	;# 
   474  0E2C                     	;# 
   475  0E2D                     	;# 
   476  0E2E                     	;# 
   477  0E2F                     	;# 
   478  0E30                     	;# 
   479  0E31                     	;# 
   480  0E32                     	;# 
   481  0E33                     	;# 
   482  0E34                     	;# 
   483  0E35                     	;# 
   484  0E36                     	;# 
   485  0E37                     	;# 
   486  0E8F                     	;# 
   487  0E90                     	;# 
   488  0E91                     	;# 
   489  0E92                     	;# 
   490  0E93                     	;# 
   491  0E94                     	;# 
   492  0E95                     	;# 
   493  0E96                     	;# 
   494  0E97                     	;# 
   495  0E9C                     	;# 
   496  0E9D                     	;# 
   497  0E9E                     	;# 
   498  0EA1                     	;# 
   499  0EA2                     	;# 
   500  0EA3                     	;# 
   501  0EA4                     	;# 
   502  0EA5                     	;# 
   503  0EA9                     	;# 
   504  0EAA                     	;# 
   505  0EAB                     	;# 
   506  0EAC                     	;# 
   507  0EB1                     	;# 
   508  0EB2                     	;# 
   509  0EB3                     	;# 
   510  0EB8                     	;# 
   511  0EB9                     	;# 
   512  0EBA                     	;# 
   513  0EBB                     	;# 
   514  0EBC                     	;# 
   515  0EBD                     	;# 
   516  0EBE                     	;# 
   517  0EC3                     	;# 
   518  0EC5                     	;# 
   519  0EC6                     	;# 
   520  0EC7                     	;# 
   521  0EC8                     	;# 
   522  0EC9                     	;# 
   523  0ECA                     	;# 
   524  0ECB                     	;# 
   525  0ECC                     	;# 
   526  0F10                     	;# 
   527  0F11                     	;# 
   528  0F12                     	;# 
   529  0F13                     	;# 
   530  0F14                     	;# 
   531  0F15                     	;# 
   532  0F16                     	;# 
   533  0F17                     	;# 
   534  0F18                     	;# 
   535  0F19                     	;# 
   536  0F1A                     	;# 
   537  0F1B                     	;# 
   538  0F1C                     	;# 
   539  0F1D                     	;# 
   540  0F1E                     	;# 
   541  0F1F                     	;# 
   542  0F20                     	;# 
   543  0F21                     	;# 
   544  0F22                     	;# 
   545  0F23                     	;# 
   546  0F24                     	;# 
   547  0F25                     	;# 
   548  0F26                     	;# 
   549  0F27                     	;# 
   550  0F28                     	;# 
   551  0F29                     	;# 
   552  0F2A                     	;# 
   553  0F2B                     	;# 
   554  0F2C                     	;# 
   555  0F2D                     	;# 
   556  0F2E                     	;# 
   557  0F2F                     	;# 
   558  0F30                     	;# 
   559  0F31                     	;# 
   560  0F32                     	;# 
   561  0F38                     	;# 
   562  0F39                     	;# 
   563  0F3A                     	;# 
   564  0F3B                     	;# 
   565  0F3C                     	;# 
   566  0F3D                     	;# 
   567  0F3E                     	;# 
   568  0F3F                     	;# 
   569  0F40                     	;# 
   570  0F41                     	;# 
   571  0F43                     	;# 
   572  0F44                     	;# 
   573  0F45                     	;# 
   574  0F46                     	;# 
   575  0F47                     	;# 
   576  0F48                     	;# 
   577  0F49                     	;# 
   578  0F4A                     	;# 
   579  0F4B                     	;# 
   580  0F4C                     	;# 
   581  0F4E                     	;# 
   582  0F4F                     	;# 
   583  0F50                     	;# 
   584  0F51                     	;# 
   585  0F52                     	;# 
   586  0F53                     	;# 
   587  0F54                     	;# 
   588  0F55                     	;# 
   589  0F56                     	;# 
   590  0F57                     	;# 
   591  0F59                     	;# 
   592  0F5A                     	;# 
   593  0F5B                     	;# 
   594  0F5C                     	;# 
   595  0F5D                     	;# 
   596  0F61                     	;# 
   597  0F62                     	;# 
   598  0F64                     	;# 
   599  0F65                     	;# 
   600  0F66                     	;# 
   601  0F67                     	;# 
   602  0F68                     	;# 
   603  0F69                     	;# 
   604  0F6A                     	;# 
   605  0F6B                     	;# 
   606  0F6C                     	;# 
   607  0F6D                     	;# 
   608  0FE4                     	;# 
   609  0FE5                     	;# 
   610  0FE6                     	;# 
   611  0FE7                     	;# 
   612  0FE8                     	;# 
   613  0FE9                     	;# 
   614  0FEA                     	;# 
   615  0FEB                     	;# 
   616  0FED                     	;# 
   617  0FEE                     	;# 
   618  0FEF                     	;# 
   619  0000                     	;# 
   620  0001                     	;# 
   621  0002                     	;# 
   622  0003                     	;# 
   623  0004                     	;# 
   624  0005                     	;# 
   625  0006                     	;# 
   626  0007                     	;# 
   627  0008                     	;# 
   628  0009                     	;# 
   629  000A                     	;# 
   630  000B                     	;# 
   631  000C                     	;# 
   632  000D                     	;# 
   633  000E                     	;# 
   634  000F                     	;# 
   635  0010                     	;# 
   636  0011                     	;# 
   637  0012                     	;# 
   638  0013                     	;# 
   639  0014                     	;# 
   640  0015                     	;# 
   641  0016                     	;# 
   642  0017                     	;# 
   643  0018                     	;# 
   644  0019                     	;# 
   645  001A                     	;# 
   646  001C                     	;# 
   647  001C                     	;# 
   648  001D                     	;# 
   649  001D                     	;# 
   650  001E                     	;# 
   651  001F                     	;# 
   652  008C                     	;# 
   653  008C                     	;# 
   654  008D                     	;# 
   655  008E                     	;# 
   656  008E                     	;# 
   657  008F                     	;# 
   658  0090                     	;# 
   659  0090                     	;# 
   660  0091                     	;# 
   661  0093                     	;# 
   662  0094                     	;# 
   663  0095                     	;# 
   664  0096                     	;# 
   665  0097                     	;# 
   666  0098                     	;# 
   667  0099                     	;# 
   668  009A                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  010C                     	;# 
   674  010D                     	;# 
   675  010E                     	;# 
   676  010E                     	;# 
   677  010F                     	;# 
   678  0110                     	;# 
   679  0110                     	;# 
   680  0111                     	;# 
   681  0112                     	;# 
   682  0112                     	;# 
   683  0113                     	;# 
   684  0114                     	;# 
   685  0114                     	;# 
   686  0115                     	;# 
   687  0116                     	;# 
   688  0116                     	;# 
   689  0117                     	;# 
   690  0119                     	;# 
   691  0119                     	;# 
   692  0119                     	;# 
   693  011A                     	;# 
   694  011A                     	;# 
   695  011A                     	;# 
   696  011B                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011C                     	;# 
   702  011C                     	;# 
   703  011C                     	;# 
   704  011D                     	;# 
   705  011D                     	;# 
   706  011D                     	;# 
   707  011E                     	;# 
   708  011E                     	;# 
   709  011E                     	;# 
   710  011F                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  018C                     	;# 
   716  018D                     	;# 
   717  018E                     	;# 
   718  018F                     	;# 
   719  0190                     	;# 
   720  0191                     	;# 
   721  0192                     	;# 
   722  0196                     	;# 
   723  0197                     	;# 
   724  0198                     	;# 
   725  0199                     	;# 
   726  019A                     	;# 
   727  019B                     	;# 
   728  019C                     	;# 
   729  020C                     	;# 
   730  020C                     	;# 
   731  020D                     	;# 
   732  020E                     	;# 
   733  020F                     	;# 
   734  020F                     	;# 
   735  0210                     	;# 
   736  0210                     	;# 
   737  0211                     	;# 
   738  0211                     	;# 
   739  0212                     	;# 
   740  0212                     	;# 
   741  0213                     	;# 
   742  0214                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0216                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0217                     	;# 
   749  0218                     	;# 
   750  0218                     	;# 
   751  0219                     	;# 
   752  021A                     	;# 
   753  021B                     	;# 
   754  021B                     	;# 
   755  021C                     	;# 
   756  021C                     	;# 
   757  021D                     	;# 
   758  021D                     	;# 
   759  021E                     	;# 
   760  021F                     	;# 
   761  028C                     	;# 
   762  028C                     	;# 
   763  028D                     	;# 
   764  028D                     	;# 
   765  028E                     	;# 
   766  028F                     	;# 
   767  0290                     	;# 
   768  0290                     	;# 
   769  0291                     	;# 
   770  0292                     	;# 
   771  0292                     	;# 
   772  0293                     	;# 
   773  0293                     	;# 
   774  0294                     	;# 
   775  0295                     	;# 
   776  0296                     	;# 
   777  0296                     	;# 
   778  0297                     	;# 
   779  0298                     	;# 
   780  0298                     	;# 
   781  0299                     	;# 
   782  0299                     	;# 
   783  029A                     	;# 
   784  029B                     	;# 
   785  029C                     	;# 
   786  029C                     	;# 
   787  029D                     	;# 
   788  030C                     	;# 
   789  030C                     	;# 
   790  030D                     	;# 
   791  030E                     	;# 
   792  030F                     	;# 
   793  0310                     	;# 
   794  0310                     	;# 
   795  0311                     	;# 
   796  0312                     	;# 
   797  0313                     	;# 
   798  0314                     	;# 
   799  0314                     	;# 
   800  0315                     	;# 
   801  0316                     	;# 
   802  0317                     	;# 
   803  0318                     	;# 
   804  0318                     	;# 
   805  0319                     	;# 
   806  031A                     	;# 
   807  031B                     	;# 
   808  031C                     	;# 
   809  031C                     	;# 
   810  031D                     	;# 
   811  031E                     	;# 
   812  031F                     	;# 
   813  038C                     	;# 
   814  038C                     	;# 
   815  038D                     	;# 
   816  038E                     	;# 
   817  0390                     	;# 
   818  0390                     	;# 
   819  0391                     	;# 
   820  0392                     	;# 
   821  040C                     	;# 
   822  040D                     	;# 
   823  040E                     	;# 
   824  040F                     	;# 
   825  0410                     	;# 
   826  0411                     	;# 
   827  0416                     	;# 
   828  0416                     	;# 
   829  0417                     	;# 
   830  0418                     	;# 
   831  0418                     	;# 
   832  0419                     	;# 
   833  041A                     	;# 
   834  041A                     	;# 
   835  041B                     	;# 
   836  041C                     	;# 
   837  041C                     	;# 
   838  041D                     	;# 
   839  041E                     	;# 
   840  041F                     	;# 
   841  048C                     	;# 
   842  048C                     	;# 
   843  048D                     	;# 
   844  048E                     	;# 
   845  048F                     	;# 
   846  048F                     	;# 
   847  0490                     	;# 
   848  0491                     	;# 
   849  0492                     	;# 
   850  0492                     	;# 
   851  0493                     	;# 
   852  0494                     	;# 
   853  0495                     	;# 
   854  0495                     	;# 
   855  0496                     	;# 
   856  0497                     	;# 
   857  0498                     	;# 
   858  0499                     	;# 
   859  049A                     	;# 
   860  049B                     	;# 
   861  049C                     	;# 
   862  049D                     	;# 
   863  050C                     	;# 
   864  050C                     	;# 
   865  050D                     	;# 
   866  050E                     	;# 
   867  050F                     	;# 
   868  050F                     	;# 
   869  0510                     	;# 
   870  0511                     	;# 
   871  0512                     	;# 
   872  0512                     	;# 
   873  0513                     	;# 
   874  0514                     	;# 
   875  0515                     	;# 
   876  0515                     	;# 
   877  0516                     	;# 
   878  0517                     	;# 
   879  0518                     	;# 
   880  0519                     	;# 
   881  051A                     	;# 
   882  051B                     	;# 
   883  051C                     	;# 
   884  051D                     	;# 
   885  058C                     	;# 
   886  058C                     	;# 
   887  058D                     	;# 
   888  058E                     	;# 
   889  058F                     	;# 
   890  058F                     	;# 
   891  0590                     	;# 
   892  0591                     	;# 
   893  0592                     	;# 
   894  0593                     	;# 
   895  060C                     	;# 
   896  060D                     	;# 
   897  060E                     	;# 
   898  060F                     	;# 
   899  0610                     	;# 
   900  0611                     	;# 
   901  0612                     	;# 
   902  0613                     	;# 
   903  0614                     	;# 
   904  0616                     	;# 
   905  0617                     	;# 
   906  0618                     	;# 
   907  0619                     	;# 
   908  061A                     	;# 
   909  061B                     	;# 
   910  061C                     	;# 
   911  061D                     	;# 
   912  061E                     	;# 
   913  068C                     	;# 
   914  068D                     	;# 
   915  068E                     	;# 
   916  068F                     	;# 
   917  0690                     	;# 
   918  0691                     	;# 
   919  0692                     	;# 
   920  0693                     	;# 
   921  0694                     	;# 
   922  070C                     	;# 
   923  070D                     	;# 
   924  070E                     	;# 
   925  070F                     	;# 
   926  0710                     	;# 
   927  0711                     	;# 
   928  0712                     	;# 
   929  0713                     	;# 
   930  0714                     	;# 
   931  0716                     	;# 
   932  0717                     	;# 
   933  0718                     	;# 
   934  0719                     	;# 
   935  071A                     	;# 
   936  071B                     	;# 
   937  071C                     	;# 
   938  071D                     	;# 
   939  071E                     	;# 
   940  0796                     	;# 
   941  0797                     	;# 
   942  0798                     	;# 
   943  0799                     	;# 
   944  079A                     	;# 
   945  079B                     	;# 
   946  080C                     	;# 
   947  080D                     	;# 
   948  080E                     	;# 
   949  080F                     	;# 
   950  0810                     	;# 
   951  0811                     	;# 
   952  0812                     	;# 
   953  0813                     	;# 
   954  0814                     	;# 
   955  081A                     	;# 
   956  081B                     	;# 
   957  081C                     	;# 
   958  081D                     	;# 
   959  081E                     	;# 
   960  081F                     	;# 
   961  088C                     	;# 
   962  088D                     	;# 
   963  088E                     	;# 
   964  088F                     	;# 
   965  0890                     	;# 
   966  0891                     	;# 
   967  0892                     	;# 
   968  0893                     	;# 
   969  0895                     	;# 
   970  0896                     	;# 
   971  0897                     	;# 
   972  0898                     	;# 
   973  0899                     	;# 
   974  089A                     	;# 
   975  089B                     	;# 
   976  090C                     	;# 
   977  090E                     	;# 
   978  090F                     	;# 
   979  091F                     	;# 
   980  091F                     	;# 
   981  098F                     	;# 
   982  098F                     	;# 
   983  0990                     	;# 
   984  0991                     	;# 
   985  0992                     	;# 
   986  0993                     	;# 
   987  0994                     	;# 
   988  0995                     	;# 
   989  0996                     	;# 
   990  0997                     	;# 
   991  0E0F                     	;# 
   992  0E10                     	;# 
   993  0E11                     	;# 
   994  0E12                     	;# 
   995  0E13                     	;# 
   996  0E14                     	;# 
   997  0E15                     	;# 
   998  0E16                     	;# 
   999  0E17                     	;# 
  1000  0E18                     	;# 
  1001  0E19                     	;# 
  1002  0E1A                     	;# 
  1003  0E1B                     	;# 
  1004  0E1C                     	;# 
  1005  0E1D                     	;# 
  1006  0E1E                     	;# 
  1007  0E1F                     	;# 
  1008  0E20                     	;# 
  1009  0E21                     	;# 
  1010  0E22                     	;# 
  1011  0E23                     	;# 
  1012  0E24                     	;# 
  1013  0E25                     	;# 
  1014  0E26                     	;# 
  1015  0E27                     	;# 
  1016  0E28                     	;# 
  1017  0E29                     	;# 
  1018  0E2A                     	;# 
  1019  0E2B                     	;# 
  1020  0E2C                     	;# 
  1021  0E2D                     	;# 
  1022  0E2E                     	;# 
  1023  0E2F                     	;# 
  1024  0E30                     	;# 
  1025  0E31                     	;# 
  1026  0E32                     	;# 
  1027  0E33                     	;# 
  1028  0E34                     	;# 
  1029  0E35                     	;# 
  1030  0E36                     	;# 
  1031  0E37                     	;# 
  1032  0E8F                     	;# 
  1033  0E90                     	;# 
  1034  0E91                     	;# 
  1035  0E92                     	;# 
  1036  0E93                     	;# 
  1037  0E94                     	;# 
  1038  0E95                     	;# 
  1039  0E96                     	;# 
  1040  0E97                     	;# 
  1041  0E9C                     	;# 
  1042  0E9D                     	;# 
  1043  0E9E                     	;# 
  1044  0EA1                     	;# 
  1045  0EA2                     	;# 
  1046  0EA3                     	;# 
  1047  0EA4                     	;# 
  1048  0EA5                     	;# 
  1049  0EA9                     	;# 
  1050  0EAA                     	;# 
  1051  0EAB                     	;# 
  1052  0EAC                     	;# 
  1053  0EB1                     	;# 
  1054  0EB2                     	;# 
  1055  0EB3                     	;# 
  1056  0EB8                     	;# 
  1057  0EB9                     	;# 
  1058  0EBA                     	;# 
  1059  0EBB                     	;# 
  1060  0EBC                     	;# 
  1061  0EBD                     	;# 
  1062  0EBE                     	;# 
  1063  0EC3                     	;# 
  1064  0EC5                     	;# 
  1065  0EC6                     	;# 
  1066  0EC7                     	;# 
  1067  0EC8                     	;# 
  1068  0EC9                     	;# 
  1069  0ECA                     	;# 
  1070  0ECB                     	;# 
  1071  0ECC                     	;# 
  1072  0F10                     	;# 
  1073  0F11                     	;# 
  1074  0F12                     	;# 
  1075  0F13                     	;# 
  1076  0F14                     	;# 
  1077  0F15                     	;# 
  1078  0F16                     	;# 
  1079  0F17                     	;# 
  1080  0F18                     	;# 
  1081  0F19                     	;# 
  1082  0F1A                     	;# 
  1083  0F1B                     	;# 
  1084  0F1C                     	;# 
  1085  0F1D                     	;# 
  1086  0F1E                     	;# 
  1087  0F1F                     	;# 
  1088  0F20                     	;# 
  1089  0F21                     	;# 
  1090  0F22                     	;# 
  1091  0F23                     	;# 
  1092  0F24                     	;# 
  1093  0F25                     	;# 
  1094  0F26                     	;# 
  1095  0F27                     	;# 
  1096  0F28                     	;# 
  1097  0F29                     	;# 
  1098  0F2A                     	;# 
  1099  0F2B                     	;# 
  1100  0F2C                     	;# 
  1101  0F2D                     	;# 
  1102  0F2E                     	;# 
  1103  0F2F                     	;# 
  1104  0F30                     	;# 
  1105  0F31                     	;# 
  1106  0F32                     	;# 
  1107  0F38                     	;# 
  1108  0F39                     	;# 
  1109  0F3A                     	;# 
  1110  0F3B                     	;# 
  1111  0F3C                     	;# 
  1112  0F3D                     	;# 
  1113  0F3E                     	;# 
  1114  0F3F                     	;# 
  1115  0F40                     	;# 
  1116  0F41                     	;# 
  1117  0F43                     	;# 
  1118  0F44                     	;# 
  1119  0F45                     	;# 
  1120  0F46                     	;# 
  1121  0F47                     	;# 
  1122  0F48                     	;# 
  1123  0F49                     	;# 
  1124  0F4A                     	;# 
  1125  0F4B                     	;# 
  1126  0F4C                     	;# 
  1127  0F4E                     	;# 
  1128  0F4F                     	;# 
  1129  0F50                     	;# 
  1130  0F51                     	;# 
  1131  0F52                     	;# 
  1132  0F53                     	;# 
  1133  0F54                     	;# 
  1134  0F55                     	;# 
  1135  0F56                     	;# 
  1136  0F57                     	;# 
  1137  0F59                     	;# 
  1138  0F5A                     	;# 
  1139  0F5B                     	;# 
  1140  0F5C                     	;# 
  1141  0F5D                     	;# 
  1142  0F61                     	;# 
  1143  0F62                     	;# 
  1144  0F64                     	;# 
  1145  0F65                     	;# 
  1146  0F66                     	;# 
  1147  0F67                     	;# 
  1148  0F68                     	;# 
  1149  0F69                     	;# 
  1150  0F6A                     	;# 
  1151  0F6B                     	;# 
  1152  0F6C                     	;# 
  1153  0F6D                     	;# 
  1154  0FE4                     	;# 
  1155  0FE5                     	;# 
  1156  0FE6                     	;# 
  1157  0FE7                     	;# 
  1158  0FE8                     	;# 
  1159  0FE9                     	;# 
  1160  0FEA                     	;# 
  1161  0FEB                     	;# 
  1162  0FED                     	;# 
  1163  0FEE                     	;# 
  1164  0FEF                     	;# 
  1165  0000                     	;# 
  1166  0001                     	;# 
  1167  0002                     	;# 
  1168  0003                     	;# 
  1169  0004                     	;# 
  1170  0005                     	;# 
  1171  0006                     	;# 
  1172  0007                     	;# 
  1173  0008                     	;# 
  1174  0009                     	;# 
  1175  000A                     	;# 
  1176  000B                     	;# 
  1177  000C                     	;# 
  1178  000D                     	;# 
  1179  000E                     	;# 
  1180  000F                     	;# 
  1181  0010                     	;# 
  1182  0011                     	;# 
  1183  0012                     	;# 
  1184  0013                     	;# 
  1185  0014                     	;# 
  1186  0015                     	;# 
  1187  0016                     	;# 
  1188  0017                     	;# 
  1189  0018                     	;# 
  1190  0019                     	;# 
  1191  001A                     	;# 
  1192  001C                     	;# 
  1193  001C                     	;# 
  1194  001D                     	;# 
  1195  001D                     	;# 
  1196  001E                     	;# 
  1197  001F                     	;# 
  1198  008C                     	;# 
  1199  008C                     	;# 
  1200  008D                     	;# 
  1201  008E                     	;# 
  1202  008E                     	;# 
  1203  008F                     	;# 
  1204  0090                     	;# 
  1205  0090                     	;# 
  1206  0091                     	;# 
  1207  0093                     	;# 
  1208  0094                     	;# 
  1209  0095                     	;# 
  1210  0096                     	;# 
  1211  0097                     	;# 
  1212  0098                     	;# 
  1213  0099                     	;# 
  1214  009A                     	;# 
  1215  009B                     	;# 
  1216  009C                     	;# 
  1217  009D                     	;# 
  1218  009E                     	;# 
  1219  010C                     	;# 
  1220  010D                     	;# 
  1221  010E                     	;# 
  1222  010E                     	;# 
  1223  010F                     	;# 
  1224  0110                     	;# 
  1225  0110                     	;# 
  1226  0111                     	;# 
  1227  0112                     	;# 
  1228  0112                     	;# 
  1229  0113                     	;# 
  1230  0114                     	;# 
  1231  0114                     	;# 
  1232  0115                     	;# 
  1233  0116                     	;# 
  1234  0116                     	;# 
  1235  0117                     	;# 
  1236  0119                     	;# 
  1237  0119                     	;# 
  1238  0119                     	;# 
  1239  011A                     	;# 
  1240  011A                     	;# 
  1241  011A                     	;# 
  1242  011B                     	;# 
  1243  011B                     	;# 
  1244  011B                     	;# 
  1245  011B                     	;# 
  1246  011B                     	;# 
  1247  011C                     	;# 
  1248  011C                     	;# 
  1249  011C                     	;# 
  1250  011D                     	;# 
  1251  011D                     	;# 
  1252  011D                     	;# 
  1253  011E                     	;# 
  1254  011E                     	;# 
  1255  011E                     	;# 
  1256  011F                     	;# 
  1257  011F                     	;# 
  1258  011F                     	;# 
  1259  011F                     	;# 
  1260  011F                     	;# 
  1261  018C                     	;# 
  1262  018D                     	;# 
  1263  018E                     	;# 
  1264  018F                     	;# 
  1265  0190                     	;# 
  1266  0191                     	;# 
  1267  0192                     	;# 
  1268  0196                     	;# 
  1269  0197                     	;# 
  1270  0198                     	;# 
  1271  0199                     	;# 
  1272  019A                     	;# 
  1273  019B                     	;# 
  1274  019C                     	;# 
  1275  020C                     	;# 
  1276  020C                     	;# 
  1277  020D                     	;# 
  1278  020E                     	;# 
  1279  020F                     	;# 
  1280  020F                     	;# 
  1281  0210                     	;# 
  1282  0210                     	;# 
  1283  0211                     	;# 
  1284  0211                     	;# 
  1285  0212                     	;# 
  1286  0212                     	;# 
  1287  0213                     	;# 
  1288  0214                     	;# 
  1289  0215                     	;# 
  1290  0215                     	;# 
  1291  0216                     	;# 
  1292  0216                     	;# 
  1293  0217                     	;# 
  1294  0217                     	;# 
  1295  0218                     	;# 
  1296  0218                     	;# 
  1297  0219                     	;# 
  1298  021A                     	;# 
  1299  021B                     	;# 
  1300  021B                     	;# 
  1301  021C                     	;# 
  1302  021C                     	;# 
  1303  021D                     	;# 
  1304  021D                     	;# 
  1305  021E                     	;# 
  1306  021F                     	;# 
  1307  028C                     	;# 
  1308  028C                     	;# 
  1309  028D                     	;# 
  1310  028D                     	;# 
  1311  028E                     	;# 
  1312  028F                     	;# 
  1313  0290                     	;# 
  1314  0290                     	;# 
  1315  0291                     	;# 
  1316  0292                     	;# 
  1317  0292                     	;# 
  1318  0293                     	;# 
  1319  0293                     	;# 
  1320  0294                     	;# 
  1321  0295                     	;# 
  1322  0296                     	;# 
  1323  0296                     	;# 
  1324  0297                     	;# 
  1325  0298                     	;# 
  1326  0298                     	;# 
  1327  0299                     	;# 
  1328  0299                     	;# 
  1329  029A                     	;# 
  1330  029B                     	;# 
  1331  029C                     	;# 
  1332  029C                     	;# 
  1333  029D                     	;# 
  1334  030C                     	;# 
  1335  030C                     	;# 
  1336  030D                     	;# 
  1337  030E                     	;# 
  1338  030F                     	;# 
  1339  0310                     	;# 
  1340  0310                     	;# 
  1341  0311                     	;# 
  1342  0312                     	;# 
  1343  0313                     	;# 
  1344  0314                     	;# 
  1345  0314                     	;# 
  1346  0315                     	;# 
  1347  0316                     	;# 
  1348  0317                     	;# 
  1349  0318                     	;# 
  1350  0318                     	;# 
  1351  0319                     	;# 
  1352  031A                     	;# 
  1353  031B                     	;# 
  1354  031C                     	;# 
  1355  031C                     	;# 
  1356  031D                     	;# 
  1357  031E                     	;# 
  1358  031F                     	;# 
  1359  038C                     	;# 
  1360  038C                     	;# 
  1361  038D                     	;# 
  1362  038E                     	;# 
  1363  0390                     	;# 
  1364  0390                     	;# 
  1365  0391                     	;# 
  1366  0392                     	;# 
  1367  040C                     	;# 
  1368  040D                     	;# 
  1369  040E                     	;# 
  1370  040F                     	;# 
  1371  0410                     	;# 
  1372  0411                     	;# 
  1373  0416                     	;# 
  1374  0416                     	;# 
  1375  0417                     	;# 
  1376  0418                     	;# 
  1377  0418                     	;# 
  1378  0419                     	;# 
  1379  041A                     	;# 
  1380  041A                     	;# 
  1381  041B                     	;# 
  1382  041C                     	;# 
  1383  041C                     	;# 
  1384  041D                     	;# 
  1385  041E                     	;# 
  1386  041F                     	;# 
  1387  048C                     	;# 
  1388  048C                     	;# 
  1389  048D                     	;# 
  1390  048E                     	;# 
  1391  048F                     	;# 
  1392  048F                     	;# 
  1393  0490                     	;# 
  1394  0491                     	;# 
  1395  0492                     	;# 
  1396  0492                     	;# 
  1397  0493                     	;# 
  1398  0494                     	;# 
  1399  0495                     	;# 
  1400  0495                     	;# 
  1401  0496                     	;# 
  1402  0497                     	;# 
  1403  0498                     	;# 
  1404  0499                     	;# 
  1405  049A                     	;# 
  1406  049B                     	;# 
  1407  049C                     	;# 
  1408  049D                     	;# 
  1409  050C                     	;# 
  1410  050C                     	;# 
  1411  050D                     	;# 
  1412  050E                     	;# 
  1413  050F                     	;# 
  1414  050F                     	;# 
  1415  0510                     	;# 
  1416  0511                     	;# 
  1417  0512                     	;# 
  1418  0512                     	;# 
  1419  0513                     	;# 
  1420  0514                     	;# 
  1421  0515                     	;# 
  1422  0515                     	;# 
  1423  0516                     	;# 
  1424  0517                     	;# 
  1425  0518                     	;# 
  1426  0519                     	;# 
  1427  051A                     	;# 
  1428  051B                     	;# 
  1429  051C                     	;# 
  1430  051D                     	;# 
  1431  058C                     	;# 
  1432  058C                     	;# 
  1433  058D                     	;# 
  1434  058E                     	;# 
  1435  058F                     	;# 
  1436  058F                     	;# 
  1437  0590                     	;# 
  1438  0591                     	;# 
  1439  0592                     	;# 
  1440  0593                     	;# 
  1441  060C                     	;# 
  1442  060D                     	;# 
  1443  060E                     	;# 
  1444  060F                     	;# 
  1445  0610                     	;# 
  1446  0611                     	;# 
  1447  0612                     	;# 
  1448  0613                     	;# 
  1449  0614                     	;# 
  1450  0616                     	;# 
  1451  0617                     	;# 
  1452  0618                     	;# 
  1453  0619                     	;# 
  1454  061A                     	;# 
  1455  061B                     	;# 
  1456  061C                     	;# 
  1457  061D                     	;# 
  1458  061E                     	;# 
  1459  068C                     	;# 
  1460  068D                     	;# 
  1461  068E                     	;# 
  1462  068F                     	;# 
  1463  0690                     	;# 
  1464  0691                     	;# 
  1465  0692                     	;# 
  1466  0693                     	;# 
  1467  0694                     	;# 
  1468  070C                     	;# 
  1469  070D                     	;# 
  1470  070E                     	;# 
  1471  070F                     	;# 
  1472  0710                     	;# 
  1473  0711                     	;# 
  1474  0712                     	;# 
  1475  0713                     	;# 
  1476  0714                     	;# 
  1477  0716                     	;# 
  1478  0717                     	;# 
  1479  0718                     	;# 
  1480  0719                     	;# 
  1481  071A                     	;# 
  1482  071B                     	;# 
  1483  071C                     	;# 
  1484  071D                     	;# 
  1485  071E                     	;# 
  1486  0796                     	;# 
  1487  0797                     	;# 
  1488  0798                     	;# 
  1489  0799                     	;# 
  1490  079A                     	;# 
  1491  079B                     	;# 
  1492  080C                     	;# 
  1493  080D                     	;# 
  1494  080E                     	;# 
  1495  080F                     	;# 
  1496  0810                     	;# 
  1497  0811                     	;# 
  1498  0812                     	;# 
  1499  0813                     	;# 
  1500  0814                     	;# 
  1501  081A                     	;# 
  1502  081B                     	;# 
  1503  081C                     	;# 
  1504  081D                     	;# 
  1505  081E                     	;# 
  1506  081F                     	;# 
  1507  088C                     	;# 
  1508  088D                     	;# 
  1509  088E                     	;# 
  1510  088F                     	;# 
  1511  0890                     	;# 
  1512  0891                     	;# 
  1513  0892                     	;# 
  1514  0893                     	;# 
  1515  0895                     	;# 
  1516  0896                     	;# 
  1517  0897                     	;# 
  1518  0898                     	;# 
  1519  0899                     	;# 
  1520  089A                     	;# 
  1521  089B                     	;# 
  1522  090C                     	;# 
  1523  090E                     	;# 
  1524  090F                     	;# 
  1525  091F                     	;# 
  1526  091F                     	;# 
  1527  098F                     	;# 
  1528  098F                     	;# 
  1529  0990                     	;# 
  1530  0991                     	;# 
  1531  0992                     	;# 
  1532  0993                     	;# 
  1533  0994                     	;# 
  1534  0995                     	;# 
  1535  0996                     	;# 
  1536  0997                     	;# 
  1537  0E0F                     	;# 
  1538  0E10                     	;# 
  1539  0E11                     	;# 
  1540  0E12                     	;# 
  1541  0E13                     	;# 
  1542  0E14                     	;# 
  1543  0E15                     	;# 
  1544  0E16                     	;# 
  1545  0E17                     	;# 
  1546  0E18                     	;# 
  1547  0E19                     	;# 
  1548  0E1A                     	;# 
  1549  0E1B                     	;# 
  1550  0E1C                     	;# 
  1551  0E1D                     	;# 
  1552  0E1E                     	;# 
  1553  0E1F                     	;# 
  1554  0E20                     	;# 
  1555  0E21                     	;# 
  1556  0E22                     	;# 
  1557  0E23                     	;# 
  1558  0E24                     	;# 
  1559  0E25                     	;# 
  1560  0E26                     	;# 
  1561  0E27                     	;# 
  1562  0E28                     	;# 
  1563  0E29                     	;# 
  1564  0E2A                     	;# 
  1565  0E2B                     	;# 
  1566  0E2C                     	;# 
  1567  0E2D                     	;# 
  1568  0E2E                     	;# 
  1569  0E2F                     	;# 
  1570  0E30                     	;# 
  1571  0E31                     	;# 
  1572  0E32                     	;# 
  1573  0E33                     	;# 
  1574  0E34                     	;# 
  1575  0E35                     	;# 
  1576  0E36                     	;# 
  1577  0E37                     	;# 
  1578  0E8F                     	;# 
  1579  0E90                     	;# 
  1580  0E91                     	;# 
  1581  0E92                     	;# 
  1582  0E93                     	;# 
  1583  0E94                     	;# 
  1584  0E95                     	;# 
  1585  0E96                     	;# 
  1586  0E97                     	;# 
  1587  0E9C                     	;# 
  1588  0E9D                     	;# 
  1589  0E9E                     	;# 
  1590  0EA1                     	;# 
  1591  0EA2                     	;# 
  1592  0EA3                     	;# 
  1593  0EA4                     	;# 
  1594  0EA5                     	;# 
  1595  0EA9                     	;# 
  1596  0EAA                     	;# 
  1597  0EAB                     	;# 
  1598  0EAC                     	;# 
  1599  0EB1                     	;# 
  1600  0EB2                     	;# 
  1601  0EB3                     	;# 
  1602  0EB8                     	;# 
  1603  0EB9                     	;# 
  1604  0EBA                     	;# 
  1605  0EBB                     	;# 
  1606  0EBC                     	;# 
  1607  0EBD                     	;# 
  1608  0EBE                     	;# 
  1609  0EC3                     	;# 
  1610  0EC5                     	;# 
  1611  0EC6                     	;# 
  1612  0EC7                     	;# 
  1613  0EC8                     	;# 
  1614  0EC9                     	;# 
  1615  0ECA                     	;# 
  1616  0ECB                     	;# 
  1617  0ECC                     	;# 
  1618  0F10                     	;# 
  1619  0F11                     	;# 
  1620  0F12                     	;# 
  1621  0F13                     	;# 
  1622  0F14                     	;# 
  1623  0F15                     	;# 
  1624  0F16                     	;# 
  1625  0F17                     	;# 
  1626  0F18                     	;# 
  1627  0F19                     	;# 
  1628  0F1A                     	;# 
  1629  0F1B                     	;# 
  1630  0F1C                     	;# 
  1631  0F1D                     	;# 
  1632  0F1E                     	;# 
  1633  0F1F                     	;# 
  1634  0F20                     	;# 
  1635  0F21                     	;# 
  1636  0F22                     	;# 
  1637  0F23                     	;# 
  1638  0F24                     	;# 
  1639  0F25                     	;# 
  1640  0F26                     	;# 
  1641  0F27                     	;# 
  1642  0F28                     	;# 
  1643  0F29                     	;# 
  1644  0F2A                     	;# 
  1645  0F2B                     	;# 
  1646  0F2C                     	;# 
  1647  0F2D                     	;# 
  1648  0F2E                     	;# 
  1649  0F2F                     	;# 
  1650  0F30                     	;# 
  1651  0F31                     	;# 
  1652  0F32                     	;# 
  1653  0F38                     	;# 
  1654  0F39                     	;# 
  1655  0F3A                     	;# 
  1656  0F3B                     	;# 
  1657  0F3C                     	;# 
  1658  0F3D                     	;# 
  1659  0F3E                     	;# 
  1660  0F3F                     	;# 
  1661  0F40                     	;# 
  1662  0F41                     	;# 
  1663  0F43                     	;# 
  1664  0F44                     	;# 
  1665  0F45                     	;# 
  1666  0F46                     	;# 
  1667  0F47                     	;# 
  1668  0F48                     	;# 
  1669  0F49                     	;# 
  1670  0F4A                     	;# 
  1671  0F4B                     	;# 
  1672  0F4C                     	;# 
  1673  0F4E                     	;# 
  1674  0F4F                     	;# 
  1675  0F50                     	;# 
  1676  0F51                     	;# 
  1677  0F52                     	;# 
  1678  0F53                     	;# 
  1679  0F54                     	;# 
  1680  0F55                     	;# 
  1681  0F56                     	;# 
  1682  0F57                     	;# 
  1683  0F59                     	;# 
  1684  0F5A                     	;# 
  1685  0F5B                     	;# 
  1686  0F5C                     	;# 
  1687  0F5D                     	;# 
  1688  0F61                     	;# 
  1689  0F62                     	;# 
  1690  0F64                     	;# 
  1691  0F65                     	;# 
  1692  0F66                     	;# 
  1693  0F67                     	;# 
  1694  0F68                     	;# 
  1695  0F69                     	;# 
  1696  0F6A                     	;# 
  1697  0F6B                     	;# 
  1698  0F6C                     	;# 
  1699  0F6D                     	;# 
  1700  0FE4                     	;# 
  1701  0FE5                     	;# 
  1702  0FE6                     	;# 
  1703  0FE7                     	;# 
  1704  0FE8                     	;# 
  1705  0FE9                     	;# 
  1706  0FEA                     	;# 
  1707  0FEB                     	;# 
  1708  0FED                     	;# 
  1709  0FEE                     	;# 
  1710  0FEF                     	;# 
  1711  0000                     	;# 
  1712  0001                     	;# 
  1713  0002                     	;# 
  1714  0003                     	;# 
  1715  0004                     	;# 
  1716  0005                     	;# 
  1717  0006                     	;# 
  1718  0007                     	;# 
  1719  0008                     	;# 
  1720  0009                     	;# 
  1721  000A                     	;# 
  1722  000B                     	;# 
  1723  000C                     	;# 
  1724  000D                     	;# 
  1725  000E                     	;# 
  1726  000F                     	;# 
  1727  0010                     	;# 
  1728  0011                     	;# 
  1729  0012                     	;# 
  1730  0013                     	;# 
  1731  0014                     	;# 
  1732  0015                     	;# 
  1733  0016                     	;# 
  1734  0017                     	;# 
  1735  0018                     	;# 
  1736  0019                     	;# 
  1737  001A                     	;# 
  1738  001C                     	;# 
  1739  001C                     	;# 
  1740  001D                     	;# 
  1741  001D                     	;# 
  1742  001E                     	;# 
  1743  001F                     	;# 
  1744  008C                     	;# 
  1745  008C                     	;# 
  1746  008D                     	;# 
  1747  008E                     	;# 
  1748  008E                     	;# 
  1749  008F                     	;# 
  1750  0090                     	;# 
  1751  0090                     	;# 
  1752  0091                     	;# 
  1753  0093                     	;# 
  1754  0094                     	;# 
  1755  0095                     	;# 
  1756  0096                     	;# 
  1757  0097                     	;# 
  1758  0098                     	;# 
  1759  0099                     	;# 
  1760  009A                     	;# 
  1761  009B                     	;# 
  1762  009C                     	;# 
  1763  009D                     	;# 
  1764  009E                     	;# 
  1765  010C                     	;# 
  1766  010D                     	;# 
  1767  010E                     	;# 
  1768  010E                     	;# 
  1769  010F                     	;# 
  1770  0110                     	;# 
  1771  0110                     	;# 
  1772  0111                     	;# 
  1773  0112                     	;# 
  1774  0112                     	;# 
  1775  0113                     	;# 
  1776  0114                     	;# 
  1777  0114                     	;# 
  1778  0115                     	;# 
  1779  0116                     	;# 
  1780  0116                     	;# 
  1781  0117                     	;# 
  1782  0119                     	;# 
  1783  0119                     	;# 
  1784  0119                     	;# 
  1785  011A                     	;# 
  1786  011A                     	;# 
  1787  011A                     	;# 
  1788  011B                     	;# 
  1789  011B                     	;# 
  1790  011B                     	;# 
  1791  011B                     	;# 
  1792  011B                     	;# 
  1793  011C                     	;# 
  1794  011C                     	;# 
  1795  011C                     	;# 
  1796  011D                     	;# 
  1797  011D                     	;# 
  1798  011D                     	;# 
  1799  011E                     	;# 
  1800  011E                     	;# 
  1801  011E                     	;# 
  1802  011F                     	;# 
  1803  011F                     	;# 
  1804  011F                     	;# 
  1805  011F                     	;# 
  1806  011F                     	;# 
  1807  018C                     	;# 
  1808  018D                     	;# 
  1809  018E                     	;# 
  1810  018F                     	;# 
  1811  0190                     	;# 
  1812  0191                     	;# 
  1813  0192                     	;# 
  1814  0196                     	;# 
  1815  0197                     	;# 
  1816  0198                     	;# 
  1817  0199                     	;# 
  1818  019A                     	;# 
  1819  019B                     	;# 
  1820  019C                     	;# 
  1821  020C                     	;# 
  1822  020C                     	;# 
  1823  020D                     	;# 
  1824  020E                     	;# 
  1825  020F                     	;# 
  1826  020F                     	;# 
  1827  0210                     	;# 
  1828  0210                     	;# 
  1829  0211                     	;# 
  1830  0211                     	;# 
  1831  0212                     	;# 
  1832  0212                     	;# 
  1833  0213                     	;# 
  1834  0214                     	;# 
  1835  0215                     	;# 
  1836  0215                     	;# 
  1837  0216                     	;# 
  1838  0216                     	;# 
  1839  0217                     	;# 
  1840  0217                     	;# 
  1841  0218                     	;# 
  1842  0218                     	;# 
  1843  0219                     	;# 
  1844  021A                     	;# 
  1845  021B                     	;# 
  1846  021B                     	;# 
  1847  021C                     	;# 
  1848  021C                     	;# 
  1849  021D                     	;# 
  1850  021D                     	;# 
  1851  021E                     	;# 
  1852  021F                     	;# 
  1853  028C                     	;# 
  1854  028C                     	;# 
  1855  028D                     	;# 
  1856  028D                     	;# 
  1857  028E                     	;# 
  1858  028F                     	;# 
  1859  0290                     	;# 
  1860  0290                     	;# 
  1861  0291                     	;# 
  1862  0292                     	;# 
  1863  0292                     	;# 
  1864  0293                     	;# 
  1865  0293                     	;# 
  1866  0294                     	;# 
  1867  0295                     	;# 
  1868  0296                     	;# 
  1869  0296                     	;# 
  1870  0297                     	;# 
  1871  0298                     	;# 
  1872  0298                     	;# 
  1873  0299                     	;# 
  1874  0299                     	;# 
  1875  029A                     	;# 
  1876  029B                     	;# 
  1877  029C                     	;# 
  1878  029C                     	;# 
  1879  029D                     	;# 
  1880  030C                     	;# 
  1881  030C                     	;# 
  1882  030D                     	;# 
  1883  030E                     	;# 
  1884  030F                     	;# 
  1885  0310                     	;# 
  1886  0310                     	;# 
  1887  0311                     	;# 
  1888  0312                     	;# 
  1889  0313                     	;# 
  1890  0314                     	;# 
  1891  0314                     	;# 
  1892  0315                     	;# 
  1893  0316                     	;# 
  1894  0317                     	;# 
  1895  0318                     	;# 
  1896  0318                     	;# 
  1897  0319                     	;# 
  1898  031A                     	;# 
  1899  031B                     	;# 
  1900  031C                     	;# 
  1901  031C                     	;# 
  1902  031D                     	;# 
  1903  031E                     	;# 
  1904  031F                     	;# 
  1905  038C                     	;# 
  1906  038C                     	;# 
  1907  038D                     	;# 
  1908  038E                     	;# 
  1909  0390                     	;# 
  1910  0390                     	;# 
  1911  0391                     	;# 
  1912  0392                     	;# 
  1913  040C                     	;# 
  1914  040D                     	;# 
  1915  040E                     	;# 
  1916  040F                     	;# 
  1917  0410                     	;# 
  1918  0411                     	;# 
  1919  0416                     	;# 
  1920  0416                     	;# 
  1921  0417                     	;# 
  1922  0418                     	;# 
  1923  0418                     	;# 
  1924  0419                     	;# 
  1925  041A                     	;# 
  1926  041A                     	;# 
  1927  041B                     	;# 
  1928  041C                     	;# 
  1929  041C                     	;# 
  1930  041D                     	;# 
  1931  041E                     	;# 
  1932  041F                     	;# 
  1933  048C                     	;# 
  1934  048C                     	;# 
  1935  048D                     	;# 
  1936  048E                     	;# 
  1937  048F                     	;# 
  1938  048F                     	;# 
  1939  0490                     	;# 
  1940  0491                     	;# 
  1941  0492                     	;# 
  1942  0492                     	;# 
  1943  0493                     	;# 
  1944  0494                     	;# 
  1945  0495                     	;# 
  1946  0495                     	;# 
  1947  0496                     	;# 
  1948  0497                     	;# 
  1949  0498                     	;# 
  1950  0499                     	;# 
  1951  049A                     	;# 
  1952  049B                     	;# 
  1953  049C                     	;# 
  1954  049D                     	;# 
  1955  050C                     	;# 
  1956  050C                     	;# 
  1957  050D                     	;# 
  1958  050E                     	;# 
  1959  050F                     	;# 
  1960  050F                     	;# 
  1961  0510                     	;# 
  1962  0511                     	;# 
  1963  0512                     	;# 
  1964  0512                     	;# 
  1965  0513                     	;# 
  1966  0514                     	;# 
  1967  0515                     	;# 
  1968  0515                     	;# 
  1969  0516                     	;# 
  1970  0517                     	;# 
  1971  0518                     	;# 
  1972  0519                     	;# 
  1973  051A                     	;# 
  1974  051B                     	;# 
  1975  051C                     	;# 
  1976  051D                     	;# 
  1977  058C                     	;# 
  1978  058C                     	;# 
  1979  058D                     	;# 
  1980  058E                     	;# 
  1981  058F                     	;# 
  1982  058F                     	;# 
  1983  0590                     	;# 
  1984  0591                     	;# 
  1985  0592                     	;# 
  1986  0593                     	;# 
  1987  060C                     	;# 
  1988  060D                     	;# 
  1989  060E                     	;# 
  1990  060F                     	;# 
  1991  0610                     	;# 
  1992  0611                     	;# 
  1993  0612                     	;# 
  1994  0613                     	;# 
  1995  0614                     	;# 
  1996  0616                     	;# 
  1997  0617                     	;# 
  1998  0618                     	;# 
  1999  0619                     	;# 
  2000  061A                     	;# 
  2001  061B                     	;# 
  2002  061C                     	;# 
  2003  061D                     	;# 
  2004  061E                     	;# 
  2005  068C                     	;# 
  2006  068D                     	;# 
  2007  068E                     	;# 
  2008  068F                     	;# 
  2009  0690                     	;# 
  2010  0691                     	;# 
  2011  0692                     	;# 
  2012  0693                     	;# 
  2013  0694                     	;# 
  2014  070C                     	;# 
  2015  070D                     	;# 
  2016  070E                     	;# 
  2017  070F                     	;# 
  2018  0710                     	;# 
  2019  0711                     	;# 
  2020  0712                     	;# 
  2021  0713                     	;# 
  2022  0714                     	;# 
  2023  0716                     	;# 
  2024  0717                     	;# 
  2025  0718                     	;# 
  2026  0719                     	;# 
  2027  071A                     	;# 
  2028  071B                     	;# 
  2029  071C                     	;# 
  2030  071D                     	;# 
  2031  071E                     	;# 
  2032  0796                     	;# 
  2033  0797                     	;# 
  2034  0798                     	;# 
  2035  0799                     	;# 
  2036  079A                     	;# 
  2037  079B                     	;# 
  2038  080C                     	;# 
  2039  080D                     	;# 
  2040  080E                     	;# 
  2041  080F                     	;# 
  2042  0810                     	;# 
  2043  0811                     	;# 
  2044  0812                     	;# 
  2045  0813                     	;# 
  2046  0814                     	;# 
  2047  081A                     	;# 
  2048  081B                     	;# 
  2049  081C                     	;# 
  2050  081D                     	;# 
  2051  081E                     	;# 
  2052  081F                     	;# 
  2053  088C                     	;# 
  2054  088D                     	;# 
  2055  088E                     	;# 
  2056  088F                     	;# 
  2057  0890                     	;# 
  2058  0891                     	;# 
  2059  0892                     	;# 
  2060  0893                     	;# 
  2061  0895                     	;# 
  2062  0896                     	;# 
  2063  0897                     	;# 
  2064  0898                     	;# 
  2065  0899                     	;# 
  2066  089A                     	;# 
  2067  089B                     	;# 
  2068  090C                     	;# 
  2069  090E                     	;# 
  2070  090F                     	;# 
  2071  091F                     	;# 
  2072  091F                     	;# 
  2073  098F                     	;# 
  2074  098F                     	;# 
  2075  0990                     	;# 
  2076  0991                     	;# 
  2077  0992                     	;# 
  2078  0993                     	;# 
  2079  0994                     	;# 
  2080  0995                     	;# 
  2081  0996                     	;# 
  2082  0997                     	;# 
  2083  0E0F                     	;# 
  2084  0E10                     	;# 
  2085  0E11                     	;# 
  2086  0E12                     	;# 
  2087  0E13                     	;# 
  2088  0E14                     	;# 
  2089  0E15                     	;# 
  2090  0E16                     	;# 
  2091  0E17                     	;# 
  2092  0E18                     	;# 
  2093  0E19                     	;# 
  2094  0E1A                     	;# 
  2095  0E1B                     	;# 
  2096  0E1C                     	;# 
  2097  0E1D                     	;# 
  2098  0E1E                     	;# 
  2099  0E1F                     	;# 
  2100  0E20                     	;# 
  2101  0E21                     	;# 
  2102  0E22                     	;# 
  2103  0E23                     	;# 
  2104  0E24                     	;# 
  2105  0E25                     	;# 
  2106  0E26                     	;# 
  2107  0E27                     	;# 
  2108  0E28                     	;# 
  2109  0E29                     	;# 
  2110  0E2A                     	;# 
  2111  0E2B                     	;# 
  2112  0E2C                     	;# 
  2113  0E2D                     	;# 
  2114  0E2E                     	;# 
  2115  0E2F                     	;# 
  2116  0E30                     	;# 
  2117  0E31                     	;# 
  2118  0E32                     	;# 
  2119  0E33                     	;# 
  2120  0E34                     	;# 
  2121  0E35                     	;# 
  2122  0E36                     	;# 
  2123  0E37                     	;# 
  2124  0E8F                     	;# 
  2125  0E90                     	;# 
  2126  0E91                     	;# 
  2127  0E92                     	;# 
  2128  0E93                     	;# 
  2129  0E94                     	;# 
  2130  0E95                     	;# 
  2131  0E96                     	;# 
  2132  0E97                     	;# 
  2133  0E9C                     	;# 
  2134  0E9D                     	;# 
  2135  0E9E                     	;# 
  2136  0EA1                     	;# 
  2137  0EA2                     	;# 
  2138  0EA3                     	;# 
  2139  0EA4                     	;# 
  2140  0EA5                     	;# 
  2141  0EA9                     	;# 
  2142  0EAA                     	;# 
  2143  0EAB                     	;# 
  2144  0EAC                     	;# 
  2145  0EB1                     	;# 
  2146  0EB2                     	;# 
  2147  0EB3                     	;# 
  2148  0EB8                     	;# 
  2149  0EB9                     	;# 
  2150  0EBA                     	;# 
  2151  0EBB                     	;# 
  2152  0EBC                     	;# 
  2153  0EBD                     	;# 
  2154  0EBE                     	;# 
  2155  0EC3                     	;# 
  2156  0EC5                     	;# 
  2157  0EC6                     	;# 
  2158  0EC7                     	;# 
  2159  0EC8                     	;# 
  2160  0EC9                     	;# 
  2161  0ECA                     	;# 
  2162  0ECB                     	;# 
  2163  0ECC                     	;# 
  2164  0F10                     	;# 
  2165  0F11                     	;# 
  2166  0F12                     	;# 
  2167  0F13                     	;# 
  2168  0F14                     	;# 
  2169  0F15                     	;# 
  2170  0F16                     	;# 
  2171  0F17                     	;# 
  2172  0F18                     	;# 
  2173  0F19                     	;# 
  2174  0F1A                     	;# 
  2175  0F1B                     	;# 
  2176  0F1C                     	;# 
  2177  0F1D                     	;# 
  2178  0F1E                     	;# 
  2179  0F1F                     	;# 
  2180  0F20                     	;# 
  2181  0F21                     	;# 
  2182  0F22                     	;# 
  2183  0F23                     	;# 
  2184  0F24                     	;# 
  2185  0F25                     	;# 
  2186  0F26                     	;# 
  2187  0F27                     	;# 
  2188  0F28                     	;# 
  2189  0F29                     	;# 
  2190  0F2A                     	;# 
  2191  0F2B                     	;# 
  2192  0F2C                     	;# 
  2193  0F2D                     	;# 
  2194  0F2E                     	;# 
  2195  0F2F                     	;# 
  2196  0F30                     	;# 
  2197  0F31                     	;# 
  2198  0F32                     	;# 
  2199  0F38                     	;# 
  2200  0F39                     	;# 
  2201  0F3A                     	;# 
  2202  0F3B                     	;# 
  2203  0F3C                     	;# 
  2204  0F3D                     	;# 
  2205  0F3E                     	;# 
  2206  0F3F                     	;# 
  2207  0F40                     	;# 
  2208  0F41                     	;# 
  2209  0F43                     	;# 
  2210  0F44                     	;# 
  2211  0F45                     	;# 
  2212  0F46                     	;# 
  2213  0F47                     	;# 
  2214  0F48                     	;# 
  2215  0F49                     	;# 
  2216  0F4A                     	;# 
  2217  0F4B                     	;# 
  2218  0F4C                     	;# 
  2219  0F4E                     	;# 
  2220  0F4F                     	;# 
  2221  0F50                     	;# 
  2222  0F51                     	;# 
  2223  0F52                     	;# 
  2224  0F53                     	;# 
  2225  0F54                     	;# 
  2226  0F55                     	;# 
  2227  0F56                     	;# 
  2228  0F57                     	;# 
  2229  0F59                     	;# 
  2230  0F5A                     	;# 
  2231  0F5B                     	;# 
  2232  0F5C                     	;# 
  2233  0F5D                     	;# 
  2234  0F61                     	;# 
  2235  0F62                     	;# 
  2236  0F64                     	;# 
  2237  0F65                     	;# 
  2238  0F66                     	;# 
  2239  0F67                     	;# 
  2240  0F68                     	;# 
  2241  0F69                     	;# 
  2242  0F6A                     	;# 
  2243  0F6B                     	;# 
  2244  0F6C                     	;# 
  2245  0F6D                     	;# 
  2246  0FE4                     	;# 
  2247  0FE5                     	;# 
  2248  0FE6                     	;# 
  2249  0FE7                     	;# 
  2250  0FE8                     	;# 
  2251  0FE9                     	;# 
  2252  0FEA                     	;# 
  2253  0FEB                     	;# 
  2254  0FED                     	;# 
  2255  0FEE                     	;# 
  2256  0FEF                     	;# 
  2257  0000                     	;# 
  2258  0001                     	;# 
  2259  0002                     	;# 
  2260  0003                     	;# 
  2261  0004                     	;# 
  2262  0005                     	;# 
  2263  0006                     	;# 
  2264  0007                     	;# 
  2265  0008                     	;# 
  2266  0009                     	;# 
  2267  000A                     	;# 
  2268  000B                     	;# 
  2269  000C                     	;# 
  2270  000D                     	;# 
  2271  000E                     	;# 
  2272  000F                     	;# 
  2273  0010                     	;# 
  2274  0011                     	;# 
  2275  0012                     	;# 
  2276  0013                     	;# 
  2277  0014                     	;# 
  2278  0015                     	;# 
  2279  0016                     	;# 
  2280  0017                     	;# 
  2281  0018                     	;# 
  2282  0019                     	;# 
  2283  001A                     	;# 
  2284  001C                     	;# 
  2285  001C                     	;# 
  2286  001D                     	;# 
  2287  001D                     	;# 
  2288  001E                     	;# 
  2289  001F                     	;# 
  2290  008C                     	;# 
  2291  008C                     	;# 
  2292  008D                     	;# 
  2293  008E                     	;# 
  2294  008E                     	;# 
  2295  008F                     	;# 
  2296  0090                     	;# 
  2297  0090                     	;# 
  2298  0091                     	;# 
  2299  0093                     	;# 
  2300  0094                     	;# 
  2301  0095                     	;# 
  2302  0096                     	;# 
  2303  0097                     	;# 
  2304  0098                     	;# 
  2305  0099                     	;# 
  2306  009A                     	;# 
  2307  009B                     	;# 
  2308  009C                     	;# 
  2309  009D                     	;# 
  2310  009E                     	;# 
  2311  010C                     	;# 
  2312  010D                     	;# 
  2313  010E                     	;# 
  2314  010E                     	;# 
  2315  010F                     	;# 
  2316  0110                     	;# 
  2317  0110                     	;# 
  2318  0111                     	;# 
  2319  0112                     	;# 
  2320  0112                     	;# 
  2321  0113                     	;# 
  2322  0114                     	;# 
  2323  0114                     	;# 
  2324  0115                     	;# 
  2325  0116                     	;# 
  2326  0116                     	;# 
  2327  0117                     	;# 
  2328  0119                     	;# 
  2329  0119                     	;# 
  2330  0119                     	;# 
  2331  011A                     	;# 
  2332  011A                     	;# 
  2333  011A                     	;# 
  2334  011B                     	;# 
  2335  011B                     	;# 
  2336  011B                     	;# 
  2337  011B                     	;# 
  2338  011B                     	;# 
  2339  011C                     	;# 
  2340  011C                     	;# 
  2341  011C                     	;# 
  2342  011D                     	;# 
  2343  011D                     	;# 
  2344  011D                     	;# 
  2345  011E                     	;# 
  2346  011E                     	;# 
  2347  011E                     	;# 
  2348  011F                     	;# 
  2349  011F                     	;# 
  2350  011F                     	;# 
  2351  011F                     	;# 
  2352  011F                     	;# 
  2353  018C                     	;# 
  2354  018D                     	;# 
  2355  018E                     	;# 
  2356  018F                     	;# 
  2357  0190                     	;# 
  2358  0191                     	;# 
  2359  0192                     	;# 
  2360  0196                     	;# 
  2361  0197                     	;# 
  2362  0198                     	;# 
  2363  0199                     	;# 
  2364  019A                     	;# 
  2365  019B                     	;# 
  2366  019C                     	;# 
  2367  020C                     	;# 
  2368  020C                     	;# 
  2369  020D                     	;# 
  2370  020E                     	;# 
  2371  020F                     	;# 
  2372  020F                     	;# 
  2373  0210                     	;# 
  2374  0210                     	;# 
  2375  0211                     	;# 
  2376  0211                     	;# 
  2377  0212                     	;# 
  2378  0212                     	;# 
  2379  0213                     	;# 
  2380  0214                     	;# 
  2381  0215                     	;# 
  2382  0215                     	;# 
  2383  0216                     	;# 
  2384  0216                     	;# 
  2385  0217                     	;# 
  2386  0217                     	;# 
  2387  0218                     	;# 
  2388  0218                     	;# 
  2389  0219                     	;# 
  2390  021A                     	;# 
  2391  021B                     	;# 
  2392  021B                     	;# 
  2393  021C                     	;# 
  2394  021C                     	;# 
  2395  021D                     	;# 
  2396  021D                     	;# 
  2397  021E                     	;# 
  2398  021F                     	;# 
  2399  028C                     	;# 
  2400  028C                     	;# 
  2401  028D                     	;# 
  2402  028D                     	;# 
  2403  028E                     	;# 
  2404  028F                     	;# 
  2405  0290                     	;# 
  2406  0290                     	;# 
  2407  0291                     	;# 
  2408  0292                     	;# 
  2409  0292                     	;# 
  2410  0293                     	;# 
  2411  0293                     	;# 
  2412  0294                     	;# 
  2413  0295                     	;# 
  2414  0296                     	;# 
  2415  0296                     	;# 
  2416  0297                     	;# 
  2417  0298                     	;# 
  2418  0298                     	;# 
  2419  0299                     	;# 
  2420  0299                     	;# 
  2421  029A                     	;# 
  2422  029B                     	;# 
  2423  029C                     	;# 
  2424  029C                     	;# 
  2425  029D                     	;# 
  2426  030C                     	;# 
  2427  030C                     	;# 
  2428  030D                     	;# 
  2429  030E                     	;# 
  2430  030F                     	;# 
  2431  0310                     	;# 
  2432  0310                     	;# 
  2433  0311                     	;# 
  2434  0312                     	;# 
  2435  0313                     	;# 
  2436  0314                     	;# 
  2437  0314                     	;# 
  2438  0315                     	;# 
  2439  0316                     	;# 
  2440  0317                     	;# 
  2441  0318                     	;# 
  2442  0318                     	;# 
  2443  0319                     	;# 
  2444  031A                     	;# 
  2445  031B                     	;# 
  2446  031C                     	;# 
  2447  031C                     	;# 
  2448  031D                     	;# 
  2449  031E                     	;# 
  2450  031F                     	;# 
  2451  038C                     	;# 
  2452  038C                     	;# 
  2453  038D                     	;# 
  2454  038E                     	;# 
  2455  0390                     	;# 
  2456  0390                     	;# 
  2457  0391                     	;# 
  2458  0392                     	;# 
  2459  040C                     	;# 
  2460  040D                     	;# 
  2461  040E                     	;# 
  2462  040F                     	;# 
  2463  0410                     	;# 
  2464  0411                     	;# 
  2465  0416                     	;# 
  2466  0416                     	;# 
  2467  0417                     	;# 
  2468  0418                     	;# 
  2469  0418                     	;# 
  2470  0419                     	;# 
  2471  041A                     	;# 
  2472  041A                     	;# 
  2473  041B                     	;# 
  2474  041C                     	;# 
  2475  041C                     	;# 
  2476  041D                     	;# 
  2477  041E                     	;# 
  2478  041F                     	;# 
  2479  048C                     	;# 
  2480  048C                     	;# 
  2481  048D                     	;# 
  2482  048E                     	;# 
  2483  048F                     	;# 
  2484  048F                     	;# 
  2485  0490                     	;# 
  2486  0491                     	;# 
  2487  0492                     	;# 
  2488  0492                     	;# 
  2489  0493                     	;# 
  2490  0494                     	;# 
  2491  0495                     	;# 
  2492  0495                     	;# 
  2493  0496                     	;# 
  2494  0497                     	;# 
  2495  0498                     	;# 
  2496  0499                     	;# 
  2497  049A                     	;# 
  2498  049B                     	;# 
  2499  049C                     	;# 
  2500  049D                     	;# 
  2501  050C                     	;# 
  2502  050C                     	;# 
  2503  050D                     	;# 
  2504  050E                     	;# 
  2505  050F                     	;# 
  2506  050F                     	;# 
  2507  0510                     	;# 
  2508  0511                     	;# 
  2509  0512                     	;# 
  2510  0512                     	;# 
  2511  0513                     	;# 
  2512  0514                     	;# 
  2513  0515                     	;# 
  2514  0515                     	;# 
  2515  0516                     	;# 
  2516  0517                     	;# 
  2517  0518                     	;# 
  2518  0519                     	;# 
  2519  051A                     	;# 
  2520  051B                     	;# 
  2521  051C                     	;# 
  2522  051D                     	;# 
  2523  058C                     	;# 
  2524  058C                     	;# 
  2525  058D                     	;# 
  2526  058E                     	;# 
  2527  058F                     	;# 
  2528  058F                     	;# 
  2529  0590                     	;# 
  2530  0591                     	;# 
  2531  0592                     	;# 
  2532  0593                     	;# 
  2533  060C                     	;# 
  2534  060D                     	;# 
  2535  060E                     	;# 
  2536  060F                     	;# 
  2537  0610                     	;# 
  2538  0611                     	;# 
  2539  0612                     	;# 
  2540  0613                     	;# 
  2541  0614                     	;# 
  2542  0616                     	;# 
  2543  0617                     	;# 
  2544  0618                     	;# 
  2545  0619                     	;# 
  2546  061A                     	;# 
  2547  061B                     	;# 
  2548  061C                     	;# 
  2549  061D                     	;# 
  2550  061E                     	;# 
  2551  068C                     	;# 
  2552  068D                     	;# 
  2553  068E                     	;# 
  2554  068F                     	;# 
  2555  0690                     	;# 
  2556  0691                     	;# 
  2557  0692                     	;# 
  2558  0693                     	;# 
  2559  0694                     	;# 
  2560  070C                     	;# 
  2561  070D                     	;# 
  2562  070E                     	;# 
  2563  070F                     	;# 
  2564  0710                     	;# 
  2565  0711                     	;# 
  2566  0712                     	;# 
  2567  0713                     	;# 
  2568  0714                     	;# 
  2569  0716                     	;# 
  2570  0717                     	;# 
  2571  0718                     	;# 
  2572  0719                     	;# 
  2573  071A                     	;# 
  2574  071B                     	;# 
  2575  071C                     	;# 
  2576  071D                     	;# 
  2577  071E                     	;# 
  2578  0796                     	;# 
  2579  0797                     	;# 
  2580  0798                     	;# 
  2581  0799                     	;# 
  2582  079A                     	;# 
  2583  079B                     	;# 
  2584  080C                     	;# 
  2585  080D                     	;# 
  2586  080E                     	;# 
  2587  080F                     	;# 
  2588  0810                     	;# 
  2589  0811                     	;# 
  2590  0812                     	;# 
  2591  0813                     	;# 
  2592  0814                     	;# 
  2593  081A                     	;# 
  2594  081B                     	;# 
  2595  081C                     	;# 
  2596  081D                     	;# 
  2597  081E                     	;# 
  2598  081F                     	;# 
  2599  088C                     	;# 
  2600  088D                     	;# 
  2601  088E                     	;# 
  2602  088F                     	;# 
  2603  0890                     	;# 
  2604  0891                     	;# 
  2605  0892                     	;# 
  2606  0893                     	;# 
  2607  0895                     	;# 
  2608  0896                     	;# 
  2609  0897                     	;# 
  2610  0898                     	;# 
  2611  0899                     	;# 
  2612  089A                     	;# 
  2613  089B                     	;# 
  2614  090C                     	;# 
  2615  090E                     	;# 
  2616  090F                     	;# 
  2617  091F                     	;# 
  2618  091F                     	;# 
  2619  098F                     	;# 
  2620  098F                     	;# 
  2621  0990                     	;# 
  2622  0991                     	;# 
  2623  0992                     	;# 
  2624  0993                     	;# 
  2625  0994                     	;# 
  2626  0995                     	;# 
  2627  0996                     	;# 
  2628  0997                     	;# 
  2629  0E0F                     	;# 
  2630  0E10                     	;# 
  2631  0E11                     	;# 
  2632  0E12                     	;# 
  2633  0E13                     	;# 
  2634  0E14                     	;# 
  2635  0E15                     	;# 
  2636  0E16                     	;# 
  2637  0E17                     	;# 
  2638  0E18                     	;# 
  2639  0E19                     	;# 
  2640  0E1A                     	;# 
  2641  0E1B                     	;# 
  2642  0E1C                     	;# 
  2643  0E1D                     	;# 
  2644  0E1E                     	;# 
  2645  0E1F                     	;# 
  2646  0E20                     	;# 
  2647  0E21                     	;# 
  2648  0E22                     	;# 
  2649  0E23                     	;# 
  2650  0E24                     	;# 
  2651  0E25                     	;# 
  2652  0E26                     	;# 
  2653  0E27                     	;# 
  2654  0E28                     	;# 
  2655  0E29                     	;# 
  2656  0E2A                     	;# 
  2657  0E2B                     	;# 
  2658  0E2C                     	;# 
  2659  0E2D                     	;# 
  2660  0E2E                     	;# 
  2661  0E2F                     	;# 
  2662  0E30                     	;# 
  2663  0E31                     	;# 
  2664  0E32                     	;# 
  2665  0E33                     	;# 
  2666  0E34                     	;# 
  2667  0E35                     	;# 
  2668  0E36                     	;# 
  2669  0E37                     	;# 
  2670  0E8F                     	;# 
  2671  0E90                     	;# 
  2672  0E91                     	;# 
  2673  0E92                     	;# 
  2674  0E93                     	;# 
  2675  0E94                     	;# 
  2676  0E95                     	;# 
  2677  0E96                     	;# 
  2678  0E97                     	;# 
  2679  0E9C                     	;# 
  2680  0E9D                     	;# 
  2681  0E9E                     	;# 
  2682  0EA1                     	;# 
  2683  0EA2                     	;# 
  2684  0EA3                     	;# 
  2685  0EA4                     	;# 
  2686  0EA5                     	;# 
  2687  0EA9                     	;# 
  2688  0EAA                     	;# 
  2689  0EAB                     	;# 
  2690  0EAC                     	;# 
  2691  0EB1                     	;# 
  2692  0EB2                     	;# 
  2693  0EB3                     	;# 
  2694  0EB8                     	;# 
  2695  0EB9                     	;# 
  2696  0EBA                     	;# 
  2697  0EBB                     	;# 
  2698  0EBC                     	;# 
  2699  0EBD                     	;# 
  2700  0EBE                     	;# 
  2701  0EC3                     	;# 
  2702  0EC5                     	;# 
  2703  0EC6                     	;# 
  2704  0EC7                     	;# 
  2705  0EC8                     	;# 
  2706  0EC9                     	;# 
  2707  0ECA                     	;# 
  2708  0ECB                     	;# 
  2709  0ECC                     	;# 
  2710  0F10                     	;# 
  2711  0F11                     	;# 
  2712  0F12                     	;# 
  2713  0F13                     	;# 
  2714  0F14                     	;# 
  2715  0F15                     	;# 
  2716  0F16                     	;# 
  2717  0F17                     	;# 
  2718  0F18                     	;# 
  2719  0F19                     	;# 
  2720  0F1A                     	;# 
  2721  0F1B                     	;# 
  2722  0F1C                     	;# 
  2723  0F1D                     	;# 
  2724  0F1E                     	;# 
  2725  0F1F                     	;# 
  2726  0F20                     	;# 
  2727  0F21                     	;# 
  2728  0F22                     	;# 
  2729  0F23                     	;# 
  2730  0F24                     	;# 
  2731  0F25                     	;# 
  2732  0F26                     	;# 
  2733  0F27                     	;# 
  2734  0F28                     	;# 
  2735  0F29                     	;# 
  2736  0F2A                     	;# 
  2737  0F2B                     	;# 
  2738  0F2C                     	;# 
  2739  0F2D                     	;# 
  2740  0F2E                     	;# 
  2741  0F2F                     	;# 
  2742  0F30                     	;# 
  2743  0F31                     	;# 
  2744  0F32                     	;# 
  2745  0F38                     	;# 
  2746  0F39                     	;# 
  2747  0F3A                     	;# 
  2748  0F3B                     	;# 
  2749  0F3C                     	;# 
  2750  0F3D                     	;# 
  2751  0F3E                     	;# 
  2752  0F3F                     	;# 
  2753  0F40                     	;# 
  2754  0F41                     	;# 
  2755  0F43                     	;# 
  2756  0F44                     	;# 
  2757  0F45                     	;# 
  2758  0F46                     	;# 
  2759  0F47                     	;# 
  2760  0F48                     	;# 
  2761  0F49                     	;# 
  2762  0F4A                     	;# 
  2763  0F4B                     	;# 
  2764  0F4C                     	;# 
  2765  0F4E                     	;# 
  2766  0F4F                     	;# 
  2767  0F50                     	;# 
  2768  0F51                     	;# 
  2769  0F52                     	;# 
  2770  0F53                     	;# 
  2771  0F54                     	;# 
  2772  0F55                     	;# 
  2773  0F56                     	;# 
  2774  0F57                     	;# 
  2775  0F59                     	;# 
  2776  0F5A                     	;# 
  2777  0F5B                     	;# 
  2778  0F5C                     	;# 
  2779  0F5D                     	;# 
  2780  0F61                     	;# 
  2781  0F62                     	;# 
  2782  0F64                     	;# 
  2783  0F65                     	;# 
  2784  0F66                     	;# 
  2785  0F67                     	;# 
  2786  0F68                     	;# 
  2787  0F69                     	;# 
  2788  0F6A                     	;# 
  2789  0F6B                     	;# 
  2790  0F6C                     	;# 
  2791  0F6D                     	;# 
  2792  0FE4                     	;# 
  2793  0FE5                     	;# 
  2794  0FE6                     	;# 
  2795  0FE7                     	;# 
  2796  0FE8                     	;# 
  2797  0FE9                     	;# 
  2798  0FEA                     	;# 
  2799  0FEB                     	;# 
  2800  0FED                     	;# 
  2801  0FEE                     	;# 
  2802  0FEF                     	;# 
  2803  0000                     	;# 
  2804  0001                     	;# 
  2805  0002                     	;# 
  2806  0003                     	;# 
  2807  0004                     	;# 
  2808  0005                     	;# 
  2809  0006                     	;# 
  2810  0007                     	;# 
  2811  0008                     	;# 
  2812  0009                     	;# 
  2813  000A                     	;# 
  2814  000B                     	;# 
  2815  000C                     	;# 
  2816  000D                     	;# 
  2817  000E                     	;# 
  2818  000F                     	;# 
  2819  0010                     	;# 
  2820  0011                     	;# 
  2821  0012                     	;# 
  2822  0013                     	;# 
  2823  0014                     	;# 
  2824  0015                     	;# 
  2825  0016                     	;# 
  2826  0017                     	;# 
  2827  0018                     	;# 
  2828  0019                     	;# 
  2829  001A                     	;# 
  2830  001C                     	;# 
  2831  001C                     	;# 
  2832  001D                     	;# 
  2833  001D                     	;# 
  2834  001E                     	;# 
  2835  001F                     	;# 
  2836  008C                     	;# 
  2837  008C                     	;# 
  2838  008D                     	;# 
  2839  008E                     	;# 
  2840  008E                     	;# 
  2841  008F                     	;# 
  2842  0090                     	;# 
  2843  0090                     	;# 
  2844  0091                     	;# 
  2845  0093                     	;# 
  2846  0094                     	;# 
  2847  0095                     	;# 
  2848  0096                     	;# 
  2849  0097                     	;# 
  2850  0098                     	;# 
  2851  0099                     	;# 
  2852  009A                     	;# 
  2853  009B                     	;# 
  2854  009C                     	;# 
  2855  009D                     	;# 
  2856  009E                     	;# 
  2857  010C                     	;# 
  2858  010D                     	;# 
  2859  010E                     	;# 
  2860  010E                     	;# 
  2861  010F                     	;# 
  2862  0110                     	;# 
  2863  0110                     	;# 
  2864  0111                     	;# 
  2865  0112                     	;# 
  2866  0112                     	;# 
  2867  0113                     	;# 
  2868  0114                     	;# 
  2869  0114                     	;# 
  2870  0115                     	;# 
  2871  0116                     	;# 
  2872  0116                     	;# 
  2873  0117                     	;# 
  2874  0119                     	;# 
  2875  0119                     	;# 
  2876  0119                     	;# 
  2877  011A                     	;# 
  2878  011A                     	;# 
  2879  011A                     	;# 
  2880  011B                     	;# 
  2881  011B                     	;# 
  2882  011B                     	;# 
  2883  011B                     	;# 
  2884  011B                     	;# 
  2885  011C                     	;# 
  2886  011C                     	;# 
  2887  011C                     	;# 
  2888  011D                     	;# 
  2889  011D                     	;# 
  2890  011D                     	;# 
  2891  011E                     	;# 
  2892  011E                     	;# 
  2893  011E                     	;# 
  2894  011F                     	;# 
  2895  011F                     	;# 
  2896  011F                     	;# 
  2897  011F                     	;# 
  2898  011F                     	;# 
  2899  018C                     	;# 
  2900  018D                     	;# 
  2901  018E                     	;# 
  2902  018F                     	;# 
  2903  0190                     	;# 
  2904  0191                     	;# 
  2905  0192                     	;# 
  2906  0196                     	;# 
  2907  0197                     	;# 
  2908  0198                     	;# 
  2909  0199                     	;# 
  2910  019A                     	;# 
  2911  019B                     	;# 
  2912  019C                     	;# 
  2913  020C                     	;# 
  2914  020C                     	;# 
  2915  020D                     	;# 
  2916  020E                     	;# 
  2917  020F                     	;# 
  2918  020F                     	;# 
  2919  0210                     	;# 
  2920  0210                     	;# 
  2921  0211                     	;# 
  2922  0211                     	;# 
  2923  0212                     	;# 
  2924  0212                     	;# 
  2925  0213                     	;# 
  2926  0214                     	;# 
  2927  0215                     	;# 
  2928  0215                     	;# 
  2929  0216                     	;# 
  2930  0216                     	;# 
  2931  0217                     	;# 
  2932  0217                     	;# 
  2933  0218                     	;# 
  2934  0218                     	;# 
  2935  0219                     	;# 
  2936  021A                     	;# 
  2937  021B                     	;# 
  2938  021B                     	;# 
  2939  021C                     	;# 
  2940  021C                     	;# 
  2941  021D                     	;# 
  2942  021D                     	;# 
  2943  021E                     	;# 
  2944  021F                     	;# 
  2945  028C                     	;# 
  2946  028C                     	;# 
  2947  028D                     	;# 
  2948  028D                     	;# 
  2949  028E                     	;# 
  2950  028F                     	;# 
  2951  0290                     	;# 
  2952  0290                     	;# 
  2953  0291                     	;# 
  2954  0292                     	;# 
  2955  0292                     	;# 
  2956  0293                     	;# 
  2957  0293                     	;# 
  2958  0294                     	;# 
  2959  0295                     	;# 
  2960  0296                     	;# 
  2961  0296                     	;# 
  2962  0297                     	;# 
  2963  0298                     	;# 
  2964  0298                     	;# 
  2965  0299                     	;# 
  2966  0299                     	;# 
  2967  029A                     	;# 
  2968  029B                     	;# 
  2969  029C                     	;# 
  2970  029C                     	;# 
  2971  029D                     	;# 
  2972  030C                     	;# 
  2973  030C                     	;# 
  2974  030D                     	;# 
  2975  030E                     	;# 
  2976  030F                     	;# 
  2977  0310                     	;# 
  2978  0310                     	;# 
  2979  0311                     	;# 
  2980  0312                     	;# 
  2981  0313                     	;# 
  2982  0314                     	;# 
  2983  0314                     	;# 
  2984  0315                     	;# 
  2985  0316                     	;# 
  2986  0317                     	;# 
  2987  0318                     	;# 
  2988  0318                     	;# 
  2989  0319                     	;# 
  2990  031A                     	;# 
  2991  031B                     	;# 
  2992  031C                     	;# 
  2993  031C                     	;# 
  2994  031D                     	;# 
  2995  031E                     	;# 
  2996  031F                     	;# 
  2997  038C                     	;# 
  2998  038C                     	;# 
  2999  038D                     	;# 
  3000  038E                     	;# 
  3001  0390                     	;# 
  3002  0390                     	;# 
  3003  0391                     	;# 
  3004  0392                     	;# 
  3005  040C                     	;# 
  3006  040D                     	;# 
  3007  040E                     	;# 
  3008  040F                     	;# 
  3009  0410                     	;# 
  3010  0411                     	;# 
  3011  0416                     	;# 
  3012  0416                     	;# 
  3013  0417                     	;# 
  3014  0418                     	;# 
  3015  0418                     	;# 
  3016  0419                     	;# 
  3017  041A                     	;# 
  3018  041A                     	;# 
  3019  041B                     	;# 
  3020  041C                     	;# 
  3021  041C                     	;# 
  3022  041D                     	;# 
  3023  041E                     	;# 
  3024  041F                     	;# 
  3025  048C                     	;# 
  3026  048C                     	;# 
  3027  048D                     	;# 
  3028  048E                     	;# 
  3029  048F                     	;# 
  3030  048F                     	;# 
  3031  0490                     	;# 
  3032  0491                     	;# 
  3033  0492                     	;# 
  3034  0492                     	;# 
  3035  0493                     	;# 
  3036  0494                     	;# 
  3037  0495                     	;# 
  3038  0495                     	;# 
  3039  0496                     	;# 
  3040  0497                     	;# 
  3041  0498                     	;# 
  3042  0499                     	;# 
  3043  049A                     	;# 
  3044  049B                     	;# 
  3045  049C                     	;# 
  3046  049D                     	;# 
  3047  050C                     	;# 
  3048  050C                     	;# 
  3049  050D                     	;# 
  3050  050E                     	;# 
  3051  050F                     	;# 
  3052  050F                     	;# 
  3053  0510                     	;# 
  3054  0511                     	;# 
  3055  0512                     	;# 
  3056  0512                     	;# 
  3057  0513                     	;# 
  3058  0514                     	;# 
  3059  0515                     	;# 
  3060  0515                     	;# 
  3061  0516                     	;# 
  3062  0517                     	;# 
  3063  0518                     	;# 
  3064  0519                     	;# 
  3065  051A                     	;# 
  3066  051B                     	;# 
  3067  051C                     	;# 
  3068  051D                     	;# 
  3069  058C                     	;# 
  3070  058C                     	;# 
  3071  058D                     	;# 
  3072  058E                     	;# 
  3073  058F                     	;# 
  3074  058F                     	;# 
  3075  0590                     	;# 
  3076  0591                     	;# 
  3077  0592                     	;# 
  3078  0593                     	;# 
  3079  060C                     	;# 
  3080  060D                     	;# 
  3081  060E                     	;# 
  3082  060F                     	;# 
  3083  0610                     	;# 
  3084  0611                     	;# 
  3085  0612                     	;# 
  3086  0613                     	;# 
  3087  0614                     	;# 
  3088  0616                     	;# 
  3089  0617                     	;# 
  3090  0618                     	;# 
  3091  0619                     	;# 
  3092  061A                     	;# 
  3093  061B                     	;# 
  3094  061C                     	;# 
  3095  061D                     	;# 
  3096  061E                     	;# 
  3097  068C                     	;# 
  3098  068D                     	;# 
  3099  068E                     	;# 
  3100  068F                     	;# 
  3101  0690                     	;# 
  3102  0691                     	;# 
  3103  0692                     	;# 
  3104  0693                     	;# 
  3105  0694                     	;# 
  3106  070C                     	;# 
  3107  070D                     	;# 
  3108  070E                     	;# 
  3109  070F                     	;# 
  3110  0710                     	;# 
  3111  0711                     	;# 
  3112  0712                     	;# 
  3113  0713                     	;# 
  3114  0714                     	;# 
  3115  0716                     	;# 
  3116  0717                     	;# 
  3117  0718                     	;# 
  3118  0719                     	;# 
  3119  071A                     	;# 
  3120  071B                     	;# 
  3121  071C                     	;# 
  3122  071D                     	;# 
  3123  071E                     	;# 
  3124  0796                     	;# 
  3125  0797                     	;# 
  3126  0798                     	;# 
  3127  0799                     	;# 
  3128  079A                     	;# 
  3129  079B                     	;# 
  3130  080C                     	;# 
  3131  080D                     	;# 
  3132  080E                     	;# 
  3133  080F                     	;# 
  3134  0810                     	;# 
  3135  0811                     	;# 
  3136  0812                     	;# 
  3137  0813                     	;# 
  3138  0814                     	;# 
  3139  081A                     	;# 
  3140  081B                     	;# 
  3141  081C                     	;# 
  3142  081D                     	;# 
  3143  081E                     	;# 
  3144  081F                     	;# 
  3145  088C                     	;# 
  3146  088D                     	;# 
  3147  088E                     	;# 
  3148  088F                     	;# 
  3149  0890                     	;# 
  3150  0891                     	;# 
  3151  0892                     	;# 
  3152  0893                     	;# 
  3153  0895                     	;# 
  3154  0896                     	;# 
  3155  0897                     	;# 
  3156  0898                     	;# 
  3157  0899                     	;# 
  3158  089A                     	;# 
  3159  089B                     	;# 
  3160  090C                     	;# 
  3161  090E                     	;# 
  3162  090F                     	;# 
  3163  091F                     	;# 
  3164  091F                     	;# 
  3165  098F                     	;# 
  3166  098F                     	;# 
  3167  0990                     	;# 
  3168  0991                     	;# 
  3169  0992                     	;# 
  3170  0993                     	;# 
  3171  0994                     	;# 
  3172  0995                     	;# 
  3173  0996                     	;# 
  3174  0997                     	;# 
  3175  0E0F                     	;# 
  3176  0E10                     	;# 
  3177  0E11                     	;# 
  3178  0E12                     	;# 
  3179  0E13                     	;# 
  3180  0E14                     	;# 
  3181  0E15                     	;# 
  3182  0E16                     	;# 
  3183  0E17                     	;# 
  3184  0E18                     	;# 
  3185  0E19                     	;# 
  3186  0E1A                     	;# 
  3187  0E1B                     	;# 
  3188  0E1C                     	;# 
  3189  0E1D                     	;# 
  3190  0E1E                     	;# 
  3191  0E1F                     	;# 
  3192  0E20                     	;# 
  3193  0E21                     	;# 
  3194  0E22                     	;# 
  3195  0E23                     	;# 
  3196  0E24                     	;# 
  3197  0E25                     	;# 
  3198  0E26                     	;# 
  3199  0E27                     	;# 
  3200  0E28                     	;# 
  3201  0E29                     	;# 
  3202  0E2A                     	;# 
  3203  0E2B                     	;# 
  3204  0E2C                     	;# 
  3205  0E2D                     	;# 
  3206  0E2E                     	;# 
  3207  0E2F                     	;# 
  3208  0E30                     	;# 
  3209  0E31                     	;# 
  3210  0E32                     	;# 
  3211  0E33                     	;# 
  3212  0E34                     	;# 
  3213  0E35                     	;# 
  3214  0E36                     	;# 
  3215  0E37                     	;# 
  3216  0E8F                     	;# 
  3217  0E90                     	;# 
  3218  0E91                     	;# 
  3219  0E92                     	;# 
  3220  0E93                     	;# 
  3221  0E94                     	;# 
  3222  0E95                     	;# 
  3223  0E96                     	;# 
  3224  0E97                     	;# 
  3225  0E9C                     	;# 
  3226  0E9D                     	;# 
  3227  0E9E                     	;# 
  3228  0EA1                     	;# 
  3229  0EA2                     	;# 
  3230  0EA3                     	;# 
  3231  0EA4                     	;# 
  3232  0EA5                     	;# 
  3233  0EA9                     	;# 
  3234  0EAA                     	;# 
  3235  0EAB                     	;# 
  3236  0EAC                     	;# 
  3237  0EB1                     	;# 
  3238  0EB2                     	;# 
  3239  0EB3                     	;# 
  3240  0EB8                     	;# 
  3241  0EB9                     	;# 
  3242  0EBA                     	;# 
  3243  0EBB                     	;# 
  3244  0EBC                     	;# 
  3245  0EBD                     	;# 
  3246  0EBE                     	;# 
  3247  0EC3                     	;# 
  3248  0EC5                     	;# 
  3249  0EC6                     	;# 
  3250  0EC7                     	;# 
  3251  0EC8                     	;# 
  3252  0EC9                     	;# 
  3253  0ECA                     	;# 
  3254  0ECB                     	;# 
  3255  0ECC                     	;# 
  3256  0F10                     	;# 
  3257  0F11                     	;# 
  3258  0F12                     	;# 
  3259  0F13                     	;# 
  3260  0F14                     	;# 
  3261  0F15                     	;# 
  3262  0F16                     	;# 
  3263  0F17                     	;# 
  3264  0F18                     	;# 
  3265  0F19                     	;# 
  3266  0F1A                     	;# 
  3267  0F1B                     	;# 
  3268  0F1C                     	;# 
  3269  0F1D                     	;# 
  3270  0F1E                     	;# 
  3271  0F1F                     	;# 
  3272  0F20                     	;# 
  3273  0F21                     	;# 
  3274  0F22                     	;# 
  3275  0F23                     	;# 
  3276  0F24                     	;# 
  3277  0F25                     	;# 
  3278  0F26                     	;# 
  3279  0F27                     	;# 
  3280  0F28                     	;# 
  3281  0F29                     	;# 
  3282  0F2A                     	;# 
  3283  0F2B                     	;# 
  3284  0F2C                     	;# 
  3285  0F2D                     	;# 
  3286  0F2E                     	;# 
  3287  0F2F                     	;# 
  3288  0F30                     	;# 
  3289  0F31                     	;# 
  3290  0F32                     	;# 
  3291  0F38                     	;# 
  3292  0F39                     	;# 
  3293  0F3A                     	;# 
  3294  0F3B                     	;# 
  3295  0F3C                     	;# 
  3296  0F3D                     	;# 
  3297  0F3E                     	;# 
  3298  0F3F                     	;# 
  3299  0F40                     	;# 
  3300  0F41                     	;# 
  3301  0F43                     	;# 
  3302  0F44                     	;# 
  3303  0F45                     	;# 
  3304  0F46                     	;# 
  3305  0F47                     	;# 
  3306  0F48                     	;# 
  3307  0F49                     	;# 
  3308  0F4A                     	;# 
  3309  0F4B                     	;# 
  3310  0F4C                     	;# 
  3311  0F4E                     	;# 
  3312  0F4F                     	;# 
  3313  0F50                     	;# 
  3314  0F51                     	;# 
  3315  0F52                     	;# 
  3316  0F53                     	;# 
  3317  0F54                     	;# 
  3318  0F55                     	;# 
  3319  0F56                     	;# 
  3320  0F57                     	;# 
  3321  0F59                     	;# 
  3322  0F5A                     	;# 
  3323  0F5B                     	;# 
  3324  0F5C                     	;# 
  3325  0F5D                     	;# 
  3326  0F61                     	;# 
  3327  0F62                     	;# 
  3328  0F64                     	;# 
  3329  0F65                     	;# 
  3330  0F66                     	;# 
  3331  0F67                     	;# 
  3332  0F68                     	;# 
  3333  0F69                     	;# 
  3334  0F6A                     	;# 
  3335  0F6B                     	;# 
  3336  0F6C                     	;# 
  3337  0F6D                     	;# 
  3338  0FE4                     	;# 
  3339  0FE5                     	;# 
  3340  0FE6                     	;# 
  3341  0FE7                     	;# 
  3342  0FE8                     	;# 
  3343  0FE9                     	;# 
  3344  0FEA                     	;# 
  3345  0FEB                     	;# 
  3346  0FED                     	;# 
  3347  0FEE                     	;# 
  3348  0FEF                     	;# 
  3349  0000                     	;# 
  3350  0001                     	;# 
  3351  0002                     	;# 
  3352  0003                     	;# 
  3353  0004                     	;# 
  3354  0005                     	;# 
  3355  0006                     	;# 
  3356  0007                     	;# 
  3357  0008                     	;# 
  3358  0009                     	;# 
  3359  000A                     	;# 
  3360  000B                     	;# 
  3361  000C                     	;# 
  3362  000D                     	;# 
  3363  000E                     	;# 
  3364  000F                     	;# 
  3365  0010                     	;# 
  3366  0011                     	;# 
  3367  0012                     	;# 
  3368  0013                     	;# 
  3369  0014                     	;# 
  3370  0015                     	;# 
  3371  0016                     	;# 
  3372  0017                     	;# 
  3373  0018                     	;# 
  3374  0019                     	;# 
  3375  001A                     	;# 
  3376  001C                     	;# 
  3377  001C                     	;# 
  3378  001D                     	;# 
  3379  001D                     	;# 
  3380  001E                     	;# 
  3381  001F                     	;# 
  3382  008C                     	;# 
  3383  008C                     	;# 
  3384  008D                     	;# 
  3385  008E                     	;# 
  3386  008E                     	;# 
  3387  008F                     	;# 
  3388  0090                     	;# 
  3389  0090                     	;# 
  3390  0091                     	;# 
  3391  0093                     	;# 
  3392  0094                     	;# 
  3393  0095                     	;# 
  3394  0096                     	;# 
  3395  0097                     	;# 
  3396  0098                     	;# 
  3397  0099                     	;# 
  3398  009A                     	;# 
  3399  009B                     	;# 
  3400  009C                     	;# 
  3401  009D                     	;# 
  3402  009E                     	;# 
  3403  010C                     	;# 
  3404  010D                     	;# 
  3405  010E                     	;# 
  3406  010E                     	;# 
  3407  010F                     	;# 
  3408  0110                     	;# 
  3409  0110                     	;# 
  3410  0111                     	;# 
  3411  0112                     	;# 
  3412  0112                     	;# 
  3413  0113                     	;# 
  3414  0114                     	;# 
  3415  0114                     	;# 
  3416  0115                     	;# 
  3417  0116                     	;# 
  3418  0116                     	;# 
  3419  0117                     	;# 
  3420  0119                     	;# 
  3421  0119                     	;# 
  3422  0119                     	;# 
  3423  011A                     	;# 
  3424  011A                     	;# 
  3425  011A                     	;# 
  3426  011B                     	;# 
  3427  011B                     	;# 
  3428  011B                     	;# 
  3429  011B                     	;# 
  3430  011B                     	;# 
  3431  011C                     	;# 
  3432  011C                     	;# 
  3433  011C                     	;# 
  3434  011D                     	;# 
  3435  011D                     	;# 
  3436  011D                     	;# 
  3437  011E                     	;# 
  3438  011E                     	;# 
  3439  011E                     	;# 
  3440  011F                     	;# 
  3441  011F                     	;# 
  3442  011F                     	;# 
  3443  011F                     	;# 
  3444  011F                     	;# 
  3445  018C                     	;# 
  3446  018D                     	;# 
  3447  018E                     	;# 
  3448  018F                     	;# 
  3449  0190                     	;# 
  3450  0191                     	;# 
  3451  0192                     	;# 
  3452  0196                     	;# 
  3453  0197                     	;# 
  3454  0198                     	;# 
  3455  0199                     	;# 
  3456  019A                     	;# 
  3457  019B                     	;# 
  3458  019C                     	;# 
  3459  020C                     	;# 
  3460  020C                     	;# 
  3461  020D                     	;# 
  3462  020E                     	;# 
  3463  020F                     	;# 
  3464  020F                     	;# 
  3465  0210                     	;# 
  3466  0210                     	;# 
  3467  0211                     	;# 
  3468  0211                     	;# 
  3469  0212                     	;# 
  3470  0212                     	;# 
  3471  0213                     	;# 
  3472  0214                     	;# 
  3473  0215                     	;# 
  3474  0215                     	;# 
  3475  0216                     	;# 
  3476  0216                     	;# 
  3477  0217                     	;# 
  3478  0217                     	;# 
  3479  0218                     	;# 
  3480  0218                     	;# 
  3481  0219                     	;# 
  3482  021A                     	;# 
  3483  021B                     	;# 
  3484  021B                     	;# 
  3485  021C                     	;# 
  3486  021C                     	;# 
  3487  021D                     	;# 
  3488  021D                     	;# 
  3489  021E                     	;# 
  3490  021F                     	;# 
  3491  028C                     	;# 
  3492  028C                     	;# 
  3493  028D                     	;# 
  3494  028D                     	;# 
  3495  028E                     	;# 
  3496  028F                     	;# 
  3497  0290                     	;# 
  3498  0290                     	;# 
  3499  0291                     	;# 
  3500  0292                     	;# 
  3501  0292                     	;# 
  3502  0293                     	;# 
  3503  0293                     	;# 
  3504  0294                     	;# 
  3505  0295                     	;# 
  3506  0296                     	;# 
  3507  0296                     	;# 
  3508  0297                     	;# 
  3509  0298                     	;# 
  3510  0298                     	;# 
  3511  0299                     	;# 
  3512  0299                     	;# 
  3513  029A                     	;# 
  3514  029B                     	;# 
  3515  029C                     	;# 
  3516  029C                     	;# 
  3517  029D                     	;# 
  3518  030C                     	;# 
  3519  030C                     	;# 
  3520  030D                     	;# 
  3521  030E                     	;# 
  3522  030F                     	;# 
  3523  0310                     	;# 
  3524  0310                     	;# 
  3525  0311                     	;# 
  3526  0312                     	;# 
  3527  0313                     	;# 
  3528  0314                     	;# 
  3529  0314                     	;# 
  3530  0315                     	;# 
  3531  0316                     	;# 
  3532  0317                     	;# 
  3533  0318                     	;# 
  3534  0318                     	;# 
  3535  0319                     	;# 
  3536  031A                     	;# 
  3537  031B                     	;# 
  3538  031C                     	;# 
  3539  031C                     	;# 
  3540  031D                     	;# 
  3541  031E                     	;# 
  3542  031F                     	;# 
  3543  038C                     	;# 
  3544  038C                     	;# 
  3545  038D                     	;# 
  3546  038E                     	;# 
  3547  0390                     	;# 
  3548  0390                     	;# 
  3549  0391                     	;# 
  3550  0392                     	;# 
  3551  040C                     	;# 
  3552  040D                     	;# 
  3553  040E                     	;# 
  3554  040F                     	;# 
  3555  0410                     	;# 
  3556  0411                     	;# 
  3557  0416                     	;# 
  3558  0416                     	;# 
  3559  0417                     	;# 
  3560  0418                     	;# 
  3561  0418                     	;# 
  3562  0419                     	;# 
  3563  041A                     	;# 
  3564  041A                     	;# 
  3565  041B                     	;# 
  3566  041C                     	;# 
  3567  041C                     	;# 
  3568  041D                     	;# 
  3569  041E                     	;# 
  3570  041F                     	;# 
  3571  048C                     	;# 
  3572  048C                     	;# 
  3573  048D                     	;# 
  3574  048E                     	;# 
  3575  048F                     	;# 
  3576  048F                     	;# 
  3577  0490                     	;# 
  3578  0491                     	;# 
  3579  0492                     	;# 
  3580  0492                     	;# 
  3581  0493                     	;# 
  3582  0494                     	;# 
  3583  0495                     	;# 
  3584  0495                     	;# 
  3585  0496                     	;# 
  3586  0497                     	;# 
  3587  0498                     	;# 
  3588  0499                     	;# 
  3589  049A                     	;# 
  3590  049B                     	;# 
  3591  049C                     	;# 
  3592  049D                     	;# 
  3593  050C                     	;# 
  3594  050C                     	;# 
  3595  050D                     	;# 
  3596  050E                     	;# 
  3597  050F                     	;# 
  3598  050F                     	;# 
  3599  0510                     	;# 
  3600  0511                     	;# 
  3601  0512                     	;# 
  3602  0512                     	;# 
  3603  0513                     	;# 
  3604  0514                     	;# 
  3605  0515                     	;# 
  3606  0515                     	;# 
  3607  0516                     	;# 
  3608  0517                     	;# 
  3609  0518                     	;# 
  3610  0519                     	;# 
  3611  051A                     	;# 
  3612  051B                     	;# 
  3613  051C                     	;# 
  3614  051D                     	;# 
  3615  058C                     	;# 
  3616  058C                     	;# 
  3617  058D                     	;# 
  3618  058E                     	;# 
  3619  058F                     	;# 
  3620  058F                     	;# 
  3621  0590                     	;# 
  3622  0591                     	;# 
  3623  0592                     	;# 
  3624  0593                     	;# 
  3625  060C                     	;# 
  3626  060D                     	;# 
  3627  060E                     	;# 
  3628  060F                     	;# 
  3629  0610                     	;# 
  3630  0611                     	;# 
  3631  0612                     	;# 
  3632  0613                     	;# 
  3633  0614                     	;# 
  3634  0616                     	;# 
  3635  0617                     	;# 
  3636  0618                     	;# 
  3637  0619                     	;# 
  3638  061A                     	;# 
  3639  061B                     	;# 
  3640  061C                     	;# 
  3641  061D                     	;# 
  3642  061E                     	;# 
  3643  068C                     	;# 
  3644  068D                     	;# 
  3645  068E                     	;# 
  3646  068F                     	;# 
  3647  0690                     	;# 
  3648  0691                     	;# 
  3649  0692                     	;# 
  3650  0693                     	;# 
  3651  0694                     	;# 
  3652  070C                     	;# 
  3653  070D                     	;# 
  3654  070E                     	;# 
  3655  070F                     	;# 
  3656  0710                     	;# 
  3657  0711                     	;# 
  3658  0712                     	;# 
  3659  0713                     	;# 
  3660  0714                     	;# 
  3661  0716                     	;# 
  3662  0717                     	;# 
  3663  0718                     	;# 
  3664  0719                     	;# 
  3665  071A                     	;# 
  3666  071B                     	;# 
  3667  071C                     	;# 
  3668  071D                     	;# 
  3669  071E                     	;# 
  3670  0796                     	;# 
  3671  0797                     	;# 
  3672  0798                     	;# 
  3673  0799                     	;# 
  3674  079A                     	;# 
  3675  079B                     	;# 
  3676  080C                     	;# 
  3677  080D                     	;# 
  3678  080E                     	;# 
  3679  080F                     	;# 
  3680  0810                     	;# 
  3681  0811                     	;# 
  3682  0812                     	;# 
  3683  0813                     	;# 
  3684  0814                     	;# 
  3685  081A                     	;# 
  3686  081B                     	;# 
  3687  081C                     	;# 
  3688  081D                     	;# 
  3689  081E                     	;# 
  3690  081F                     	;# 
  3691  088C                     	;# 
  3692  088D                     	;# 
  3693  088E                     	;# 
  3694  088F                     	;# 
  3695  0890                     	;# 
  3696  0891                     	;# 
  3697  0892                     	;# 
  3698  0893                     	;# 
  3699  0895                     	;# 
  3700  0896                     	;# 
  3701  0897                     	;# 
  3702  0898                     	;# 
  3703  0899                     	;# 
  3704  089A                     	;# 
  3705  089B                     	;# 
  3706  090C                     	;# 
  3707  090E                     	;# 
  3708  090F                     	;# 
  3709  091F                     	;# 
  3710  091F                     	;# 
  3711  098F                     	;# 
  3712  098F                     	;# 
  3713  0990                     	;# 
  3714  0991                     	;# 
  3715  0992                     	;# 
  3716  0993                     	;# 
  3717  0994                     	;# 
  3718  0995                     	;# 
  3719  0996                     	;# 
  3720  0997                     	;# 
  3721  0E0F                     	;# 
  3722  0E10                     	;# 
  3723  0E11                     	;# 
  3724  0E12                     	;# 
  3725  0E13                     	;# 
  3726  0E14                     	;# 
  3727  0E15                     	;# 
  3728  0E16                     	;# 
  3729  0E17                     	;# 
  3730  0E18                     	;# 
  3731  0E19                     	;# 
  3732  0E1A                     	;# 
  3733  0E1B                     	;# 
  3734  0E1C                     	;# 
  3735  0E1D                     	;# 
  3736  0E1E                     	;# 
  3737  0E1F                     	;# 
  3738  0E20                     	;# 
  3739  0E21                     	;# 
  3740  0E22                     	;# 
  3741  0E23                     	;# 
  3742  0E24                     	;# 
  3743  0E25                     	;# 
  3744  0E26                     	;# 
  3745  0E27                     	;# 
  3746  0E28                     	;# 
  3747  0E29                     	;# 
  3748  0E2A                     	;# 
  3749  0E2B                     	;# 
  3750  0E2C                     	;# 
  3751  0E2D                     	;# 
  3752  0E2E                     	;# 
  3753  0E2F                     	;# 
  3754  0E30                     	;# 
  3755  0E31                     	;# 
  3756  0E32                     	;# 
  3757  0E33                     	;# 
  3758  0E34                     	;# 
  3759  0E35                     	;# 
  3760  0E36                     	;# 
  3761  0E37                     	;# 
  3762  0E8F                     	;# 
  3763  0E90                     	;# 
  3764  0E91                     	;# 
  3765  0E92                     	;# 
  3766  0E93                     	;# 
  3767  0E94                     	;# 
  3768  0E95                     	;# 
  3769  0E96                     	;# 
  3770  0E97                     	;# 
  3771  0E9C                     	;# 
  3772  0E9D                     	;# 
  3773  0E9E                     	;# 
  3774  0EA1                     	;# 
  3775  0EA2                     	;# 
  3776  0EA3                     	;# 
  3777  0EA4                     	;# 
  3778  0EA5                     	;# 
  3779  0EA9                     	;# 
  3780  0EAA                     	;# 
  3781  0EAB                     	;# 
  3782  0EAC                     	;# 
  3783  0EB1                     	;# 
  3784  0EB2                     	;# 
  3785  0EB3                     	;# 
  3786  0EB8                     	;# 
  3787  0EB9                     	;# 
  3788  0EBA                     	;# 
  3789  0EBB                     	;# 
  3790  0EBC                     	;# 
  3791  0EBD                     	;# 
  3792  0EBE                     	;# 
  3793  0EC3                     	;# 
  3794  0EC5                     	;# 
  3795  0EC6                     	;# 
  3796  0EC7                     	;# 
  3797  0EC8                     	;# 
  3798  0EC9                     	;# 
  3799  0ECA                     	;# 
  3800  0ECB                     	;# 
  3801  0ECC                     	;# 
  3802  0F10                     	;# 
  3803  0F11                     	;# 
  3804  0F12                     	;# 
  3805  0F13                     	;# 
  3806  0F14                     	;# 
  3807  0F15                     	;# 
  3808  0F16                     	;# 
  3809  0F17                     	;# 
  3810  0F18                     	;# 
  3811  0F19                     	;# 
  3812  0F1A                     	;# 
  3813  0F1B                     	;# 
  3814  0F1C                     	;# 
  3815  0F1D                     	;# 
  3816  0F1E                     	;# 
  3817  0F1F                     	;# 
  3818  0F20                     	;# 
  3819  0F21                     	;# 
  3820  0F22                     	;# 
  3821  0F23                     	;# 
  3822  0F24                     	;# 
  3823  0F25                     	;# 
  3824  0F26                     	;# 
  3825  0F27                     	;# 
  3826  0F28                     	;# 
  3827  0F29                     	;# 
  3828  0F2A                     	;# 
  3829  0F2B                     	;# 
  3830  0F2C                     	;# 
  3831  0F2D                     	;# 
  3832  0F2E                     	;# 
  3833  0F2F                     	;# 
  3834  0F30                     	;# 
  3835  0F31                     	;# 
  3836  0F32                     	;# 
  3837  0F38                     	;# 
  3838  0F39                     	;# 
  3839  0F3A                     	;# 
  3840  0F3B                     	;# 
  3841  0F3C                     	;# 
  3842  0F3D                     	;# 
  3843  0F3E                     	;# 
  3844  0F3F                     	;# 
  3845  0F40                     	;# 
  3846  0F41                     	;# 
  3847  0F43                     	;# 
  3848  0F44                     	;# 
  3849  0F45                     	;# 
  3850  0F46                     	;# 
  3851  0F47                     	;# 
  3852  0F48                     	;# 
  3853  0F49                     	;# 
  3854  0F4A                     	;# 
  3855  0F4B                     	;# 
  3856  0F4C                     	;# 
  3857  0F4E                     	;# 
  3858  0F4F                     	;# 
  3859  0F50                     	;# 
  3860  0F51                     	;# 
  3861  0F52                     	;# 
  3862  0F53                     	;# 
  3863  0F54                     	;# 
  3864  0F55                     	;# 
  3865  0F56                     	;# 
  3866  0F57                     	;# 
  3867  0F59                     	;# 
  3868  0F5A                     	;# 
  3869  0F5B                     	;# 
  3870  0F5C                     	;# 
  3871  0F5D                     	;# 
  3872  0F61                     	;# 
  3873  0F62                     	;# 
  3874  0F64                     	;# 
  3875  0F65                     	;# 
  3876  0F66                     	;# 
  3877  0F67                     	;# 
  3878  0F68                     	;# 
  3879  0F69                     	;# 
  3880  0F6A                     	;# 
  3881  0F6B                     	;# 
  3882  0F6C                     	;# 
  3883  0F6D                     	;# 
  3884  0FE4                     	;# 
  3885  0FE5                     	;# 
  3886  0FE6                     	;# 
  3887  0FE7                     	;# 
  3888  0FE8                     	;# 
  3889  0FE9                     	;# 
  3890  0FEA                     	;# 
  3891  0FEB                     	;# 
  3892  0FED                     	;# 
  3893  0FEE                     	;# 
  3894  0FEF                     	;# 
  3895  0010                     _PORTEbits	set	16
  3896  000C                     _PORTAbits	set	12
  3897  000D                     _PORTBbits	set	13
  3898  0019                     _LATDbits	set	25
  3899  0018                     _LATCbits	set	24
  3900  001C                     _TMR0L	set	28
  3901  001D                     _TMR0H	set	29
  3902  001A                     _LATEbits	set	26
  3903  001F                     _T0CON1	set	31
  3904  001E                     _T0CON0	set	30
  3905  0015                     _TRISE	set	21
  3906  0014                     _TRISD	set	20
  3907  0013                     _TRISC	set	19
  3908  0012                     _TRISB	set	18
  3909  0011                     _TRISA	set	17
  3910  001A                     _LATE	set	26
  3911  0019                     _LATD	set	25
  3912  0018                     _LATC	set	24
  3913  0017                     _LATB	set	23
  3914  0016                     _LATA	set	22
  3915  000B                     _INTCON	set	11
  3916  009D                     _ADACQ	set	157
  3917  009C                     _ADPRE	set	156
  3918  009E                     _ADPCH	set	158
  3919  009A                     _ADREF	set	154
  3920  0098                     _ADCLK	set	152
  3921  0096                     _ADCON3	set	150
  3922  0095                     _ADCON2	set	149
  3923  0094                     _ADCON1	set	148
  3924  0093                     _ADCON0	set	147
  3925  010C                     _ADCNT	set	268
  3926  0190                     _SSP1CON1bits	set	400
  3927  0191                     _SSP1CON2bits	set	401
  3928  018F                     _SSP1STATbits	set	399
  3929  0192                     _SSP1CON3bits	set	402
  3930  018C                     _SSP1BUF	set	396
  3931  018D                     _SSP1ADD	set	397
  3932  0192                     _SSP1CON3	set	402
  3933  0191                     _SSP1CON2	set	401
  3934  0190                     _SSP1CON1	set	400
  3935  018F                     _SSP1STAT	set	399
  3936  0217                     _T3CLK	set	535
  3937  0215                     _T3GCON	set	533
  3938  0214                     _T3CON	set	532
  3939  028E                     _T2CONbits	set	654
  3940  028D                     _PR2	set	653
  3941  028E                     _T2CON	set	654
  3942  0290                     _T2CLKCON	set	656
  3943  031D                     _CCPR5H	set	797
  3944  0319                     _CCPR4H	set	793
  3945  0315                     _CCPR3H	set	789
  3946  0311                     _CCPR2H	set	785
  3947  030D                     _CCPR1H	set	781
  3948  031C                     _CCPR5L	set	796
  3949  0318                     _CCPR4L	set	792
  3950  0314                     _CCPR3L	set	788
  3951  0310                     _CCPR2L	set	784
  3952  030C                     _CCPR1L	set	780
  3953  031E                     _CCP5CON	set	798
  3954  031A                     _CCP4CON	set	794
  3955  0316                     _CCP3CON	set	790
  3956  0312                     _CCP2CON	set	786
  3957  030E                     _CCP1CON	set	782
  3958  0392                     _PWM7CONbits	set	914
  3959  038E                     _PWM6CONbits	set	910
  3960  0391                     _PWM7DCH	set	913
  3961  038D                     _PWM6DCH	set	909
  3962  0390                     _PWM7DCL	set	912
  3963  038C                     _PWM6DCL	set	908
  3964  0392                     _PWM7CON	set	914
  3965  038E                     _PWM6CON	set	910
  3966  0610                     _CWG1CON0bits	set	1552
  3967  060D                     _CWG1ISM	set	1549
  3968  060C                     _CWG1CLKCON	set	1548
  3969  060F                     _CWG1DBF	set	1551
  3970  060E                     _CWG1DBR	set	1550
  3971  0611                     _CWG1CON1	set	1553
  3972  0610                     _CWG1CON0	set	1552
  3973  0690                     _CWG3CON0bits	set	1680
  3974  068D                     _CWG3ISM	set	1677
  3975  068C                     _CWG3CLKCON	set	1676
  3976  068F                     _CWG3DBF	set	1679
  3977  068E                     _CWG3DBR	set	1678
  3978  0691                     _CWG3CON1	set	1681
  3979  0690                     _CWG3CON0	set	1680
  3980  070F                     _PIR3bits	set	1807
  3981  0710                     _PIR4bits	set	1808
  3982  0719                     _PIE3bits	set	1817
  3983  3878                     _SSP1IF	set	14456
  3984  0893                     _OSCFRQ	set	2195
  3985  088D                     _OSCCON1	set	2189
  3986  090C                     _FVRCON	set	2316
  3987  0E1A                     _CLC2CONbits	set	3610
  3988  0E23                     _CLC2GLS3	set	3619
  3989  0E22                     _CLC2GLS2	set	3618
  3990  0E21                     _CLC2GLS1	set	3617
  3991  0E20                     _CLC2GLS0	set	3616
  3992  0E1B                     _CLC2POL	set	3611
  3993  0E1D                     _CLC2SEL1	set	3613
  3994  0E1C                     _CLC2SEL0	set	3612
  3995  0E1A                     _CLC2CON	set	3610
  3996  0E10                     _CLC1CONbits	set	3600
  3997  0E19                     _CLC1GLS3	set	3609
  3998  0E18                     _CLC1GLS2	set	3608
  3999  0E17                     _CLC1GLS1	set	3607
  4000  0E16                     _CLC1GLS0	set	3606
  4001  0E11                     _CLC1POL	set	3601
  4002  0E13                     _CLC1SEL1	set	3603
  4003  0E12                     _CLC1SEL0	set	3602
  4004  0E10                     _CLC1CON	set	3600
  4005  0EC6                     _SSP1DATPPS	set	3782
  4006  0EC5                     _SSP1CLKPPS	set	3781
  4007  0F15                     _RA5PPS	set	3861
  4008  0F14                     _RA4PPS	set	3860
  4009  0F13                     _RA3PPS	set	3859
  4010  0F12                     _RA2PPS	set	3858
  4011  0F11                     _RA1PPS	set	3857
  4012  0F10                     _RA0PPS	set	3856
  4013  0F2B                     _RD3PPS	set	3883
  4014  0F2F                     _RD7PPS	set	3887
  4015  0F29                     _RD1PPS	set	3881
  4016  0F2D                     _RD5PPS	set	3885
  4017  0F2A                     _RD2PPS	set	3882
  4018  0F2E                     _RD6PPS	set	3886
  4019  0F28                     _RD0PPS	set	3880
  4020  0F2C                     _RD4PPS	set	3884
  4021  0F21                     _RC1PPS	set	3873
  4022  0F25                     _RC5PPS	set	3877
  4023  0F23                     _RC3PPS	set	3875
  4024  0F27                     _RC7PPS	set	3879
  4025  0F20                     _RC0PPS	set	3872
  4026  0F24                     _RC4PPS	set	3876
  4027  0F22                     _RC2PPS	set	3874
  4028  0F26                     _RC6PPS	set	3878
  4029  0F1F                     _RB7PPS	set	3871
  4030  0F1E                     _RB6PPS	set	3870
  4031  0F64                     _ANSELE	set	3940
  4032  0F59                     _ANSELD	set	3929
  4033  0F4E                     _ANSELC	set	3918
  4034  0F43                     _ANSELB	set	3907
  4035  0F38                     _ANSELA	set	3896
  4036  0F65                     _WPUE	set	3941
  4037  0F5A                     _WPUD	set	3930
  4038  0F4F                     _WPUC	set	3919
  4039  0F44                     _WPUB	set	3908
  4040  0F39                     _WPUA	set	3897
  4041  0F68                     _INLVLE	set	3944
  4042  0F47                     _INLVLB	set	3911
  4043  0F3C                     _INLVLA	set	3900
  4044                           
  4045                           ; #config settings
  4046  0000                     
  4047                           	psect	cinit
  4048  0012                     start_initialization:	
  4049  0012                     __initialization:	
  4050                           
  4051                           ; Clear objects allocated to BANK0
  4052  0012  304B               	movlw	low __pbssBANK0
  4053  0013  0084               	movwf	4
  4054  0014  3000               	movlw	high __pbssBANK0
  4055  0015  0085               	movwf	5
  4056  0016  301F               	movlw	31
  4057  0017  3189  21EB  3180   	fcall	clear_ram0
  4058  001A                     end_of_initialization:	
  4059                           ;End of C runtime variable initialization code
  4060                           
  4061  001A                     __end_of__initialization:	
  4062  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4063  001B  0020               	movlb	0
  4064  001C  318A  2A6C         	ljmp	_main	;jump to C main() function
  4065                           
  4066                           	psect	bssBANK0
  4067  004B                     __pbssBANK0:	
  4068  004B                     _motorPWMArr:	
  4069  004B                     	ds	4
  4070  004F                     _motorDirArr:	
  4071  004F                     	ds	4
  4072  0053                     _drivePWM2:	
  4073  0053                     	ds	1
  4074  0054                     _drivePWM1:	
  4075  0054                     	ds	1
  4076  0055                     _driveDir:	
  4077  0055                     	ds	1
  4078  0056                     _i2c_val:	
  4079  0056                     	ds	1
  4080  0057                     _i2c_settings:	
  4081  0057                     	ds	1
  4082  0058                     _i2c_status:	
  4083  0058                     	ds	1
  4084  0059                     _props:	
  4085  0059                     	ds	17
  4086                           
  4087                           	psect	clrtext
  4088  09EB                     clear_ram0:	
  4089                           ;	Called with FSR0 containing the base address, and
  4090                           ;	WREG with the size to clear
  4091                           
  4092  09EB  0064               	clrwdt	;clear the watchdog before getting into this loop
  4093  09EC                     clrloop0:	
  4094  09EC  0180               	clrf	0	;clear RAM location pointed to by FSR
  4095  09ED  3101               	addfsr 0,1
  4096  09EE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4097  09EF  29EC               	goto	clrloop0	;have we reached the end yet?
  4098  09F0  3400               	retlw	0	;all done for this memory range, return
  4099                           
  4100                           	psect	cstackBANK1
  4101  00A0                     __pcstackBANK1:	
  4102  00A0                     ??_updateMovement:	
  4103                           
  4104                           ; 1 bytes @ 0x0
  4105  00A0                     	ds	8
  4106  00A8                     updateSys@p:	
  4107                           
  4108                           ; 1 bytes @ 0x8
  4109  00A8                     	ds	1
  4110                           
  4111                           	psect	cstackCOMMON
  4112  0070                     __pcstackCOMMON:	
  4113  0070                     ?_handleWrite:	
  4114  0070                     ?_handleRead:	
  4115                           ; 1 bytes @ 0x0
  4116                           
  4117  0070                     ??_handleRead:	
  4118                           ; 1 bytes @ 0x0
  4119                           
  4120  0070                     ?_setRoutine:	
  4121                           ; 1 bytes @ 0x0
  4122                           
  4123  0070                     ?_revRoutine:	
  4124                           ; 1 bytes @ 0x0
  4125                           
  4126  0070                     ?_configureCPU:	
  4127                           ; 1 bytes @ 0x0
  4128                           
  4129  0070                     ?_configureIOs:	
  4130                           ; 1 bytes @ 0x0
  4131                           
  4132  0070                     ?_configureTimers:	
  4133                           ; 1 bytes @ 0x0
  4134                           
  4135  0070                     ?_configureI2C:	
  4136                           ; 1 bytes @ 0x0
  4137                           
  4138  0070                     ?_configurePWM:	
  4139                           ; 1 bytes @ 0x0
  4140                           
  4141  0070                     ?_i2cISR:	
  4142                           ; 1 bytes @ 0x0
  4143                           
  4144  0070                     ?_ISR:	
  4145                           ; 1 bytes @ 0x0
  4146                           
  4147  0070                     ?_main:	
  4148                           ; 1 bytes @ 0x0
  4149                           
  4150  0070                     ?i1_setPWM:	
  4151                           ; 1 bytes @ 0x0
  4152                           
  4153  0070                     ?i1___bmul:	
  4154                           ; 1 bytes @ 0x0
  4155                           
  4156  0070                     i1setPWM@pwm:	
  4157                           ; 1 bytes @ 0x0
  4158                           
  4159  0070                     i1___bmul@multiplicand:	
  4160                           ; 1 bytes @ 0x0
  4161                           
  4162                           
  4163                           ; 1 bytes @ 0x0
  4164  0070                     	ds	1
  4165  0071                     ??i1_setPWM:	
  4166  0071                     ??i1___bmul:	
  4167                           ; 1 bytes @ 0x1
  4168                           
  4169                           
  4170                           ; 1 bytes @ 0x1
  4171  0071                     	ds	1
  4172  0072                     i1___bmul@product:	
  4173                           
  4174                           ; 1 bytes @ 0x2
  4175  0072                     	ds	1
  4176  0073                     i1setPWM@module:	
  4177  0073                     i1___bmul@multiplier:	
  4178                           ; 1 bytes @ 0x3
  4179                           
  4180                           
  4181                           ; 1 bytes @ 0x3
  4182  0073                     	ds	1
  4183  0074                     i1_setPWM$1154:	
  4184                           
  4185                           ; 2 bytes @ 0x4
  4186  0074                     	ds	2
  4187  0076                     ?_setDrive2:	
  4188  0076                     ?_setDrive:	
  4189                           ; 1 bytes @ 0x6
  4190                           
  4191  0076                     ?i1_setMotors:	
  4192                           ; 1 bytes @ 0x6
  4193                           
  4194  0076                     setDrive@v:	
  4195                           ; 1 bytes @ 0x6
  4196                           
  4197  0076                     setDrive2@v:	
  4198                           ; 1 bytes @ 0x6
  4199                           
  4200  0076                     i1setMotors@dir:	
  4201                           ; 1 bytes @ 0x6
  4202                           
  4203                           
  4204                           ; 1 bytes @ 0x6
  4205  0076                     	ds	1
  4206  0077                     ??_setDrive:	
  4207  0077                     setDrive2@v2:	
  4208                           ; 1 bytes @ 0x7
  4209                           
  4210  0077                     i1setMotors@v:	
  4211                           ; 1 bytes @ 0x7
  4212                           
  4213                           
  4214                           ; 1 bytes @ 0x7
  4215  0077                     	ds	1
  4216  0078                     ??_setDrive2:	
  4217  0078                     ??i1_setMotors:	
  4218                           ; 1 bytes @ 0x8
  4219                           
  4220                           
  4221                           ; 1 bytes @ 0x8
  4222  0078                     	ds	1
  4223  0079                     setDrive@dir:	
  4224                           
  4225                           ; 1 bytes @ 0x9
  4226  0079                     	ds	1
  4227  007A                     setDrive2@dir:	
  4228  007A                     i1setMotors@motor:	
  4229                           ; 1 bytes @ 0xA
  4230                           
  4231                           
  4232                           ; 1 bytes @ 0xA
  4233  007A                     	ds	1
  4234  007B                     ??_setRoutine:	
  4235  007B                     ??_revRoutine:	
  4236                           ; 1 bytes @ 0xB
  4237                           
  4238                           
  4239                           ; 1 bytes @ 0xB
  4240  007B                     	ds	3
  4241  007E                     ??_ISR:	
  4242                           
  4243                           	psect	cstackBANK0
  4244  0020                     __pcstackBANK0:	
  4245                           ; 1 bytes @ 0xE
  4246                           
  4247  0020                     setRoutine@s:	
  4248  0020                     revRoutine@s:	
  4249                           ; 1 bytes @ 0x0
  4250                           
  4251                           
  4252                           ; 1 bytes @ 0x0
  4253  0020                     	ds	1
  4254  0021                     setRoutine@i:	
  4255                           
  4256                           ; 1 bytes @ 0x1
  4257  0021                     	ds	1
  4258  0022                     ?_setStatus:	
  4259  0022                     setStatus@v:	
  4260                           ; 1 bytes @ 0x2
  4261                           
  4262                           
  4263                           ; 1 bytes @ 0x2
  4264  0022                     	ds	1
  4265  0023                     setStatus@v2:	
  4266                           
  4267                           ; 2 bytes @ 0x3
  4268  0023                     	ds	2
  4269  0025                     ??_setStatus:	
  4270                           
  4271                           ; 1 bytes @ 0x5
  4272  0025                     	ds	2
  4273  0027                     setStatus@dir:	
  4274                           
  4275                           ; 1 bytes @ 0x7
  4276  0027                     	ds	1
  4277  0028                     setStatus@motor:	
  4278                           
  4279                           ; 1 bytes @ 0x8
  4280  0028                     	ds	1
  4281  0029                     setStatus@s:	
  4282                           
  4283                           ; 1 bytes @ 0x9
  4284  0029                     	ds	1
  4285  002A                     ??_handleWrite:	
  4286                           
  4287                           ; 1 bytes @ 0xA
  4288  002A                     	ds	3
  4289  002D                     handleWrite@d:	
  4290                           
  4291                           ; 1 bytes @ 0xD
  4292  002D                     	ds	1
  4293  002E                     ??_i2cISR:	
  4294                           
  4295                           ; 1 bytes @ 0xE
  4296  002E                     	ds	1
  4297  002F                     ?_updateTime:	
  4298  002F                     ?_testButtons:	
  4299                           ; 1 bytes @ 0xF
  4300                           
  4301  002F                     i2cISR@d:	
  4302                           ; 1 bytes @ 0xF
  4303                           
  4304                           
  4305                           ; 1 bytes @ 0xF
  4306  002F                     	ds	1
  4307  0030                     ??_updateTime:	
  4308  0030                     ??_testButtons:	
  4309                           ; 1 bytes @ 0x10
  4310                           
  4311  0030                     ?_setProps:	
  4312                           ; 1 bytes @ 0x10
  4313                           
  4314  0030                     ??_configureCPU:	
  4315                           ; 1 bytes @ 0x10
  4316                           
  4317  0030                     ??_configureIOs:	
  4318                           ; 1 bytes @ 0x10
  4319                           
  4320  0030                     ??_configureTimers:	
  4321                           ; 1 bytes @ 0x10
  4322                           
  4323  0030                     ??_configureI2C:	
  4324                           ; 1 bytes @ 0x10
  4325                           
  4326  0030                     ??_configurePWM:	
  4327                           ; 1 bytes @ 0x10
  4328                           
  4329  0030                     ?_setPWM:	
  4330                           ; 1 bytes @ 0x10
  4331                           
  4332  0030                     ?___bmul:	
  4333                           ; 1 bytes @ 0x10
  4334                           
  4335  0030                     setPWM@pwm:	
  4336                           ; 1 bytes @ 0x10
  4337                           
  4338  0030                     setProps@r:	
  4339                           ; 1 bytes @ 0x10
  4340                           
  4341  0030                     ___bmul@multiplicand:	
  4342                           ; 1 bytes @ 0x10
  4343                           
  4344                           
  4345                           ; 1 bytes @ 0x10
  4346  0030                     	ds	1
  4347  0031                     ??_setPWM:	
  4348  0031                     ??___bmul:	
  4349                           ; 1 bytes @ 0x11
  4350                           
  4351  0031                     setProps@c:	
  4352                           ; 1 bytes @ 0x11
  4353                           
  4354  0031                     testButtons@clamp:	
  4355                           ; 1 bytes @ 0x11
  4356                           
  4357                           
  4358                           ; 1 bytes @ 0x11
  4359  0031                     	ds	1
  4360  0032                     ??_setProps:	
  4361  0032                     testButtons@rotate:	
  4362                           ; 1 bytes @ 0x12
  4363                           
  4364  0032                     ___bmul@product:	
  4365                           ; 1 bytes @ 0x12
  4366                           
  4367                           
  4368                           ; 1 bytes @ 0x12
  4369  0032                     	ds	1
  4370  0033                     setPWM@module:	
  4371  0033                     testButtons@lift:	
  4372                           ; 1 bytes @ 0x13
  4373                           
  4374  0033                     ___bmul@multiplier:	
  4375                           ; 1 bytes @ 0x13
  4376                           
  4377                           
  4378                           ; 1 bytes @ 0x13
  4379  0033                     	ds	1
  4380  0034                     setProps@l:	
  4381  0034                     testButtons@p:	
  4382                           ; 1 bytes @ 0x14
  4383                           
  4384  0034                     _setPWM$1154:	
  4385                           ; 1 bytes @ 0x14
  4386                           
  4387                           
  4388                           ; 2 bytes @ 0x14
  4389  0034                     	ds	2
  4390  0036                     ?_setMotors:	
  4391  0036                     setMotors@dir:	
  4392                           ; 1 bytes @ 0x16
  4393                           
  4394                           
  4395                           ; 1 bytes @ 0x16
  4396  0036                     	ds	1
  4397  0037                     setMotors@v:	
  4398                           
  4399                           ; 1 bytes @ 0x17
  4400  0037                     	ds	1
  4401  0038                     ??_setMotors:	
  4402                           
  4403                           ; 1 bytes @ 0x18
  4404  0038                     	ds	2
  4405  003A                     ?_updateMovement:	
  4406  003A                     ?_updateMotors:	
  4407                           ; 1 bytes @ 0x1A
  4408                           
  4409  003A                     setMotors@motor:	
  4410                           ; 1 bytes @ 0x1A
  4411                           
  4412                           
  4413                           ; 1 bytes @ 0x1A
  4414  003A                     	ds	1
  4415  003B                     ??_updateMotors:	
  4416  003B                     updateMovement@s:	
  4417                           ; 1 bytes @ 0x1B
  4418                           
  4419                           
  4420                           ; 1 bytes @ 0x1B
  4421  003B                     	ds	1
  4422  003C                     updateMovement@clamp:	
  4423  003C                     updateTime@tPrev:	
  4424                           ; 1 bytes @ 0x1C
  4425                           
  4426                           
  4427                           ; 2 bytes @ 0x1C
  4428  003C                     	ds	1
  4429  003D                     updateMotors@clamp:	
  4430  003D                     updateMovement@rotate:	
  4431                           ; 1 bytes @ 0x1D
  4432                           
  4433                           
  4434                           ; 1 bytes @ 0x1D
  4435  003D                     	ds	1
  4436  003E                     updateMotors@rotate:	
  4437  003E                     updateMovement@lift:	
  4438                           ; 1 bytes @ 0x1E
  4439                           
  4440  003E                     updateTime@tNow:	
  4441                           ; 1 bytes @ 0x1E
  4442                           
  4443                           
  4444                           ; 2 bytes @ 0x1E
  4445  003E                     	ds	1
  4446  003F                     updateMotors@lift:	
  4447  003F                     updateMovement@p:	
  4448                           ; 1 bytes @ 0x1F
  4449                           
  4450                           
  4451                           ; 1 bytes @ 0x1F
  4452  003F                     	ds	1
  4453  0040                     updateMotors@p:	
  4454  0040                     updateTime@p:	
  4455                           ; 1 bytes @ 0x20
  4456                           
  4457                           
  4458                           ; 1 bytes @ 0x20
  4459  0040                     	ds	1
  4460  0041                     ??_updateSys:	
  4461  0041                     ??_main:	
  4462                           ; 1 bytes @ 0x21
  4463                           
  4464                           
  4465                           ; 1 bytes @ 0x21
  4466  0041                     	ds	10
  4467  004B                     ?_updateSys:	
  4468                           
  4469                           	psect	maintext
  4470  0A6C                     __pmaintext:	
  4471                           ; 1 bytes @ 0x2B
  4472 ;;
  4473 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4474 ;;
  4475 ;; *************** function _main *****************
  4476 ;; Defined at:
  4477 ;;		line 61 in file "Main.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : B1F/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;Total ram usage:        0 bytes
  4496 ;; Hardware stack levels required when called:   11
  4497 ;; This function calls:
  4498 ;;		_configureCPU
  4499 ;;		_configureI2C
  4500 ;;		_configureIOs
  4501 ;;		_configurePWM
  4502 ;;		_configureTimers
  4503 ;;		_updateSys
  4504 ;; This function is called by:
  4505 ;;		Startup code after reset
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           
  4510                           ;psect for function _main
  4511  0A6C                     _main:	
  4512  0A6C                     l4833:	
  4513                           ;incstack = 0
  4514                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4515                           
  4516                           
  4517                           ;Main.c: 62:     configureCPU();
  4518  0A6C  3189  21F1  318A   	fcall	_configureCPU
  4519                           
  4520                           ;Main.c: 63:     configureIOs();
  4521  0A6F  318A  228D  318A   	fcall	_configureIOs
  4522                           
  4523                           ;Main.c: 64:     configureTimers();
  4524  0A72  3189  21FB  318A   	fcall	_configureTimers
  4525                           
  4526                           ;Main.c: 65:     configurePWM();
  4527  0A75  318C  243E  318A   	fcall	_configurePWM
  4528                           
  4529                           ;Main.c: 66:     configureI2C();
  4530  0A78  318A  2220  318A   	fcall	_configureI2C
  4531  0A7B                     l4835:	
  4532                           
  4533                           ;Main.c: 68:     TMR0H = 0;
  4534  0A7B  0020               	movlb	0	; select bank0
  4535  0A7C  019D               	clrf	29	;volatile
  4536  0A7D                     l4837:	
  4537                           
  4538                           ;Main.c: 69:     TMR0L = 0;
  4539  0A7D  019C               	clrf	28	;volatile
  4540  0A7E                     l4839:	
  4541                           
  4542                           ;Main.c: 70:     props.time = 0;
  4543  0A7E  3000               	movlw	0
  4544  0A7F  00E9               	movwf	_props+16
  4545  0A80  3000               	movlw	0
  4546  0A81  00E8               	movwf	_props+15
  4547  0A82  3000               	movlw	0
  4548  0A83  00E7               	movwf	_props+14
  4549  0A84  3000               	movlw	0
  4550  0A85  00E6               	movwf	_props+13
  4551  0A86                     l4841:	
  4552                           
  4553                           ;Main.c: 74:         updateSys(&props);
  4554  0A86  3059               	movlw	(low (_props| 0))& (0+255)
  4555  0A87  318A  224C  318A   	fcall	_updateSys
  4556  0A8A  2A86               	goto	l4841
  4557  0A8B  3180  2810         	ljmp	start
  4558  0A8D                     __end_of_main:	
  4559                           
  4560                           	psect	text1
  4561  0A4C                     __ptext1:	
  4562 ;; *************** function _updateSys *****************
  4563 ;; Defined at:
  4564 ;;		line 19 in file "updates.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  p               1    wreg     PTR struct properties
  4567 ;;		 -> props(17), 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  p               1    8[BANK1 ] PTR struct properties
  4570 ;;		 -> props(17), 
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  1    wreg      void 
  4573 ;; Registers used:
  4574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4583 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4584 ;;Total ram usage:        1 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:   10
  4587 ;; This function calls:
  4588 ;;		_testButtons
  4589 ;;		_updateMotors
  4590 ;;		_updateMovement
  4591 ;;		_updateTime
  4592 ;; This function is called by:
  4593 ;;		_main
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           
  4598                           ;psect for function _updateSys
  4599  0A4C                     _updateSys:	
  4600                           
  4601                           ;incstack = 0
  4602                           ; Regs used in _updateSys: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4603                           ;updateSys@p stored from wreg
  4604  0A4C  0021               	movlb	1	; select bank1
  4605  0A4D  00A8               	movwf	updateSys@p^(0+128)
  4606  0A4E                     l4823:	
  4607                           
  4608                           ;updates.c: 22:     updateTime(p);
  4609  0A4E  0828               	movf	updateSys@p^(0+128),w
  4610  0A4F  318E  2621  318A   	fcall	_updateTime
  4611                           
  4612                           ;updates.c: 23:     testButtons(p);
  4613  0A52  0021               	movlb	1	; select bank1
  4614  0A53  0828               	movf	updateSys@p^(0+128),w
  4615  0A54  318D  2510  318A   	fcall	_testButtons
  4616                           
  4617                           ;updates.c: 27:     updateTime(p);
  4618  0A57  0021               	movlb	1	; select bank1
  4619  0A58  0828               	movf	updateSys@p^(0+128),w
  4620  0A59  318E  2621  318A   	fcall	_updateTime
  4621  0A5C                     l4825:	
  4622                           
  4623                           ;updates.c: 28:     updateMovement(p);
  4624  0A5C  0021               	movlb	1	; select bank1
  4625  0A5D  0828               	movf	updateSys@p^(0+128),w
  4626  0A5E  3180  201E  318A   	fcall	_updateMovement
  4627  0A61                     l4827:	
  4628                           
  4629                           ;updates.c: 31:     updateTime(p);
  4630  0A61  0021               	movlb	1	; select bank1
  4631  0A62  0828               	movf	updateSys@p^(0+128),w
  4632  0A63  318E  2621  318A   	fcall	_updateTime
  4633                           
  4634                           ;updates.c: 32:     updateMotors(p);
  4635  0A66  0021               	movlb	1	; select bank1
  4636  0A67  0828               	movf	updateSys@p^(0+128),w
  4637  0A68  318D  2593  318A   	fcall	_updateMotors
  4638  0A6B                     l580:	
  4639  0A6B  0008               	return
  4640  0A6C                     __end_of_updateSys:	
  4641                           
  4642                           	psect	text2
  4643  0E21                     __ptext2:	
  4644 ;; *************** function _updateTime *****************
  4645 ;; Defined at:
  4646 ;;		line 278 in file "updates.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  p               1    wreg     PTR struct properties
  4649 ;;		 -> props(17), 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  p               1   32[BANK0 ] PTR struct properties
  4652 ;;		 -> props(17), 
  4653 ;;  tNow            2   30[BANK0 ] unsigned int 
  4654 ;;  tPrev           2   28[BANK0 ] unsigned int 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4666 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4667 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;Total ram usage:       17 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    7
  4671 ;; This function calls:
  4672 ;;		Nothing
  4673 ;; This function is called by:
  4674 ;;		_updateSys
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           
  4679                           ;psect for function _updateTime
  4680  0E21                     _updateTime:	
  4681                           
  4682                           ;incstack = 0
  4683                           ; Regs used in _updateTime: [wreg+fsr1l+fsr1h+status,2+status,0]
  4684                           ;updateTime@p stored from wreg
  4685  0E21  0020               	movlb	0	; select bank0
  4686  0E22  00C0               	movwf	updateTime@p
  4687  0E23                     l4399:	
  4688                           
  4689                           ;updates.c: 279:     unsigned int tPrev = p->time % 0x10000;
  4690  0E23  0840               	movf	updateTime@p,w
  4691  0E24  3E0D               	addlw	13
  4692  0E25  0086               	movwf	6
  4693  0E26  0187               	clrf	7
  4694  0E27  3F40               	moviw [0]fsr1
  4695  0E28  00BC               	movwf	updateTime@tPrev
  4696  0E29  3F41               	moviw [1]fsr1
  4697  0E2A  00BD               	movwf	updateTime@tPrev+1
  4698  0E2B                     l4401:	
  4699                           
  4700                           ;updates.c: 280:     unsigned int tNow = TMR0L;
  4701  0E2B  081C               	movf	28,w	;volatile
  4702  0E2C  00B0               	movwf	??_updateTime
  4703  0E2D  01B1               	clrf	??_updateTime+1
  4704  0E2E  0830               	movf	??_updateTime,w
  4705  0E2F  00BE               	movwf	updateTime@tNow
  4706  0E30  0831               	movf	??_updateTime+1,w
  4707  0E31  00BF               	movwf	updateTime@tNow+1
  4708  0E32                     l4403:	
  4709                           
  4710                           ;updates.c: 281:     tNow += TMR0H<<8;
  4711  0E32  081D               	movf	29,w	;volatile
  4712  0E33  00B0               	movwf	??_updateTime
  4713  0E34  01B1               	clrf	??_updateTime+1
  4714  0E35  0830               	movf	??_updateTime,w
  4715  0E36  00B1               	movwf	??_updateTime+1
  4716  0E37  01B0               	clrf	??_updateTime
  4717  0E38  0830               	movf	??_updateTime,w
  4718  0E39  07BE               	addwf	updateTime@tNow,f
  4719  0E3A  0831               	movf	??_updateTime+1,w
  4720  0E3B  3DBF               	addwfc	updateTime@tNow+1,f
  4721  0E3C                     l4405:	
  4722                           
  4723                           ;updates.c: 282:     if(tNow >= tPrev){
  4724  0E3C  083D               	movf	updateTime@tPrev+1,w
  4725  0E3D  023F               	subwf	updateTime@tNow+1,w
  4726  0E3E  1D03               	skipz
  4727  0E3F  2E42               	goto	u3875
  4728  0E40  083C               	movf	updateTime@tPrev,w
  4729  0E41  023E               	subwf	updateTime@tNow,w
  4730  0E42                     u3875:	
  4731  0E42  1C03               	skipc
  4732  0E43  2E45               	goto	u3871
  4733  0E44  2E46               	goto	u3870
  4734  0E45                     u3871:	
  4735  0E45  2E74               	goto	l4409
  4736  0E46                     u3870:	
  4737  0E46                     l4407:	
  4738                           
  4739                           ;updates.c: 283:         p->time = (p->time & 0xFFFF0000) + tNow;
  4740  0E46  083E               	movf	updateTime@tNow,w
  4741  0E47  00B0               	movwf	??_updateTime
  4742  0E48  083F               	movf	updateTime@tNow+1,w
  4743  0E49  00B1               	movwf	??_updateTime+1
  4744  0E4A  01B2               	clrf	??_updateTime+2
  4745  0E4B  01B3               	clrf	??_updateTime+3
  4746  0E4C  0840               	movf	updateTime@p,w
  4747  0E4D  3E0D               	addlw	13
  4748  0E4E  0086               	movwf	6
  4749  0E4F  0187               	clrf	7
  4750  0E50  3000               	movlw	0
  4751  0E51  0501               	andwf	1,w
  4752  0E52  00B4               	movwf	??_updateTime+4
  4753  0E53  3141               	addfsr 1,1
  4754  0E54  3000               	movlw	0
  4755  0E55  0501               	andwf	1,w
  4756  0E56  00B5               	movwf	??_updateTime+5
  4757  0E57  3141               	addfsr 1,1
  4758  0E58  30FF               	movlw	255
  4759  0E59  0501               	andwf	1,w
  4760  0E5A  00B6               	movwf	??_updateTime+6
  4761  0E5B  3141               	addfsr 1,1
  4762  0E5C  30FF               	movlw	255
  4763  0E5D  0501               	andwf	1,w
  4764  0E5E  00B7               	movwf	??_updateTime+7
  4765  0E5F  0834               	movf	??_updateTime+4,w
  4766  0E60  07B0               	addwf	??_updateTime,f
  4767  0E61  0835               	movf	??_updateTime+5,w
  4768  0E62  3DB1               	addwfc	??_updateTime+1,f
  4769  0E63  0836               	movf	??_updateTime+6,w
  4770  0E64  3DB2               	addwfc	??_updateTime+2,f
  4771  0E65  0837               	movf	??_updateTime+7,w
  4772  0E66  3DB3               	addwfc	??_updateTime+3,f
  4773  0E67  0840               	movf	updateTime@p,w
  4774  0E68  3E0D               	addlw	13
  4775  0E69  0086               	movwf	6
  4776  0E6A  0187               	clrf	7
  4777  0E6B  0830               	movf	??_updateTime,w
  4778  0E6C  3FC0               	movwi [0]fsr1
  4779  0E6D  0831               	movf	??_updateTime+1,w
  4780  0E6E  3FC1               	movwi [1]fsr1
  4781  0E6F  0832               	movf	??_updateTime+2,w
  4782  0E70  3FC2               	movwi [2]fsr1
  4783  0E71  0833               	movf	??_updateTime+3,w
  4784  0E72  3FC3               	movwi [3]fsr1
  4785                           
  4786                           ;updates.c: 284:     }else{
  4787  0E73  2EB1               	goto	l695
  4788  0E74                     l4409:	
  4789                           
  4790                           ;updates.c: 285:         p->time = (p->time & 0xFFFF0000) + tNow + 0x10000;
  4791  0E74  3000               	movlw	0
  4792  0E75  00B0               	movwf	??_updateTime
  4793  0E76  3000               	movlw	0
  4794  0E77  00B1               	movwf	??_updateTime+1
  4795  0E78  3001               	movlw	1
  4796  0E79  00B2               	movwf	??_updateTime+2
  4797  0E7A  3000               	movlw	0
  4798  0E7B  00B3               	movwf	??_updateTime+3
  4799  0E7C  083E               	movf	updateTime@tNow,w
  4800  0E7D  00B4               	movwf	??_updateTime+4
  4801  0E7E  083F               	movf	updateTime@tNow+1,w
  4802  0E7F  00B5               	movwf	??_updateTime+5
  4803  0E80  01B6               	clrf	??_updateTime+6
  4804  0E81  01B7               	clrf	??_updateTime+7
  4805  0E82  0840               	movf	updateTime@p,w
  4806  0E83  3E0D               	addlw	13
  4807  0E84  0086               	movwf	6
  4808  0E85  0187               	clrf	7
  4809  0E86  3000               	movlw	0
  4810  0E87  0501               	andwf	1,w
  4811  0E88  00B8               	movwf	??_updateTime+8
  4812  0E89  3141               	addfsr 1,1
  4813  0E8A  3000               	movlw	0
  4814  0E8B  0501               	andwf	1,w
  4815  0E8C  00B9               	movwf	??_updateTime+9
  4816  0E8D  3141               	addfsr 1,1
  4817  0E8E  30FF               	movlw	255
  4818  0E8F  0501               	andwf	1,w
  4819  0E90  00BA               	movwf	??_updateTime+10
  4820  0E91  3141               	addfsr 1,1
  4821  0E92  30FF               	movlw	255
  4822  0E93  0501               	andwf	1,w
  4823  0E94  00BB               	movwf	??_updateTime+11
  4824  0E95  0838               	movf	??_updateTime+8,w
  4825  0E96  07B4               	addwf	??_updateTime+4,f
  4826  0E97  0839               	movf	??_updateTime+9,w
  4827  0E98  3DB5               	addwfc	??_updateTime+5,f
  4828  0E99  083A               	movf	??_updateTime+10,w
  4829  0E9A  3DB6               	addwfc	??_updateTime+6,f
  4830  0E9B  083B               	movf	??_updateTime+11,w
  4831  0E9C  3DB7               	addwfc	??_updateTime+7,f
  4832  0E9D  0834               	movf	??_updateTime+4,w
  4833  0E9E  07B0               	addwf	??_updateTime,f
  4834  0E9F  0835               	movf	??_updateTime+5,w
  4835  0EA0  3DB1               	addwfc	??_updateTime+1,f
  4836  0EA1  0836               	movf	??_updateTime+6,w
  4837  0EA2  3DB2               	addwfc	??_updateTime+2,f
  4838  0EA3  0837               	movf	??_updateTime+7,w
  4839  0EA4  3DB3               	addwfc	??_updateTime+3,f
  4840  0EA5  0840               	movf	updateTime@p,w
  4841  0EA6  3E0D               	addlw	13
  4842  0EA7  0086               	movwf	6
  4843  0EA8  0187               	clrf	7
  4844  0EA9  0830               	movf	??_updateTime,w
  4845  0EAA  3FC0               	movwi [0]fsr1
  4846  0EAB  0831               	movf	??_updateTime+1,w
  4847  0EAC  3FC1               	movwi [1]fsr1
  4848  0EAD  0832               	movf	??_updateTime+2,w
  4849  0EAE  3FC2               	movwi [2]fsr1
  4850  0EAF  0833               	movf	??_updateTime+3,w
  4851  0EB0  3FC3               	movwi [3]fsr1
  4852  0EB1                     l695:	
  4853  0EB1  0008               	return
  4854  0EB2                     __end_of_updateTime:	
  4855                           
  4856                           	psect	text3
  4857  001E                     __ptext3:	
  4858 ;; *************** function _updateMovement *****************
  4859 ;; Defined at:
  4860 ;;		line 61 in file "updates.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  p               1    wreg     PTR struct properties
  4863 ;;		 -> props(17), 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  p               1   31[BANK0 ] PTR struct properties
  4866 ;;		 -> props(17), 
  4867 ;;  lift            1   30[BANK0 ] PTR unsigned char 
  4868 ;;		 -> props.claw1.height(1), 
  4869 ;;  rotate          1   29[BANK0 ] PTR unsigned char 
  4870 ;;		 -> props.claw1.orientation(1), 
  4871 ;;  clamp           1   28[BANK0 ] PTR unsigned char 
  4872 ;;		 -> props.claw1.clamped(1), 
  4873 ;;  s               1   27[BANK0 ] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4884 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4885 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4886 ;;      Totals:         0       5       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;Total ram usage:       13 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    9
  4890 ;; This function calls:
  4891 ;;		_setMotors
  4892 ;;		_setProps
  4893 ;; This function is called by:
  4894 ;;		_updateSys
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           
  4899                           ;psect for function _updateMovement
  4900  001E                     _updateMovement:	
  4901                           
  4902                           ;incstack = 0
  4903                           ; Regs used in _updateMovement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4904                           ;updateMovement@p stored from wreg
  4905  001E  0020               	movlb	0	; select bank0
  4906  001F  00BF               	movwf	updateMovement@p
  4907  0020                     l4459:	
  4908                           
  4909                           ;updates.c: 62:     unsigned char *clamp = &(p->claw1.clamped);
  4910  0020  083F               	movf	updateMovement@p,w
  4911  0021  0021               	movlb	1	; select bank1
  4912  0022  00A0               	movwf	??_updateMovement^(0+128)
  4913  0023  0820               	movf	??_updateMovement^(0+128),w
  4914  0024  0020               	movlb	0	; select bank0
  4915  0025  00BC               	movwf	updateMovement@clamp
  4916  0026                     l4461:	
  4917                           
  4918                           ;updates.c: 63:     unsigned char *rotate = &(p->claw1.orientation);
  4919  0026  083F               	movf	updateMovement@p,w
  4920  0027  3E01               	addlw	1
  4921  0028  0021               	movlb	1	; select bank1
  4922  0029  00A0               	movwf	??_updateMovement^(0+128)
  4923  002A  0820               	movf	??_updateMovement^(0+128),w
  4924  002B  0020               	movlb	0	; select bank0
  4925  002C  00BD               	movwf	updateMovement@rotate
  4926  002D                     l4463:	
  4927                           
  4928                           ;updates.c: 64:     unsigned char *lift = &(p->claw1.height);
  4929  002D  083F               	movf	updateMovement@p,w
  4930  002E  3E02               	addlw	2
  4931  002F  0021               	movlb	1	; select bank1
  4932  0030  00A0               	movwf	??_updateMovement^(0+128)
  4933  0031  0820               	movf	??_updateMovement^(0+128),w
  4934  0032  0020               	movlb	0	; select bank0
  4935  0033  00BE               	movwf	updateMovement@lift
  4936  0034                     l4465:	
  4937                           
  4938                           ;updates.c: 84:     unsigned char s = p->claw1.routine & 0b1111;
  4939  0034  083F               	movf	updateMovement@p,w
  4940  0035  3E03               	addlw	3
  4941  0036  0086               	movwf	6
  4942  0037  0187               	clrf	7
  4943  0038  0801               	movf	1,w
  4944  0039  390F               	andlw	15
  4945  003A  0021               	movlb	1	; select bank1
  4946  003B  00A0               	movwf	??_updateMovement^(0+128)
  4947  003C  0820               	movf	??_updateMovement^(0+128),w
  4948  003D  0020               	movlb	0	; select bank0
  4949  003E  00BB               	movwf	updateMovement@s
  4950  003F                     l4467:	
  4951                           
  4952                           ;updates.c: 85:     if(s){
  4953  003F  083B               	movf	updateMovement@s,w
  4954  0040  1903               	btfsc	3,2
  4955  0041  2843               	goto	u3951
  4956  0042  2844               	goto	u3950
  4957  0043                     u3951:	
  4958  0043  2ACF               	goto	l4583
  4959  0044                     u3950:	
  4960  0044  2AA7               	goto	l4581
  4961  0045                     l4471:	
  4962                           
  4963                           ;updates.c: 90:                 if(*lift&0b10000){
  4964  0045  0020               	movlb	0	; select bank0
  4965  0046  083E               	movf	updateMovement@lift,w
  4966  0047  0086               	movwf	6
  4967  0048  0187               	clrf	7
  4968  0049  1E01               	btfss	1,4
  4969  004A  284C               	goto	u3961
  4970  004B  284D               	goto	u3960
  4971  004C                     u3961:	
  4972  004C  285A               	goto	l4477
  4973  004D                     u3960:	
  4974  004D                     l4473:	
  4975                           
  4976                           ;updates.c: 92:                     --p->claw1.routine;
  4977  004D  083F               	movf	updateMovement@p,w
  4978  004E  3E03               	addlw	3
  4979  004F  0086               	movwf	6
  4980  0050  0187               	clrf	7
  4981  0051  3001               	movlw	1
  4982  0052  0281               	subwf	1,f
  4983  0053                     l4475:	
  4984                           
  4985                           ;updates.c: 93:                     setProps(0,0,0);
  4986  0053  01B0               	clrf	setProps@r
  4987  0054  01B1               	clrf	setProps@c
  4988  0055  3000               	movlw	0
  4989  0056  3187  27B3  3180   	fcall	_setProps
  4990                           
  4991                           ;updates.c: 94:                 }
  4992  0059  2ACF               	goto	l4583
  4993  005A                     l4477:	
  4994                           
  4995                           ;updates.c: 96:                     setProps(0b10,0b00,0b00);
  4996  005A  01B0               	clrf	setProps@r
  4997  005B  01B1               	clrf	setProps@c
  4998  005C  3002               	movlw	2
  4999  005D  3187  27B3  3180   	fcall	_setProps
  5000  0060  2ACF               	goto	l4583
  5001  0061                     l4479:	
  5002                           
  5003                           ;updates.c: 102:                         if(p->time-p->claw1.time1 > 500)
  5004  0061  0020               	movlb	0	; select bank0
  5005  0062  083F               	movf	updateMovement@p,w
  5006  0063  3E04               	addlw	4
  5007  0064  0086               	movwf	6
  5008  0065  0187               	clrf	7
  5009  0066  3F40               	moviw [0]fsr1
  5010  0067  0021               	movlb	1	; select bank1
  5011  0068  00A0               	movwf	??_updateMovement^(0+128)
  5012  0069  3F41               	moviw [1]fsr1
  5013  006A  00A1               	movwf	(??_updateMovement^(0+128)+1)
  5014  006B  3F42               	moviw [2]fsr1
  5015  006C  00A2               	movwf	(??_updateMovement^(0+128)+2)
  5016  006D  3F43               	moviw [3]fsr1
  5017  006E  00A3               	movwf	(??_updateMovement^(0+128)+3)
  5018  006F  0020               	movlb	0	; select bank0
  5019  0070  083F               	movf	updateMovement@p,w
  5020  0071  3E0D               	addlw	13
  5021  0072  0086               	movwf	6
  5022  0073  0187               	clrf	7
  5023  0074  3F40               	moviw [0]fsr1
  5024  0075  0021               	movlb	1	; select bank1
  5025  0076  00A4               	movwf	(??_updateMovement+4)^(0+128)
  5026  0077  3F41               	moviw [1]fsr1
  5027  0078  00A5               	movwf	((??_updateMovement+4)^(0+128)+1)
  5028  0079  3F42               	moviw [2]fsr1
  5029  007A  00A6               	movwf	((??_updateMovement+4)^(0+128)+2)
  5030  007B  3F43               	moviw [3]fsr1
  5031  007C  00A7               	movwf	((??_updateMovement+4)^(0+128)+3)
  5032  007D  0820               	movf	??_updateMovement^(0+128),w
  5033  007E  02A4               	subwf	(??_updateMovement+4)^(0+128),f
  5034  007F  0821               	movf	(??_updateMovement+1)^(0+128),w
  5035  0080  3BA5               	subwfb	((??_updateMovement+4)^(0+128)+1),f
  5036  0081  0822               	movf	(??_updateMovement+2)^(0+128),w
  5037  0082  3BA6               	subwfb	((??_updateMovement+4)^(0+128)+2),f
  5038  0083  0823               	movf	(??_updateMovement+3)^(0+128),w
  5039  0084  3BA7               	subwfb	((??_updateMovement+4)^(0+128)+3),f
  5040  0085  0827               	movf	((??_updateMovement+4)^(0+128)+3),w
  5041  0086  1D03               	btfss	3,2
  5042  0087  2893               	goto	u3970
  5043  0088  0826               	movf	((??_updateMovement+4)^(0+128)+2),w
  5044  0089  1D03               	btfss	3,2
  5045  008A  2893               	goto	u3970
  5046  008B  30F5               	movlw	245
  5047  008C  0224               	subwf	(??_updateMovement+4)^(0+128),w
  5048  008D  3001               	movlw	1
  5049  008E  3B25               	subwfb	((??_updateMovement+4)^(0+128)+1),w
  5050  008F  1C03               	btfss	3,0
  5051  0090  2892               	goto	u3971
  5052  0091  2893               	goto	u3970
  5053  0092                     u3971:	
  5054  0092  289B               	goto	l4483
  5055  0093                     u3970:	
  5056  0093                     l4481:	
  5057                           
  5058                           ;updates.c: 103:                             --p->claw1.routine;
  5059  0093  0020               	movlb	0	; select bank0
  5060  0094  083F               	movf	updateMovement@p,w
  5061  0095  3E03               	addlw	3
  5062  0096  0086               	movwf	6
  5063  0097  0187               	clrf	7
  5064  0098  3001               	movlw	1
  5065  0099  0281               	subwf	1,f
  5066  009A  2ACF               	goto	l4583
  5067  009B                     l4483:	
  5068                           
  5069                           ;updates.c: 105:                             setProps(0b10,0b00,0b00);
  5070  009B  0020               	movlb	0	; select bank0
  5071  009C  01B0               	clrf	setProps@r
  5072  009D  01B1               	clrf	setProps@c
  5073  009E  3002               	movlw	2
  5074  009F  3187  27B3  3180   	fcall	_setProps
  5075  00A2  2ACF               	goto	l4583
  5076  00A3                     l4485:	
  5077                           
  5078                           ;updates.c: 109:                         if(p->time-p->claw1.time1 > 1000)
  5079  00A3  0020               	movlb	0	; select bank0
  5080  00A4  083F               	movf	updateMovement@p,w
  5081  00A5  3E04               	addlw	4
  5082  00A6  0086               	movwf	6
  5083  00A7  0187               	clrf	7
  5084  00A8  3F40               	moviw [0]fsr1
  5085  00A9  0021               	movlb	1	; select bank1
  5086  00AA  00A0               	movwf	??_updateMovement^(0+128)
  5087  00AB  3F41               	moviw [1]fsr1
  5088  00AC  00A1               	movwf	(??_updateMovement^(0+128)+1)
  5089  00AD  3F42               	moviw [2]fsr1
  5090  00AE  00A2               	movwf	(??_updateMovement^(0+128)+2)
  5091  00AF  3F43               	moviw [3]fsr1
  5092  00B0  00A3               	movwf	(??_updateMovement^(0+128)+3)
  5093  00B1  0020               	movlb	0	; select bank0
  5094  00B2  083F               	movf	updateMovement@p,w
  5095  00B3  3E0D               	addlw	13
  5096  00B4  0086               	movwf	6
  5097  00B5  0187               	clrf	7
  5098  00B6  3F40               	moviw [0]fsr1
  5099  00B7  0021               	movlb	1	; select bank1
  5100  00B8  00A4               	movwf	(??_updateMovement+4)^(0+128)
  5101  00B9  3F41               	moviw [1]fsr1
  5102  00BA  00A5               	movwf	((??_updateMovement+4)^(0+128)+1)
  5103  00BB  3F42               	moviw [2]fsr1
  5104  00BC  00A6               	movwf	((??_updateMovement+4)^(0+128)+2)
  5105  00BD  3F43               	moviw [3]fsr1
  5106  00BE  00A7               	movwf	((??_updateMovement+4)^(0+128)+3)
  5107  00BF  0820               	movf	??_updateMovement^(0+128),w
  5108  00C0  02A4               	subwf	(??_updateMovement+4)^(0+128),f
  5109  00C1  0821               	movf	(??_updateMovement+1)^(0+128),w
  5110  00C2  3BA5               	subwfb	((??_updateMovement+4)^(0+128)+1),f
  5111  00C3  0822               	movf	(??_updateMovement+2)^(0+128),w
  5112  00C4  3BA6               	subwfb	((??_updateMovement+4)^(0+128)+2),f
  5113  00C5  0823               	movf	(??_updateMovement+3)^(0+128),w
  5114  00C6  3BA7               	subwfb	((??_updateMovement+4)^(0+128)+3),f
  5115  00C7  0827               	movf	((??_updateMovement+4)^(0+128)+3),w
  5116  00C8  1D03               	btfss	3,2
  5117  00C9  28D5               	goto	u3980
  5118  00CA  0826               	movf	((??_updateMovement+4)^(0+128)+2),w
  5119  00CB  1D03               	btfss	3,2
  5120  00CC  28D5               	goto	u3980
  5121  00CD  30E9               	movlw	233
  5122  00CE  0224               	subwf	(??_updateMovement+4)^(0+128),w
  5123  00CF  3003               	movlw	3
  5124  00D0  3B25               	subwfb	((??_updateMovement+4)^(0+128)+1),w
  5125  00D1  1C03               	btfss	3,0
  5126  00D2  28D4               	goto	u3981
  5127  00D3  28D5               	goto	u3980
  5128  00D4                     u3981:	
  5129  00D4  28DD               	goto	l4489
  5130  00D5                     u3980:	
  5131  00D5                     l4487:	
  5132                           
  5133                           ;updates.c: 110:                             --p->claw1.routine;
  5134  00D5  0020               	movlb	0	; select bank0
  5135  00D6  083F               	movf	updateMovement@p,w
  5136  00D7  3E03               	addlw	3
  5137  00D8  0086               	movwf	6
  5138  00D9  0187               	clrf	7
  5139  00DA  3001               	movlw	1
  5140  00DB  0281               	subwf	1,f
  5141  00DC  2ACF               	goto	l4583
  5142  00DD                     l4489:	
  5143  00DD  0020               	movlb	0	; select bank0
  5144  00DE  083D               	movf	updateMovement@rotate,w
  5145  00DF  0086               	movwf	6
  5146  00E0  0187               	clrf	7
  5147  00E1  1E01               	btfss	1,4
  5148  00E2  28E4               	goto	u3991
  5149  00E3  28E5               	goto	u3990
  5150  00E4                     u3991:	
  5151  00E4  28EC               	goto	l4493
  5152  00E5                     u3990:	
  5153  00E5                     l4491:	
  5154                           
  5155                           ;updates.c: 112:                             p->claw1.routine -= 2;
  5156  00E5  083F               	movf	updateMovement@p,w
  5157  00E6  3E03               	addlw	3
  5158  00E7  0086               	movwf	6
  5159  00E8  0187               	clrf	7
  5160  00E9  3002               	movlw	2
  5161  00EA  0281               	subwf	1,f
  5162  00EB  2ACF               	goto	l4583
  5163  00EC                     l4493:	
  5164                           
  5165                           ;updates.c: 114:                             setProps(0b10,0b10,0b00);
  5166  00EC  3002               	movlw	2
  5167  00ED  0021               	movlb	1	; select bank1
  5168  00EE  00A0               	movwf	??_updateMovement^(0+128)
  5169  00EF  0820               	movf	??_updateMovement^(0+128),w
  5170  00F0  0020               	movlb	0	; select bank0
  5171  00F1  00B0               	movwf	setProps@r
  5172  00F2  01B1               	clrf	setProps@c
  5173  00F3  3002               	movlw	2
  5174  00F4  3187  27B3  3180   	fcall	_setProps
  5175  00F7  2ACF               	goto	l4583
  5176  00F8                     l4495:	
  5177                           
  5178                           ;updates.c: 118:                         if(*rotate & 0x10)
  5179  00F8  0020               	movlb	0	; select bank0
  5180  00F9  083D               	movf	updateMovement@rotate,w
  5181  00FA  0086               	movwf	6
  5182  00FB  0187               	clrf	7
  5183  00FC  1E01               	btfss	1,4
  5184  00FD  28FF               	goto	u4001
  5185  00FE  2900               	goto	u4000
  5186  00FF                     u4001:	
  5187  00FF  2907               	goto	l4499
  5188  0100                     u4000:	
  5189  0100                     l4497:	
  5190                           
  5191                           ;updates.c: 119:                             --p->claw1.routine;
  5192  0100  083F               	movf	updateMovement@p,w
  5193  0101  3E03               	addlw	3
  5194  0102  0086               	movwf	6
  5195  0103  0187               	clrf	7
  5196  0104  3001               	movlw	1
  5197  0105  0281               	subwf	1,f
  5198  0106  2ACF               	goto	l4583
  5199  0107                     l4499:	
  5200                           
  5201                           ;updates.c: 121:                             setProps(0b00,0b10,0b00);
  5202  0107  3002               	movlw	2
  5203  0108  0021               	movlb	1	; select bank1
  5204  0109  00A0               	movwf	??_updateMovement^(0+128)
  5205  010A  0820               	movf	??_updateMovement^(0+128),w
  5206  010B  0020               	movlb	0	; select bank0
  5207  010C  00B0               	movwf	setProps@r
  5208  010D  01B1               	clrf	setProps@c
  5209  010E  3000               	movlw	0
  5210  010F  3187  27B3  3180   	fcall	_setProps
  5211  0112  2ACF               	goto	l4583
  5212  0113                     l4501:	
  5213                           
  5214                           ;updates.c: 125:                         if(*lift & 0x10){
  5215  0113  0020               	movlb	0	; select bank0
  5216  0114  083E               	movf	updateMovement@lift,w
  5217  0115  0086               	movwf	6
  5218  0116  0187               	clrf	7
  5219  0117  1E01               	btfss	1,4
  5220  0118  291A               	goto	u4011
  5221  0119  291B               	goto	u4010
  5222  011A                     u4011:	
  5223  011A  2928               	goto	l4507
  5224  011B                     u4010:	
  5225  011B                     l4503:	
  5226                           
  5227                           ;updates.c: 126:                             --p->claw1.routine;
  5228  011B  083F               	movf	updateMovement@p,w
  5229  011C  3E03               	addlw	3
  5230  011D  0086               	movwf	6
  5231  011E  0187               	clrf	7
  5232  011F  3001               	movlw	1
  5233  0120  0281               	subwf	1,f
  5234  0121                     l4505:	
  5235                           
  5236                           ;updates.c: 127:                             setProps(0b00,0b00,0b00);
  5237  0121  01B0               	clrf	setProps@r
  5238  0122  01B1               	clrf	setProps@c
  5239  0123  3000               	movlw	0
  5240  0124  3187  27B3  3180   	fcall	_setProps
  5241                           
  5242                           ;updates.c: 128:                         }else
  5243  0127  2ACF               	goto	l4583
  5244  0128                     l4507:	
  5245                           
  5246                           ;updates.c: 129:                             setProps(0b10,0b00,0b00);
  5247  0128  01B0               	clrf	setProps@r
  5248  0129  01B1               	clrf	setProps@c
  5249  012A  3002               	movlw	2
  5250  012B  3187  27B3  3180   	fcall	_setProps
  5251  012E  2ACF               	goto	l4583
  5252  012F                     l4511:	
  5253  012F  0020               	movlb	0	; select bank0
  5254  0130  083B               	movf	updateMovement@s,w
  5255  0131  0021               	movlb	1	; select bank1
  5256  0132  00A0               	movwf	??_updateMovement^(0+128)
  5257  0133  01A1               	clrf	(??_updateMovement^(0+128)+1)
  5258                           
  5259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5260                           ; Switch size 1, requested type "simple"
  5261                           ; Number of cases is 1, Range of values is 0 to 0
  5262                           ; switch strategies available:
  5263                           ; Name         Instructions Cycles
  5264                           ; simple_byte            4     3 (average)
  5265                           ; direct_byte            8     6 (fixed)
  5266                           ; jumptable            260     6 (fixed)
  5267                           ;	Chosen strategy is simple_byte
  5268  0134  0821               	movf	(??_updateMovement+1)^(0+128),w
  5269  0135  3A00               	xorlw	0	; case 0
  5270  0136  1903               	skipnz
  5271  0137  2939               	goto	l5093
  5272  0138  2ACF               	goto	l4583
  5273  0139                     l5093:	
  5274                           
  5275                           ; Switch size 1, requested type "simple"
  5276                           ; Number of cases is 4, Range of values is 1 to 4
  5277                           ; switch strategies available:
  5278                           ; Name         Instructions Cycles
  5279                           ; simple_byte           13     7 (average)
  5280                           ; direct_byte           17     9 (fixed)
  5281                           ; jumptable            263     9 (fixed)
  5282                           ;	Chosen strategy is simple_byte
  5283  0139  0820               	movf	??_updateMovement^(0+128),w
  5284  013A  3A01               	xorlw	1	; case 1
  5285  013B  1903               	skipnz
  5286  013C  2913               	goto	l4501
  5287  013D  3A03               	xorlw	3	; case 2
  5288  013E  1903               	skipnz
  5289  013F  28F8               	goto	l4495
  5290  0140  3A01               	xorlw	1	; case 3
  5291  0141  1903               	skipnz
  5292  0142  28A3               	goto	l4485
  5293  0143  3A07               	xorlw	7	; case 4
  5294  0144  1903               	skipnz
  5295  0145  2861               	goto	l4479
  5296  0146  2ACF               	goto	l4583
  5297  0147                     l4513:	
  5298                           
  5299                           ;updates.c: 134:                 if(*clamp&0b100000){
  5300  0147  0020               	movlb	0	; select bank0
  5301  0148  083C               	movf	updateMovement@clamp,w
  5302  0149  0086               	movwf	6
  5303  014A  0187               	clrf	7
  5304  014B  1E81               	btfss	1,5
  5305  014C  294E               	goto	u4021
  5306  014D  294F               	goto	u4020
  5307  014E                     u4021:	
  5308  014E  295C               	goto	l4519
  5309  014F                     u4020:	
  5310  014F                     l4515:	
  5311                           
  5312                           ;updates.c: 135:                     --p->claw1.routine;
  5313  014F  083F               	movf	updateMovement@p,w
  5314  0150  3E03               	addlw	3
  5315  0151  0086               	movwf	6
  5316  0152  0187               	clrf	7
  5317  0153  3001               	movlw	1
  5318  0154  0281               	subwf	1,f
  5319  0155                     l4517:	
  5320                           
  5321                           ;updates.c: 136:                     setProps(0b00,0b00,0b00);
  5322  0155  01B0               	clrf	setProps@r
  5323  0156  01B1               	clrf	setProps@c
  5324  0157  3000               	movlw	0
  5325  0158  3187  27B3  3180   	fcall	_setProps
  5326                           
  5327                           ;updates.c: 137:                 }else
  5328  015B  2ACF               	goto	l4583
  5329  015C                     l4519:	
  5330                           
  5331                           ;updates.c: 138:                     setProps(0b00,0b00,0b11);
  5332  015C  01B0               	clrf	setProps@r
  5333  015D  3003               	movlw	3
  5334  015E  0021               	movlb	1	; select bank1
  5335  015F  00A0               	movwf	??_updateMovement^(0+128)
  5336  0160  0820               	movf	??_updateMovement^(0+128),w
  5337  0161  0020               	movlb	0	; select bank0
  5338  0162  00B1               	movwf	setProps@c
  5339  0163  3000               	movlw	0
  5340  0164  3187  27B3  3180   	fcall	_setProps
  5341  0167  2ACF               	goto	l4583
  5342  0168                     l4521:	
  5343                           
  5344                           ;updates.c: 141:                 if(*clamp&0b10000){
  5345  0168  0020               	movlb	0	; select bank0
  5346  0169  083C               	movf	updateMovement@clamp,w
  5347  016A  0086               	movwf	6
  5348  016B  0187               	clrf	7
  5349  016C  1E01               	btfss	1,4
  5350  016D  296F               	goto	u4031
  5351  016E  2970               	goto	u4030
  5352  016F                     u4031:	
  5353  016F  297D               	goto	l4527
  5354  0170                     u4030:	
  5355  0170                     l4523:	
  5356                           
  5357                           ;updates.c: 142:                     --p->claw1.routine;
  5358  0170  083F               	movf	updateMovement@p,w
  5359  0171  3E03               	addlw	3
  5360  0172  0086               	movwf	6
  5361  0173  0187               	clrf	7
  5362  0174  3001               	movlw	1
  5363  0175  0281               	subwf	1,f
  5364  0176                     l4525:	
  5365                           
  5366                           ;updates.c: 143:                     setProps(0b00,0b00,0b00);
  5367  0176  01B0               	clrf	setProps@r
  5368  0177  01B1               	clrf	setProps@c
  5369  0178  3000               	movlw	0
  5370  0179  3187  27B3  3180   	fcall	_setProps
  5371                           
  5372                           ;updates.c: 144:                 }else
  5373  017C  2ACF               	goto	l4583
  5374  017D                     l4527:	
  5375                           
  5376                           ;updates.c: 145:                     setProps(0b00,0b00,0b10);
  5377  017D  01B0               	clrf	setProps@r
  5378  017E  3002               	movlw	2
  5379  017F  0021               	movlb	1	; select bank1
  5380  0180  00A0               	movwf	??_updateMovement^(0+128)
  5381  0181  0820               	movf	??_updateMovement^(0+128),w
  5382  0182  0020               	movlb	0	; select bank0
  5383  0183  00B1               	movwf	setProps@c
  5384  0184  3000               	movlw	0
  5385  0185  3187  27B3  3180   	fcall	_setProps
  5386  0188  2ACF               	goto	l4583
  5387  0189                     l4529:	
  5388                           
  5389                           ;updates.c: 148:                 if(s==2){
  5390  0189  3002               	movlw	2
  5391  018A  0020               	movlb	0	; select bank0
  5392  018B  063B               	xorwf	updateMovement@s,w
  5393  018C  1D03               	btfss	3,2
  5394  018D  298F               	goto	u4041
  5395  018E  2990               	goto	u4040
  5396  018F                     u4041:	
  5397  018F  29B1               	goto	l4539
  5398  0190                     u4040:	
  5399  0190                     l4531:	
  5400                           
  5401                           ;updates.c: 149:                     if(*rotate & 0x20 || *lift & 0x20)
  5402  0190  083D               	movf	updateMovement@rotate,w
  5403  0191  0086               	movwf	6
  5404  0192  0187               	clrf	7
  5405  0193  1A81               	btfsc	1,5
  5406  0194  2996               	goto	u4051
  5407  0195  2997               	goto	u4050
  5408  0196                     u4051:	
  5409  0196  299E               	goto	l4535
  5410  0197                     u4050:	
  5411  0197                     l4533:	
  5412  0197  083E               	movf	updateMovement@lift,w
  5413  0198  0086               	movwf	6
  5414  0199  0187               	clrf	7
  5415  019A  1E81               	btfss	1,5
  5416  019B  299D               	goto	u4061
  5417  019C  299E               	goto	u4060
  5418  019D                     u4061:	
  5419  019D  29A5               	goto	l4537
  5420  019E                     u4060:	
  5421  019E                     l4535:	
  5422                           
  5423                           ;updates.c: 150:                         --p->claw1.routine;
  5424  019E  083F               	movf	updateMovement@p,w
  5425  019F  3E03               	addlw	3
  5426  01A0  0086               	movwf	6
  5427  01A1  0187               	clrf	7
  5428  01A2  3001               	movlw	1
  5429  01A3  0281               	subwf	1,f
  5430  01A4  2ACF               	goto	l4583
  5431  01A5                     l4537:	
  5432                           
  5433                           ;updates.c: 152:                         setProps(0b11,0b11,0);
  5434  01A5  3003               	movlw	3
  5435  01A6  0021               	movlb	1	; select bank1
  5436  01A7  00A0               	movwf	??_updateMovement^(0+128)
  5437  01A8  0820               	movf	??_updateMovement^(0+128),w
  5438  01A9  0020               	movlb	0	; select bank0
  5439  01AA  00B0               	movwf	setProps@r
  5440  01AB  01B1               	clrf	setProps@c
  5441  01AC  3003               	movlw	3
  5442  01AD  3187  27B3  3180   	fcall	_setProps
  5443  01B0  2ACF               	goto	l4583
  5444  01B1                     l4539:	
  5445  01B1  033B               	decf	updateMovement@s,w
  5446  01B2  1D03               	btfss	3,2
  5447  01B3  29B5               	goto	u4071
  5448  01B4  29B6               	goto	u4070
  5449  01B5                     u4071:	
  5450  01B5  2ACF               	goto	l600
  5451  01B6                     u4070:	
  5452  01B6                     l4541:	
  5453                           
  5454                           ;updates.c: 154:                     if(*lift &0x20){
  5455  01B6  083E               	movf	updateMovement@lift,w
  5456  01B7  0086               	movwf	6
  5457  01B8  0187               	clrf	7
  5458  01B9  1E81               	btfss	1,5
  5459  01BA  29BC               	goto	u4081
  5460  01BB  29BD               	goto	u4080
  5461  01BC                     u4081:	
  5462  01BC  29CA               	goto	l4547
  5463  01BD                     u4080:	
  5464  01BD                     l4543:	
  5465                           
  5466                           ;updates.c: 155:                         --p->claw1.routine;
  5467  01BD  083F               	movf	updateMovement@p,w
  5468  01BE  3E03               	addlw	3
  5469  01BF  0086               	movwf	6
  5470  01C0  0187               	clrf	7
  5471  01C1  3001               	movlw	1
  5472  01C2  0281               	subwf	1,f
  5473  01C3                     l4545:	
  5474                           
  5475                           ;updates.c: 156:                         setProps(0,0,0);
  5476  01C3  01B0               	clrf	setProps@r
  5477  01C4  01B1               	clrf	setProps@c
  5478  01C5  3000               	movlw	0
  5479  01C6  3187  27B3  3180   	fcall	_setProps
  5480                           
  5481                           ;updates.c: 157:                     }else
  5482  01C9  2ACF               	goto	l4583
  5483  01CA                     l4547:	
  5484                           
  5485                           ;updates.c: 158:                         setProps(0b11,0,0);
  5486  01CA  01B0               	clrf	setProps@r
  5487  01CB  01B1               	clrf	setProps@c
  5488  01CC  3003               	movlw	3
  5489  01CD  3187  27B3  3180   	fcall	_setProps
  5490  01D0  2ACF               	goto	l4583
  5491  01D1                     l4549:	
  5492                           
  5493                           ;updates.c: 164:                         if(p->time-p->claw1.time1 > 300)
  5494  01D1  0020               	movlb	0	; select bank0
  5495  01D2  083F               	movf	updateMovement@p,w
  5496  01D3  3E04               	addlw	4
  5497  01D4  0086               	movwf	6
  5498  01D5  0187               	clrf	7
  5499  01D6  3F40               	moviw [0]fsr1
  5500  01D7  0021               	movlb	1	; select bank1
  5501  01D8  00A0               	movwf	??_updateMovement^(0+128)
  5502  01D9  3F41               	moviw [1]fsr1
  5503  01DA  00A1               	movwf	(??_updateMovement^(0+128)+1)
  5504  01DB  3F42               	moviw [2]fsr1
  5505  01DC  00A2               	movwf	(??_updateMovement^(0+128)+2)
  5506  01DD  3F43               	moviw [3]fsr1
  5507  01DE  00A3               	movwf	(??_updateMovement^(0+128)+3)
  5508  01DF  0020               	movlb	0	; select bank0
  5509  01E0  083F               	movf	updateMovement@p,w
  5510  01E1  3E0D               	addlw	13
  5511  01E2  0086               	movwf	6
  5512  01E3  0187               	clrf	7
  5513  01E4  3F40               	moviw [0]fsr1
  5514  01E5  0021               	movlb	1	; select bank1
  5515  01E6  00A4               	movwf	(??_updateMovement+4)^(0+128)
  5516  01E7  3F41               	moviw [1]fsr1
  5517  01E8  00A5               	movwf	((??_updateMovement+4)^(0+128)+1)
  5518  01E9  3F42               	moviw [2]fsr1
  5519  01EA  00A6               	movwf	((??_updateMovement+4)^(0+128)+2)
  5520  01EB  3F43               	moviw [3]fsr1
  5521  01EC  00A7               	movwf	((??_updateMovement+4)^(0+128)+3)
  5522  01ED  0820               	movf	??_updateMovement^(0+128),w
  5523  01EE  02A4               	subwf	(??_updateMovement+4)^(0+128),f
  5524  01EF  0821               	movf	(??_updateMovement+1)^(0+128),w
  5525  01F0  3BA5               	subwfb	((??_updateMovement+4)^(0+128)+1),f
  5526  01F1  0822               	movf	(??_updateMovement+2)^(0+128),w
  5527  01F2  3BA6               	subwfb	((??_updateMovement+4)^(0+128)+2),f
  5528  01F3  0823               	movf	(??_updateMovement+3)^(0+128),w
  5529  01F4  3BA7               	subwfb	((??_updateMovement+4)^(0+128)+3),f
  5530  01F5  0827               	movf	((??_updateMovement+4)^(0+128)+3),w
  5531  01F6  1D03               	btfss	3,2
  5532  01F7  2A03               	goto	u4090
  5533  01F8  0826               	movf	((??_updateMovement+4)^(0+128)+2),w
  5534  01F9  1D03               	btfss	3,2
  5535  01FA  2A03               	goto	u4090
  5536  01FB  302D               	movlw	45
  5537  01FC  0224               	subwf	(??_updateMovement+4)^(0+128),w
  5538  01FD  3001               	movlw	1
  5539  01FE  3B25               	subwfb	((??_updateMovement+4)^(0+128)+1),w
  5540  01FF  1C03               	btfss	3,0
  5541  0200  2A02               	goto	u4091
  5542  0201  2A03               	goto	u4090
  5543  0202                     u4091:	
  5544  0202  2A0B               	goto	l4553
  5545  0203                     u4090:	
  5546  0203                     l4551:	
  5547                           
  5548                           ;updates.c: 165:                             --p->claw1.routine;
  5549  0203  0020               	movlb	0	; select bank0
  5550  0204  083F               	movf	updateMovement@p,w
  5551  0205  3E03               	addlw	3
  5552  0206  0086               	movwf	6
  5553  0207  0187               	clrf	7
  5554  0208  3001               	movlw	1
  5555  0209  0281               	subwf	1,f
  5556  020A  2ACF               	goto	l4583
  5557  020B                     l4553:	
  5558                           
  5559                           ;updates.c: 167:                             setProps(0b11,0,0);
  5560  020B  0020               	movlb	0	; select bank0
  5561  020C  01B0               	clrf	setProps@r
  5562  020D  01B1               	clrf	setProps@c
  5563  020E  3003               	movlw	3
  5564  020F  3187  27B3  3180   	fcall	_setProps
  5565  0212  2ACF               	goto	l4583
  5566  0213                     l4555:	
  5567                           
  5568                           ;updates.c: 170:                         if(p->time-p->claw1.time1 > 600)
  5569  0213  0020               	movlb	0	; select bank0
  5570  0214  083F               	movf	updateMovement@p,w
  5571  0215  3E04               	addlw	4
  5572  0216  0086               	movwf	6
  5573  0217  0187               	clrf	7
  5574  0218  3F40               	moviw [0]fsr1
  5575  0219  0021               	movlb	1	; select bank1
  5576  021A  00A0               	movwf	??_updateMovement^(0+128)
  5577  021B  3F41               	moviw [1]fsr1
  5578  021C  00A1               	movwf	(??_updateMovement^(0+128)+1)
  5579  021D  3F42               	moviw [2]fsr1
  5580  021E  00A2               	movwf	(??_updateMovement^(0+128)+2)
  5581  021F  3F43               	moviw [3]fsr1
  5582  0220  00A3               	movwf	(??_updateMovement^(0+128)+3)
  5583  0221  0020               	movlb	0	; select bank0
  5584  0222  083F               	movf	updateMovement@p,w
  5585  0223  3E0D               	addlw	13
  5586  0224  0086               	movwf	6
  5587  0225  0187               	clrf	7
  5588  0226  3F40               	moviw [0]fsr1
  5589  0227  0021               	movlb	1	; select bank1
  5590  0228  00A4               	movwf	(??_updateMovement+4)^(0+128)
  5591  0229  3F41               	moviw [1]fsr1
  5592  022A  00A5               	movwf	((??_updateMovement+4)^(0+128)+1)
  5593  022B  3F42               	moviw [2]fsr1
  5594  022C  00A6               	movwf	((??_updateMovement+4)^(0+128)+2)
  5595  022D  3F43               	moviw [3]fsr1
  5596  022E  00A7               	movwf	((??_updateMovement+4)^(0+128)+3)
  5597  022F  0820               	movf	??_updateMovement^(0+128),w
  5598  0230  02A4               	subwf	(??_updateMovement+4)^(0+128),f
  5599  0231  0821               	movf	(??_updateMovement+1)^(0+128),w
  5600  0232  3BA5               	subwfb	((??_updateMovement+4)^(0+128)+1),f
  5601  0233  0822               	movf	(??_updateMovement+2)^(0+128),w
  5602  0234  3BA6               	subwfb	((??_updateMovement+4)^(0+128)+2),f
  5603  0235  0823               	movf	(??_updateMovement+3)^(0+128),w
  5604  0236  3BA7               	subwfb	((??_updateMovement+4)^(0+128)+3),f
  5605  0237  0827               	movf	((??_updateMovement+4)^(0+128)+3),w
  5606  0238  1D03               	btfss	3,2
  5607  0239  2A45               	goto	u4100
  5608  023A  0826               	movf	((??_updateMovement+4)^(0+128)+2),w
  5609  023B  1D03               	btfss	3,2
  5610  023C  2A45               	goto	u4100
  5611  023D  3059               	movlw	89
  5612  023E  0224               	subwf	(??_updateMovement+4)^(0+128),w
  5613  023F  3002               	movlw	2
  5614  0240  3B25               	subwfb	((??_updateMovement+4)^(0+128)+1),w
  5615  0241  1C03               	btfss	3,0
  5616  0242  2A44               	goto	u4101
  5617  0243  2A45               	goto	u4100
  5618  0244                     u4101:	
  5619  0244  2A4D               	goto	l4559
  5620  0245                     u4100:	
  5621  0245                     l4557:	
  5622                           
  5623                           ;updates.c: 171:                             --p->claw1.routine;
  5624  0245  0020               	movlb	0	; select bank0
  5625  0246  083F               	movf	updateMovement@p,w
  5626  0247  3E03               	addlw	3
  5627  0248  0086               	movwf	6
  5628  0249  0187               	clrf	7
  5629  024A  3001               	movlw	1
  5630  024B  0281               	subwf	1,f
  5631  024C  2ACF               	goto	l4583
  5632  024D                     l4559:	
  5633                           
  5634                           ;updates.c: 173:                             setProps(0b11,0b11,0);
  5635  024D  3003               	movlw	3
  5636  024E  00A0               	movwf	??_updateMovement^(0+128)
  5637  024F  0820               	movf	??_updateMovement^(0+128),w
  5638  0250  0020               	movlb	0	; select bank0
  5639  0251  00B0               	movwf	setProps@r
  5640  0252  01B1               	clrf	setProps@c
  5641  0253  3003               	movlw	3
  5642  0254  3187  27B3  3180   	fcall	_setProps
  5643  0257  2ACF               	goto	l4583
  5644  0258                     l4561:	
  5645                           
  5646                           ;updates.c: 176:                         if(*rotate & 0x20)
  5647  0258  0020               	movlb	0	; select bank0
  5648  0259  083D               	movf	updateMovement@rotate,w
  5649  025A  0086               	movwf	6
  5650  025B  0187               	clrf	7
  5651  025C  1E81               	btfss	1,5
  5652  025D  2A5F               	goto	u4111
  5653  025E  2A60               	goto	u4110
  5654  025F                     u4111:	
  5655  025F  2A67               	goto	l4565
  5656  0260                     u4110:	
  5657  0260                     l4563:	
  5658                           
  5659                           ;updates.c: 177:                             --p->claw1.routine;
  5660  0260  083F               	movf	updateMovement@p,w
  5661  0261  3E03               	addlw	3
  5662  0262  0086               	movwf	6
  5663  0263  0187               	clrf	7
  5664  0264  3001               	movlw	1
  5665  0265  0281               	subwf	1,f
  5666  0266  2ACF               	goto	l4583
  5667  0267                     l4565:	
  5668                           
  5669                           ;updates.c: 179:                             setProps(0,0b11,0);
  5670  0267  3003               	movlw	3
  5671  0268  0021               	movlb	1	; select bank1
  5672  0269  00A0               	movwf	??_updateMovement^(0+128)
  5673  026A  0820               	movf	??_updateMovement^(0+128),w
  5674  026B  0020               	movlb	0	; select bank0
  5675  026C  00B0               	movwf	setProps@r
  5676  026D  01B1               	clrf	setProps@c
  5677  026E  3000               	movlw	0
  5678  026F  3187  27B3  3180   	fcall	_setProps
  5679  0272  2ACF               	goto	l4583
  5680  0273                     l4567:	
  5681                           
  5682                           ;updates.c: 182:                         if(*lift & 0x20){
  5683  0273  0020               	movlb	0	; select bank0
  5684  0274  083E               	movf	updateMovement@lift,w
  5685  0275  0086               	movwf	6
  5686  0276  0187               	clrf	7
  5687  0277  1E81               	btfss	1,5
  5688  0278  2A7A               	goto	u4121
  5689  0279  2A7B               	goto	u4120
  5690  027A                     u4121:	
  5691  027A  2A88               	goto	l4573
  5692  027B                     u4120:	
  5693  027B                     l4569:	
  5694                           
  5695                           ;updates.c: 183:                             --p->claw1.routine;
  5696  027B  083F               	movf	updateMovement@p,w
  5697  027C  3E03               	addlw	3
  5698  027D  0086               	movwf	6
  5699  027E  0187               	clrf	7
  5700  027F  3001               	movlw	1
  5701  0280  0281               	subwf	1,f
  5702  0281                     l4571:	
  5703                           
  5704                           ;updates.c: 184:                             setProps(0,0,0);
  5705  0281  01B0               	clrf	setProps@r
  5706  0282  01B1               	clrf	setProps@c
  5707  0283  3000               	movlw	0
  5708  0284  3187  27B3  3180   	fcall	_setProps
  5709                           
  5710                           ;updates.c: 185:                         }else
  5711  0287  2ACF               	goto	l4583
  5712  0288                     l4573:	
  5713                           
  5714                           ;updates.c: 186:                             setProps(0b11,0,0);
  5715  0288  01B0               	clrf	setProps@r
  5716  0289  01B1               	clrf	setProps@c
  5717  028A  3003               	movlw	3
  5718  028B  3187  27B3  3180   	fcall	_setProps
  5719  028E  2ACF               	goto	l4583
  5720  028F                     l4577:	
  5721  028F  0020               	movlb	0	; select bank0
  5722  0290  083B               	movf	updateMovement@s,w
  5723  0291  0021               	movlb	1	; select bank1
  5724  0292  00A0               	movwf	??_updateMovement^(0+128)
  5725  0293  01A1               	clrf	(??_updateMovement^(0+128)+1)
  5726                           
  5727                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5728                           ; Switch size 1, requested type "simple"
  5729                           ; Number of cases is 1, Range of values is 0 to 0
  5730                           ; switch strategies available:
  5731                           ; Name         Instructions Cycles
  5732                           ; simple_byte            4     3 (average)
  5733                           ; direct_byte            8     6 (fixed)
  5734                           ; jumptable            260     6 (fixed)
  5735                           ;	Chosen strategy is simple_byte
  5736  0294  0821               	movf	(??_updateMovement+1)^(0+128),w
  5737  0295  3A00               	xorlw	0	; case 0
  5738  0296  1903               	skipnz
  5739  0297  2A99               	goto	l5095
  5740  0298  2ACF               	goto	l4583
  5741  0299                     l5095:	
  5742                           
  5743                           ; Switch size 1, requested type "simple"
  5744                           ; Number of cases is 4, Range of values is 1 to 4
  5745                           ; switch strategies available:
  5746                           ; Name         Instructions Cycles
  5747                           ; simple_byte           13     7 (average)
  5748                           ; direct_byte           17     9 (fixed)
  5749                           ; jumptable            263     9 (fixed)
  5750                           ;	Chosen strategy is simple_byte
  5751  0299  0820               	movf	??_updateMovement^(0+128),w
  5752  029A  3A01               	xorlw	1	; case 1
  5753  029B  1903               	skipnz
  5754  029C  2A73               	goto	l4567
  5755  029D  3A03               	xorlw	3	; case 2
  5756  029E  1903               	skipnz
  5757  029F  2A58               	goto	l4561
  5758  02A0  3A01               	xorlw	1	; case 3
  5759  02A1  1903               	skipnz
  5760  02A2  2A13               	goto	l4555
  5761  02A3  3A07               	xorlw	7	; case 4
  5762  02A4  1903               	skipnz
  5763  02A5  29D1               	goto	l4549
  5764  02A6  2ACF               	goto	l4583
  5765  02A7                     l4581:	
  5766  02A7  083F               	movf	updateMovement@p,w
  5767  02A8  3E03               	addlw	3
  5768  02A9  0086               	movwf	6
  5769  02AA  0187               	clrf	7
  5770  02AB  0801               	movf	1,w
  5771  02AC  0021               	movlb	1	; select bank1
  5772  02AD  00A0               	movwf	??_updateMovement^(0+128)
  5773  02AE  3004               	movlw	4
  5774  02AF                     u4135:	
  5775  02AF  36A0               	lsrf	??_updateMovement^(0+128),f
  5776  02B0  0B89               	decfsz	9,f
  5777  02B1  2AAF               	goto	u4135
  5778  02B2  0820               	movf	??_updateMovement^(0+128),w
  5779  02B3  390F               	andlw	15
  5780  02B4  00A1               	movwf	(??_updateMovement+1)^(0+128)
  5781  02B5  01A2               	clrf	((??_updateMovement+1)^(0+128)+1)
  5782                           
  5783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5784                           ; Switch size 1, requested type "simple"
  5785                           ; Number of cases is 1, Range of values is 0 to 0
  5786                           ; switch strategies available:
  5787                           ; Name         Instructions Cycles
  5788                           ; simple_byte            4     3 (average)
  5789                           ; direct_byte            8     6 (fixed)
  5790                           ; jumptable            260     6 (fixed)
  5791                           ;	Chosen strategy is simple_byte
  5792  02B6  0822               	movf	(??_updateMovement+2)^(0+128),w
  5793  02B7  3A00               	xorlw	0	; case 0
  5794  02B8  1903               	skipnz
  5795  02B9  2ABB               	goto	l5097
  5796  02BA  2ACF               	goto	l4583
  5797  02BB                     l5097:	
  5798                           
  5799                           ; Switch size 1, requested type "simple"
  5800                           ; Number of cases is 6, Range of values is 1 to 6
  5801                           ; switch strategies available:
  5802                           ; Name         Instructions Cycles
  5803                           ; simple_byte           19    10 (average)
  5804                           ; direct_byte           21     9 (fixed)
  5805                           ; jumptable            263     9 (fixed)
  5806                           ;	Chosen strategy is simple_byte
  5807  02BB  0821               	movf	(??_updateMovement+1)^(0+128),w
  5808  02BC  3A01               	xorlw	1	; case 1
  5809  02BD  1903               	skipnz
  5810  02BE  2845               	goto	l4471
  5811  02BF  3A03               	xorlw	3	; case 2
  5812  02C0  1903               	skipnz
  5813  02C1  292F               	goto	l4511
  5814  02C2  3A01               	xorlw	1	; case 3
  5815  02C3  1903               	skipnz
  5816  02C4  2947               	goto	l4513
  5817  02C5  3A07               	xorlw	7	; case 4
  5818  02C6  1903               	skipnz
  5819  02C7  2968               	goto	l4521
  5820  02C8  3A01               	xorlw	1	; case 5
  5821  02C9  1903               	skipnz
  5822  02CA  2989               	goto	l4529
  5823  02CB  3A03               	xorlw	3	; case 6
  5824  02CC  1903               	skipnz
  5825  02CD  2A8F               	goto	l4577
  5826  02CE  2ACF               	goto	l4583
  5827  02CF                     l600:	
  5828  02CF                     l4583:	
  5829                           
  5830                           ;updates.c: 192:     if(p->revolver.stat & 0x80){
  5831  02CF  0020               	movlb	0	; select bank0
  5832  02D0  083F               	movf	updateMovement@p,w
  5833  02D1  3E08               	addlw	8
  5834  02D2  0086               	movwf	6
  5835  02D3  0187               	clrf	7
  5836  02D4  1F81               	btfss	1,7
  5837  02D5  2AD7               	goto	u4141
  5838  02D6  2AD8               	goto	u4140
  5839  02D7                     u4141:	
  5840  02D7  2B7E               	goto	l4605
  5841  02D8                     u4140:	
  5842  02D8                     l4585:	
  5843                           
  5844                           ;updates.c: 194:         if(p->revolver.stat & 0xF){
  5845  02D8  083F               	movf	updateMovement@p,w
  5846  02D9  3E08               	addlw	8
  5847  02DA  0086               	movwf	6
  5848  02DB  0187               	clrf	7
  5849  02DC  0801               	movf	1,w
  5850  02DD  390F               	andlw	15
  5851  02DE  1903               	btfsc	3,2
  5852  02DF  2AE1               	goto	u4151
  5853  02E0  2AE2               	goto	u4150
  5854  02E1                     u4151:	
  5855  02E1  2B6C               	goto	l4601
  5856  02E2                     u4150:	
  5857  02E2                     l4587:	
  5858                           
  5859                           ;updates.c: 195:             if(p->revolver.stat&0x40)
  5860  02E2  083F               	movf	updateMovement@p,w
  5861  02E3  3E08               	addlw	8
  5862  02E4  0086               	movwf	6
  5863  02E5  0187               	clrf	7
  5864  02E6  1F01               	btfss	1,6
  5865  02E7  2AE9               	goto	u4161
  5866  02E8  2AEA               	goto	u4160
  5867  02E9                     u4161:	
  5868  02E9  2AF7               	goto	l4591
  5869  02EA                     u4160:	
  5870  02EA                     l4589:	
  5871                           
  5872                           ;updates.c: 196:                 setMotors(1,1,255);
  5873  02EA  01B6               	clrf	setMotors@dir
  5874  02EB  0AB6               	incf	setMotors@dir,f
  5875  02EC  30FF               	movlw	255
  5876  02ED  0021               	movlb	1	; select bank1
  5877  02EE  00A0               	movwf	??_updateMovement^(0+128)
  5878  02EF  0820               	movf	??_updateMovement^(0+128),w
  5879  02F0  0020               	movlb	0	; select bank0
  5880  02F1  00B7               	movwf	setMotors@v
  5881  02F2  3001               	movlw	1
  5882  02F3  3183  23F4  3180   	fcall	_setMotors
  5883  02F6  2B02               	goto	l4593
  5884  02F7                     l4591:	
  5885                           
  5886                           ;updates.c: 198:                 setMotors(1,0,255);
  5887  02F7  01B6               	clrf	setMotors@dir
  5888  02F8  30FF               	movlw	255
  5889  02F9  0021               	movlb	1	; select bank1
  5890  02FA  00A0               	movwf	??_updateMovement^(0+128)
  5891  02FB  0820               	movf	??_updateMovement^(0+128),w
  5892  02FC  0020               	movlb	0	; select bank0
  5893  02FD  00B7               	movwf	setMotors@v
  5894  02FE  3001               	movlw	1
  5895  02FF  3183  23F4  3180   	fcall	_setMotors
  5896  0302                     l4593:	
  5897                           
  5898                           ;updates.c: 199:             LATEbits.LATE2 = (p->revolver.stat&0x20)!=0;
  5899  0302  0020               	movlb	0	; select bank0
  5900  0303  083F               	movf	updateMovement@p,w
  5901  0304  3E08               	addlw	8
  5902  0305  0086               	movwf	6
  5903  0306  0187               	clrf	7
  5904  0307  1A81               	btfsc	1,5
  5905  0308  2B0A               	goto	u4171
  5906  0309  2B0D               	goto	u4170
  5907  030A                     u4171:	
  5908  030A  0020               	movlb	0	; select bank0
  5909  030B  151A               	bsf	26,2	;volatile
  5910  030C  2B0F               	goto	u4184
  5911  030D                     u4170:	
  5912  030D  0020               	movlb	0	; select bank0
  5913  030E  111A               	bcf	26,2	;volatile
  5914  030F                     u4184:	
  5915  030F                     l4595:	
  5916                           
  5917                           ;updates.c: 200:             if((p->time-p->revolver.time1 > 250)&&(p->revolver.stat&0x2
      +                          0)){
  5918  030F  083F               	movf	updateMovement@p,w
  5919  0310  3E09               	addlw	9
  5920  0311  0086               	movwf	6
  5921  0312  0187               	clrf	7
  5922  0313  3F40               	moviw [0]fsr1
  5923  0314  0021               	movlb	1	; select bank1
  5924  0315  00A0               	movwf	??_updateMovement^(0+128)
  5925  0316  3F41               	moviw [1]fsr1
  5926  0317  00A1               	movwf	(??_updateMovement^(0+128)+1)
  5927  0318  3F42               	moviw [2]fsr1
  5928  0319  00A2               	movwf	(??_updateMovement^(0+128)+2)
  5929  031A  3F43               	moviw [3]fsr1
  5930  031B  00A3               	movwf	(??_updateMovement^(0+128)+3)
  5931  031C  0020               	movlb	0	; select bank0
  5932  031D  083F               	movf	updateMovement@p,w
  5933  031E  3E0D               	addlw	13
  5934  031F  0086               	movwf	6
  5935  0320  0187               	clrf	7
  5936  0321  3F40               	moviw [0]fsr1
  5937  0322  0021               	movlb	1	; select bank1
  5938  0323  00A4               	movwf	(??_updateMovement+4)^(0+128)
  5939  0324  3F41               	moviw [1]fsr1
  5940  0325  00A5               	movwf	((??_updateMovement+4)^(0+128)+1)
  5941  0326  3F42               	moviw [2]fsr1
  5942  0327  00A6               	movwf	((??_updateMovement+4)^(0+128)+2)
  5943  0328  3F43               	moviw [3]fsr1
  5944  0329  00A7               	movwf	((??_updateMovement+4)^(0+128)+3)
  5945  032A  0820               	movf	??_updateMovement^(0+128),w
  5946  032B  02A4               	subwf	(??_updateMovement+4)^(0+128),f
  5947  032C  0821               	movf	(??_updateMovement+1)^(0+128),w
  5948  032D  3BA5               	subwfb	((??_updateMovement+4)^(0+128)+1),f
  5949  032E  0822               	movf	(??_updateMovement+2)^(0+128),w
  5950  032F  3BA6               	subwfb	((??_updateMovement+4)^(0+128)+2),f
  5951  0330  0823               	movf	(??_updateMovement+3)^(0+128),w
  5952  0331  3BA7               	subwfb	((??_updateMovement+4)^(0+128)+3),f
  5953  0332  0827               	movf	((??_updateMovement+4)^(0+128)+3),w
  5954  0333  1D03               	btfss	3,2
  5955  0334  2B41               	goto	u4190
  5956  0335  0826               	movf	((??_updateMovement+4)^(0+128)+2),w
  5957  0336  1D03               	btfss	3,2
  5958  0337  2B41               	goto	u4190
  5959  0338  0825               	movf	((??_updateMovement+4)^(0+128)+1),w
  5960  0339  1D03               	btfss	3,2
  5961  033A  2B41               	goto	u4190
  5962  033B  30FB               	movlw	251
  5963  033C  0224               	subwf	(??_updateMovement+4)^(0+128),w
  5964  033D  1C03               	btfss	3,0
  5965  033E  2B40               	goto	u4191
  5966  033F  2B41               	goto	u4190
  5967  0340                     u4191:	
  5968  0340  2B7E               	goto	l4605
  5969  0341                     u4190:	
  5970  0341                     l4597:	
  5971  0341  0020               	movlb	0	; select bank0
  5972  0342  083F               	movf	updateMovement@p,w
  5973  0343  3E08               	addlw	8
  5974  0344  0086               	movwf	6
  5975  0345  0187               	clrf	7
  5976  0346  1E81               	btfss	1,5
  5977  0347  2B49               	goto	u4201
  5978  0348  2B4A               	goto	u4200
  5979  0349                     u4201:	
  5980  0349  2B7E               	goto	l4605
  5981  034A                     u4200:	
  5982  034A                     l4599:	
  5983                           
  5984                           ;updates.c: 202:                 --p->revolver.stat;
  5985  034A  083F               	movf	updateMovement@p,w
  5986  034B  3E08               	addlw	8
  5987  034C  0086               	movwf	6
  5988  034D  0187               	clrf	7
  5989  034E  3001               	movlw	1
  5990  034F  0281               	subwf	1,f
  5991                           
  5992                           ;updates.c: 203:                 p->revolver.time1 = p->time;
  5993  0350  083F               	movf	updateMovement@p,w
  5994  0351  3E0D               	addlw	13
  5995  0352  0086               	movwf	6
  5996  0353  0187               	clrf	7
  5997  0354  3F40               	moviw [0]fsr1
  5998  0355  0021               	movlb	1	; select bank1
  5999  0356  00A0               	movwf	??_updateMovement^(0+128)
  6000  0357  3F41               	moviw [1]fsr1
  6001  0358  00A1               	movwf	(??_updateMovement^(0+128)+1)
  6002  0359  3F42               	moviw [2]fsr1
  6003  035A  00A2               	movwf	(??_updateMovement^(0+128)+2)
  6004  035B  3F43               	moviw [3]fsr1
  6005  035C  00A3               	movwf	(??_updateMovement^(0+128)+3)
  6006  035D  0020               	movlb	0	; select bank0
  6007  035E  083F               	movf	updateMovement@p,w
  6008  035F  3E09               	addlw	9
  6009  0360  0086               	movwf	6
  6010  0361  0187               	clrf	7
  6011  0362  0021               	movlb	1	; select bank1
  6012  0363  0820               	movf	??_updateMovement^(0+128),w
  6013  0364  3FC0               	movwi [0]fsr1
  6014  0365  0821               	movf	(??_updateMovement+1)^(0+128),w
  6015  0366  3FC1               	movwi [1]fsr1
  6016  0367  0822               	movf	(??_updateMovement+2)^(0+128),w
  6017  0368  3FC2               	movwi [2]fsr1
  6018  0369  0823               	movf	(??_updateMovement+3)^(0+128),w
  6019  036A  3FC3               	movwi [3]fsr1
  6020  036B  2B7E               	goto	l4605
  6021  036C                     l4601:	
  6022                           
  6023                           ;updates.c: 207:             p->revolver.stat &= 0x7F;
  6024  036C  307F               	movlw	127
  6025  036D  0021               	movlb	1	; select bank1
  6026  036E  00A0               	movwf	??_updateMovement^(0+128)
  6027  036F  0020               	movlb	0	; select bank0
  6028  0370  083F               	movf	updateMovement@p,w
  6029  0371  3E08               	addlw	8
  6030  0372  0086               	movwf	6
  6031  0373  0187               	clrf	7
  6032  0374  0021               	movlb	1	; select bank1
  6033  0375  0820               	movf	??_updateMovement^(0+128),w
  6034  0376  0581               	andwf	1,f
  6035  0377                     l4603:	
  6036                           
  6037                           ;updates.c: 208:             setMotors(1,0,0);
  6038  0377  0020               	movlb	0	; select bank0
  6039  0378  01B6               	clrf	setMotors@dir
  6040  0379  01B7               	clrf	setMotors@v
  6041  037A  3001               	movlw	1
  6042  037B  3183  23F4  3180   	fcall	_setMotors
  6043  037E                     l4605:	
  6044                           
  6045                           ;updates.c: 213:     if(((*clamp&0x40)&&(*clamp&0b00100000)) | (!(*clamp&0x40)&&(*clamp&
      +                          0b00010000)))
  6046  037E  0020               	movlb	0	; select bank0
  6047  037F  083C               	movf	updateMovement@clamp,w
  6048  0380  0086               	movwf	6
  6049  0381  0187               	clrf	7
  6050  0382  1F01               	btfss	1,6
  6051  0383  2B85               	goto	u4211
  6052  0384  2B86               	goto	u4210
  6053  0385                     u4211:	
  6054  0385  2B8D               	goto	l4609
  6055  0386                     u4210:	
  6056  0386                     l4607:	
  6057  0386  083C               	movf	updateMovement@clamp,w
  6058  0387  0086               	movwf	6
  6059  0388  0187               	clrf	7
  6060  0389  1A81               	btfsc	1,5
  6061  038A  2B8C               	goto	u4221
  6062  038B  2B8D               	goto	u4220
  6063  038C                     u4221:	
  6064  038C  2B9B               	goto	l4613
  6065  038D                     u4220:	
  6066  038D                     l4609:	
  6067  038D  083C               	movf	updateMovement@clamp,w
  6068  038E  0086               	movwf	6
  6069  038F  0187               	clrf	7
  6070  0390  1B01               	btfsc	1,6
  6071  0391  2B93               	goto	u4231
  6072  0392  2B94               	goto	u4230
  6073  0393                     u4231:	
  6074  0393  2BA5               	goto	l4615
  6075  0394                     u4230:	
  6076  0394                     l4611:	
  6077  0394  083C               	movf	updateMovement@clamp,w
  6078  0395  0086               	movwf	6
  6079  0396  0187               	clrf	7
  6080  0397  1E01               	btfss	1,4
  6081  0398  2B9A               	goto	u4241
  6082  0399  2B9B               	goto	u4240
  6083  039A                     u4241:	
  6084  039A  2BA5               	goto	l4615
  6085  039B                     u4240:	
  6086  039B                     l4613:	
  6087                           
  6088                           ;updates.c: 214:         *clamp &= 0b01111111;
  6089  039B  307F               	movlw	127
  6090  039C  0021               	movlb	1	; select bank1
  6091  039D  00A0               	movwf	??_updateMovement^(0+128)
  6092  039E  0020               	movlb	0	; select bank0
  6093  039F  083C               	movf	updateMovement@clamp,w
  6094  03A0  0086               	movwf	6
  6095  03A1  0187               	clrf	7
  6096  03A2  0021               	movlb	1	; select bank1
  6097  03A3  0820               	movf	??_updateMovement^(0+128),w
  6098  03A4  0581               	andwf	1,f
  6099  03A5                     l4615:	
  6100                           
  6101                           ;updates.c: 215:     if(((*rotate&0x40)&&(*rotate&0b00100000)) | (!(*rotate&0x40)&&(*rot
      +                          ate&0b00010000)))
  6102  03A5  0020               	movlb	0	; select bank0
  6103  03A6  083D               	movf	updateMovement@rotate,w
  6104  03A7  0086               	movwf	6
  6105  03A8  0187               	clrf	7
  6106  03A9  1F01               	btfss	1,6
  6107  03AA  2BAC               	goto	u4251
  6108  03AB  2BAD               	goto	u4250
  6109  03AC                     u4251:	
  6110  03AC  2BB4               	goto	l4619
  6111  03AD                     u4250:	
  6112  03AD                     l4617:	
  6113  03AD  083D               	movf	updateMovement@rotate,w
  6114  03AE  0086               	movwf	6
  6115  03AF  0187               	clrf	7
  6116  03B0  1A81               	btfsc	1,5
  6117  03B1  2BB3               	goto	u4261
  6118  03B2  2BB4               	goto	u4260
  6119  03B3                     u4261:	
  6120  03B3  2BC2               	goto	l4623
  6121  03B4                     u4260:	
  6122  03B4                     l4619:	
  6123  03B4  083D               	movf	updateMovement@rotate,w
  6124  03B5  0086               	movwf	6
  6125  03B6  0187               	clrf	7
  6126  03B7  1B01               	btfsc	1,6
  6127  03B8  2BBA               	goto	u4271
  6128  03B9  2BBB               	goto	u4270
  6129  03BA                     u4271:	
  6130  03BA  2BCC               	goto	l4625
  6131  03BB                     u4270:	
  6132  03BB                     l4621:	
  6133  03BB  083D               	movf	updateMovement@rotate,w
  6134  03BC  0086               	movwf	6
  6135  03BD  0187               	clrf	7
  6136  03BE  1E01               	btfss	1,4
  6137  03BF  2BC1               	goto	u4281
  6138  03C0  2BC2               	goto	u4280
  6139  03C1                     u4281:	
  6140  03C1  2BCC               	goto	l4625
  6141  03C2                     u4280:	
  6142  03C2                     l4623:	
  6143                           
  6144                           ;updates.c: 216:         *rotate &= 0b01111111;
  6145  03C2  307F               	movlw	127
  6146  03C3  0021               	movlb	1	; select bank1
  6147  03C4  00A0               	movwf	??_updateMovement^(0+128)
  6148  03C5  0020               	movlb	0	; select bank0
  6149  03C6  083D               	movf	updateMovement@rotate,w
  6150  03C7  0086               	movwf	6
  6151  03C8  0187               	clrf	7
  6152  03C9  0021               	movlb	1	; select bank1
  6153  03CA  0820               	movf	??_updateMovement^(0+128),w
  6154  03CB  0581               	andwf	1,f
  6155  03CC                     l4625:	
  6156                           
  6157                           ;updates.c: 217:     if(((*lift&0x40)&&(*lift&0b00100000)) | (!(*lift&0x40)&&(*lift&0b00
      +                          010000)))
  6158  03CC  0020               	movlb	0	; select bank0
  6159  03CD  083E               	movf	updateMovement@lift,w
  6160  03CE  0086               	movwf	6
  6161  03CF  0187               	clrf	7
  6162  03D0  1F01               	btfss	1,6
  6163  03D1  2BD3               	goto	u4291
  6164  03D2  2BD4               	goto	u4290
  6165  03D3                     u4291:	
  6166  03D3  2BDB               	goto	l4629
  6167  03D4                     u4290:	
  6168  03D4                     l4627:	
  6169  03D4  083E               	movf	updateMovement@lift,w
  6170  03D5  0086               	movwf	6
  6171  03D6  0187               	clrf	7
  6172  03D7  1A81               	btfsc	1,5
  6173  03D8  2BDA               	goto	u4301
  6174  03D9  2BDB               	goto	u4300
  6175  03DA                     u4301:	
  6176  03DA  2BE9               	goto	l4633
  6177  03DB                     u4300:	
  6178  03DB                     l4629:	
  6179  03DB  083E               	movf	updateMovement@lift,w
  6180  03DC  0086               	movwf	6
  6181  03DD  0187               	clrf	7
  6182  03DE  1B01               	btfsc	1,6
  6183  03DF  2BE1               	goto	u4311
  6184  03E0  2BE2               	goto	u4310
  6185  03E1                     u4311:	
  6186  03E1  2BF3               	goto	l670
  6187  03E2                     u4310:	
  6188  03E2                     l4631:	
  6189  03E2  083E               	movf	updateMovement@lift,w
  6190  03E3  0086               	movwf	6
  6191  03E4  0187               	clrf	7
  6192  03E5  1E01               	btfss	1,4
  6193  03E6  2BE8               	goto	u4321
  6194  03E7  2BE9               	goto	u4320
  6195  03E8                     u4321:	
  6196  03E8  2BF3               	goto	l670
  6197  03E9                     u4320:	
  6198  03E9                     l4633:	
  6199                           
  6200                           ;updates.c: 218:         *lift &= 0b01111111;
  6201  03E9  307F               	movlw	127
  6202  03EA  0021               	movlb	1	; select bank1
  6203  03EB  00A0               	movwf	??_updateMovement^(0+128)
  6204  03EC  0020               	movlb	0	; select bank0
  6205  03ED  083E               	movf	updateMovement@lift,w
  6206  03EE  0086               	movwf	6
  6207  03EF  0187               	clrf	7
  6208  03F0  0021               	movlb	1	; select bank1
  6209  03F1  0820               	movf	??_updateMovement^(0+128),w
  6210  03F2  0581               	andwf	1,f
  6211  03F3                     l670:	
  6212  03F3  0008               	return
  6213  03F4                     __end_of_updateMovement:	
  6214                           
  6215                           	psect	text4
  6216  07B3                     __ptext4:	
  6217 ;; *************** function _setProps *****************
  6218 ;; Defined at:
  6219 ;;		line 222 in file "updates.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  l               1    wreg     unsigned char 
  6222 ;;  r               1   16[BANK0 ] unsigned char 
  6223 ;;  c               1   17[BANK0 ] unsigned char 
  6224 ;; Auto vars:     Size  Location     Type
  6225 ;;  l               1   20[BANK0 ] unsigned char 
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  1    wreg      void 
  6228 ;; Registers used:
  6229 ;;		wreg, status,2, status,0
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6237 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;Total ram usage:        5 bytes
  6240 ;; Hardware stack levels used:    1
  6241 ;; Hardware stack levels required when called:    7
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		_updateMovement
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           
  6250                           ;psect for function _setProps
  6251  07B3                     _setProps:	
  6252                           
  6253                           ;incstack = 0
  6254                           ; Regs used in _setProps: [wreg+status,2+status,0]
  6255                           ;setProps@l stored from wreg
  6256  07B3  0020               	movlb	0	; select bank0
  6257  07B4  00B4               	movwf	setProps@l
  6258  07B5                     l4367:	
  6259                           
  6260                           ;updates.c: 223:     props.claw1.height |= l<<6;
  6261  07B5  0834               	movf	setProps@l,w
  6262  07B6  00B2               	movwf	??_setProps
  6263  07B7  3005               	movlw	5
  6264  07B8                     u3805:	
  6265  07B8  35B2               	lslf	??_setProps,f
  6266  07B9  3EFF               	addlw	-1
  6267  07BA  1D03               	skipz
  6268  07BB  2FB8               	goto	u3805
  6269  07BC  3532               	lslf	??_setProps,w
  6270  07BD  00B3               	movwf	??_setProps+1
  6271  07BE  0833               	movf	??_setProps+1,w
  6272  07BF  04DB               	iorwf	_props+2,f
  6273                           
  6274                           ;updates.c: 224:     props.claw1.height &= ~((~l)<<6);
  6275  07C0  0934               	comf	setProps@l,w
  6276  07C1  00B2               	movwf	??_setProps
  6277  07C2  3005               	movlw	5
  6278  07C3                     u3815:	
  6279  07C3  35B2               	lslf	??_setProps,f
  6280  07C4  3EFF               	addlw	-1
  6281  07C5  1D03               	skipz
  6282  07C6  2FC3               	goto	u3815
  6283  07C7  3532               	lslf	??_setProps,w
  6284  07C8  3AFF               	xorlw	255
  6285  07C9  00B3               	movwf	??_setProps+1
  6286  07CA  0833               	movf	??_setProps+1,w
  6287  07CB  05DB               	andwf	_props+2,f
  6288                           
  6289                           ;updates.c: 226:     props.claw1.orientation |= r<<6;
  6290  07CC  0830               	movf	setProps@r,w
  6291  07CD  00B2               	movwf	??_setProps
  6292  07CE  3005               	movlw	5
  6293  07CF                     u3825:	
  6294  07CF  35B2               	lslf	??_setProps,f
  6295  07D0  3EFF               	addlw	-1
  6296  07D1  1D03               	skipz
  6297  07D2  2FCF               	goto	u3825
  6298  07D3  3532               	lslf	??_setProps,w
  6299  07D4  00B3               	movwf	??_setProps+1
  6300  07D5  0833               	movf	??_setProps+1,w
  6301  07D6  04DA               	iorwf	_props+1,f
  6302                           
  6303                           ;updates.c: 227:     props.claw1.orientation &= ~((~r)<<6);
  6304  07D7  0930               	comf	setProps@r,w
  6305  07D8  00B2               	movwf	??_setProps
  6306  07D9  3005               	movlw	5
  6307  07DA                     u3835:	
  6308  07DA  35B2               	lslf	??_setProps,f
  6309  07DB  3EFF               	addlw	-1
  6310  07DC  1D03               	skipz
  6311  07DD  2FDA               	goto	u3835
  6312  07DE  3532               	lslf	??_setProps,w
  6313  07DF  3AFF               	xorlw	255
  6314  07E0  00B3               	movwf	??_setProps+1
  6315  07E1  0833               	movf	??_setProps+1,w
  6316  07E2  05DA               	andwf	_props+1,f
  6317                           
  6318                           ;updates.c: 229:     props.claw1.clamped |= c<<6;
  6319  07E3  0831               	movf	setProps@c,w
  6320  07E4  00B2               	movwf	??_setProps
  6321  07E5  3005               	movlw	5
  6322  07E6                     u3845:	
  6323  07E6  35B2               	lslf	??_setProps,f
  6324  07E7  3EFF               	addlw	-1
  6325  07E8  1D03               	skipz
  6326  07E9  2FE6               	goto	u3845
  6327  07EA  3532               	lslf	??_setProps,w
  6328  07EB  00B3               	movwf	??_setProps+1
  6329  07EC  0833               	movf	??_setProps+1,w
  6330  07ED  04D9               	iorwf	_props,f
  6331                           
  6332                           ;updates.c: 230:     props.claw1.clamped &= ~((~c)<<6);
  6333  07EE  0931               	comf	setProps@c,w
  6334  07EF  00B2               	movwf	??_setProps
  6335  07F0  3005               	movlw	5
  6336  07F1                     u3855:	
  6337  07F1  35B2               	lslf	??_setProps,f
  6338  07F2  3EFF               	addlw	-1
  6339  07F3  1D03               	skipz
  6340  07F4  2FF1               	goto	u3855
  6341  07F5  3532               	lslf	??_setProps,w
  6342  07F6  3AFF               	xorlw	255
  6343  07F7  00B3               	movwf	??_setProps+1
  6344  07F8  0833               	movf	??_setProps+1,w
  6345  07F9  05D9               	andwf	_props,f
  6346  07FA                     l673:	
  6347  07FA  0008               	return
  6348  07FB                     __end_of_setProps:	
  6349                           
  6350                           	psect	text5
  6351  0D93                     __ptext5:	
  6352 ;; *************** function _updateMotors *****************
  6353 ;; Defined at:
  6354 ;;		line 35 in file "updates.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  p               1    wreg     PTR struct properties
  6357 ;;		 -> props(17), 
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;  p               1   32[BANK0 ] PTR struct properties
  6360 ;;		 -> props(17), 
  6361 ;;  lift            1   31[BANK0 ] PTR unsigned char 
  6362 ;;		 -> props.claw1.height(1), 
  6363 ;;  rotate          1   30[BANK0 ] PTR unsigned char 
  6364 ;;		 -> props.claw1.orientation(1), 
  6365 ;;  clamp           1   29[BANK0 ] PTR unsigned char 
  6366 ;;		 -> props.claw1.clamped(1), 
  6367 ;; Return value:  Size  Location     Type
  6368 ;;                  1    wreg      void 
  6369 ;; Registers used:
  6370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6371 ;; Tracked objects:
  6372 ;;		On entry : 0/0
  6373 ;;		On exit  : 0/0
  6374 ;;		Unchanged: 0/0
  6375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6377 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6378 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6379 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6380 ;;Total ram usage:        6 bytes
  6381 ;; Hardware stack levels used:    1
  6382 ;; Hardware stack levels required when called:    9
  6383 ;; This function calls:
  6384 ;;		_setMotors
  6385 ;; This function is called by:
  6386 ;;		_updateSys
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           
  6391                           ;psect for function _updateMotors
  6392  0D93                     _updateMotors:	
  6393                           
  6394                           ;incstack = 0
  6395                           ; Regs used in _updateMotors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6396                           ;updateMotors@p stored from wreg
  6397  0D93  0020               	movlb	0	; select bank0
  6398  0D94  00C0               	movwf	updateMotors@p
  6399  0D95                     l4647:	
  6400                           
  6401                           ;updates.c: 36:     unsigned char *clamp = &(p->claw1.clamped);
  6402  0D95  0840               	movf	updateMotors@p,w
  6403  0D96  00BB               	movwf	??_updateMotors
  6404  0D97  083B               	movf	??_updateMotors,w
  6405  0D98  00BD               	movwf	updateMotors@clamp
  6406  0D99                     l4649:	
  6407                           
  6408                           ;updates.c: 37:     unsigned char *rotate = &(p->claw1.orientation);
  6409  0D99  0840               	movf	updateMotors@p,w
  6410  0D9A  3E01               	addlw	1
  6411  0D9B  00BB               	movwf	??_updateMotors
  6412  0D9C  083B               	movf	??_updateMotors,w
  6413  0D9D  00BE               	movwf	updateMotors@rotate
  6414  0D9E                     l4651:	
  6415                           
  6416                           ;updates.c: 38:     unsigned char *lift = &(p->claw1.height);
  6417  0D9E  0840               	movf	updateMotors@p,w
  6418  0D9F  3E02               	addlw	2
  6419  0DA0  00BB               	movwf	??_updateMotors
  6420  0DA1  083B               	movf	??_updateMotors,w
  6421  0DA2  00BF               	movwf	updateMotors@lift
  6422  0DA3                     l4653:	
  6423                           
  6424                           ;updates.c: 39:     if(!(*clamp&0x8)){
  6425  0DA3  083D               	movf	updateMotors@clamp,w
  6426  0DA4  0086               	movwf	6
  6427  0DA5  0187               	clrf	7
  6428  0DA6  1981               	btfsc	1,3
  6429  0DA7  2DA9               	goto	u4331
  6430  0DA8  2DAA               	goto	u4330
  6431  0DA9                     u4331:	
  6432  0DA9  2DCC               	goto	l4661
  6433  0DAA                     u4330:	
  6434  0DAA                     l4655:	
  6435                           
  6436                           ;updates.c: 40:         if(*clamp & 0b10000000)
  6437  0DAA  083D               	movf	updateMotors@clamp,w
  6438  0DAB  0086               	movwf	6
  6439  0DAC  0187               	clrf	7
  6440  0DAD  1F81               	btfss	1,7
  6441  0DAE  2DB0               	goto	u4341
  6442  0DAF  2DB1               	goto	u4340
  6443  0DB0                     u4341:	
  6444  0DB0  2DC6               	goto	l4659
  6445  0DB1                     u4340:	
  6446  0DB1                     l4657:	
  6447                           
  6448                           ;updates.c: 41:             setMotors(4,(*clamp&0b01000000) != 0,64);
  6449  0DB1  083D               	movf	updateMotors@clamp,w
  6450  0DB2  0086               	movwf	6
  6451  0DB3  0187               	clrf	7
  6452  0DB4  1B01               	btfsc	1,6
  6453  0DB5  2DB7               	goto	u4351
  6454  0DB6  2DB9               	goto	u4350
  6455  0DB7                     u4351:	
  6456  0DB7  3001               	movlw	1
  6457  0DB8  2DBA               	goto	u4360
  6458  0DB9                     u4350:	
  6459  0DB9  3000               	movlw	0
  6460  0DBA                     u4360:	
  6461  0DBA  00BB               	movwf	??_updateMotors
  6462  0DBB  083B               	movf	??_updateMotors,w
  6463  0DBC  00B6               	movwf	setMotors@dir
  6464  0DBD  3040               	movlw	64
  6465  0DBE  00BC               	movwf	??_updateMotors+1
  6466  0DBF  083C               	movf	??_updateMotors+1,w
  6467  0DC0  00B7               	movwf	setMotors@v
  6468  0DC1  3004               	movlw	4
  6469  0DC2  3183  23F4  318D   	fcall	_setMotors
  6470  0DC5  2DCC               	goto	l4661
  6471  0DC6                     l4659:	
  6472  0DC6  01B6               	clrf	setMotors@dir
  6473  0DC7  01B7               	clrf	setMotors@v
  6474  0DC8  3004               	movlw	4
  6475  0DC9  3183  23F4  318D   	fcall	_setMotors
  6476  0DCC                     l4661:	
  6477                           
  6478                           ;updates.c: 44:     if(!(*rotate&0x8)){
  6479  0DCC  0020               	movlb	0	; select bank0
  6480  0DCD  083E               	movf	updateMotors@rotate,w
  6481  0DCE  0086               	movwf	6
  6482  0DCF  0187               	clrf	7
  6483  0DD0  1981               	btfsc	1,3
  6484  0DD1  2DD3               	goto	u4371
  6485  0DD2  2DD4               	goto	u4370
  6486  0DD3                     u4371:	
  6487  0DD3  2DF6               	goto	l4669
  6488  0DD4                     u4370:	
  6489  0DD4                     l4663:	
  6490                           
  6491                           ;updates.c: 45:         if(*rotate & 0b10000000)
  6492  0DD4  083E               	movf	updateMotors@rotate,w
  6493  0DD5  0086               	movwf	6
  6494  0DD6  0187               	clrf	7
  6495  0DD7  1F81               	btfss	1,7
  6496  0DD8  2DDA               	goto	u4381
  6497  0DD9  2DDB               	goto	u4380
  6498  0DDA                     u4381:	
  6499  0DDA  2DF0               	goto	l4667
  6500  0DDB                     u4380:	
  6501  0DDB                     l4665:	
  6502                           
  6503                           ;updates.c: 46:             setMotors(3,(*rotate&0b01000000) != 0,64);
  6504  0DDB  083E               	movf	updateMotors@rotate,w
  6505  0DDC  0086               	movwf	6
  6506  0DDD  0187               	clrf	7
  6507  0DDE  1B01               	btfsc	1,6
  6508  0DDF  2DE1               	goto	u4391
  6509  0DE0  2DE3               	goto	u4390
  6510  0DE1                     u4391:	
  6511  0DE1  3001               	movlw	1
  6512  0DE2  2DE4               	goto	u4400
  6513  0DE3                     u4390:	
  6514  0DE3  3000               	movlw	0
  6515  0DE4                     u4400:	
  6516  0DE4  00BB               	movwf	??_updateMotors
  6517  0DE5  083B               	movf	??_updateMotors,w
  6518  0DE6  00B6               	movwf	setMotors@dir
  6519  0DE7  3040               	movlw	64
  6520  0DE8  00BC               	movwf	??_updateMotors+1
  6521  0DE9  083C               	movf	??_updateMotors+1,w
  6522  0DEA  00B7               	movwf	setMotors@v
  6523  0DEB  3003               	movlw	3
  6524  0DEC  3183  23F4  318D   	fcall	_setMotors
  6525  0DEF  2DF6               	goto	l4669
  6526  0DF0                     l4667:	
  6527  0DF0  01B6               	clrf	setMotors@dir
  6528  0DF1  01B7               	clrf	setMotors@v
  6529  0DF2  3003               	movlw	3
  6530  0DF3  3183  23F4  318D   	fcall	_setMotors
  6531  0DF6                     l4669:	
  6532                           
  6533                           ;updates.c: 49:     if(!(*lift&0x8)){
  6534  0DF6  0020               	movlb	0	; select bank0
  6535  0DF7  083F               	movf	updateMotors@lift,w
  6536  0DF8  0086               	movwf	6
  6537  0DF9  0187               	clrf	7
  6538  0DFA  1981               	btfsc	1,3
  6539  0DFB  2DFD               	goto	u4411
  6540  0DFC  2DFE               	goto	u4410
  6541  0DFD                     u4411:	
  6542  0DFD  2E20               	goto	l592
  6543  0DFE                     u4410:	
  6544  0DFE                     l4671:	
  6545                           
  6546                           ;updates.c: 50:         if(*lift & 0b10000000)
  6547  0DFE  083F               	movf	updateMotors@lift,w
  6548  0DFF  0086               	movwf	6
  6549  0E00  0187               	clrf	7
  6550  0E01  1F81               	btfss	1,7
  6551  0E02  2E04               	goto	u4421
  6552  0E03  2E05               	goto	u4420
  6553  0E04                     u4421:	
  6554  0E04  2E1A               	goto	l4675
  6555  0E05                     u4420:	
  6556  0E05                     l4673:	
  6557                           
  6558                           ;updates.c: 51:             setMotors(2,(*lift&0b01000000) != 0,64);
  6559  0E05  083F               	movf	updateMotors@lift,w
  6560  0E06  0086               	movwf	6
  6561  0E07  0187               	clrf	7
  6562  0E08  1B01               	btfsc	1,6
  6563  0E09  2E0B               	goto	u4431
  6564  0E0A  2E0D               	goto	u4430
  6565  0E0B                     u4431:	
  6566  0E0B  3001               	movlw	1
  6567  0E0C  2E0E               	goto	u4440
  6568  0E0D                     u4430:	
  6569  0E0D  3000               	movlw	0
  6570  0E0E                     u4440:	
  6571  0E0E  00BB               	movwf	??_updateMotors
  6572  0E0F  083B               	movf	??_updateMotors,w
  6573  0E10  00B6               	movwf	setMotors@dir
  6574  0E11  3040               	movlw	64
  6575  0E12  00BC               	movwf	??_updateMotors+1
  6576  0E13  083C               	movf	??_updateMotors+1,w
  6577  0E14  00B7               	movwf	setMotors@v
  6578  0E15  3002               	movlw	2
  6579  0E16  3183  23F4  318D   	fcall	_setMotors
  6580  0E19  2E20               	goto	l592
  6581  0E1A                     l4675:	
  6582  0E1A  01B6               	clrf	setMotors@dir
  6583  0E1B  01B7               	clrf	setMotors@v
  6584  0E1C  3002               	movlw	2
  6585  0E1D  3183  23F4  318D   	fcall	_setMotors
  6586  0E20                     l592:	
  6587  0E20  0008               	return
  6588  0E21                     __end_of_updateMotors:	
  6589                           
  6590                           	psect	text6
  6591  03F4                     __ptext6:	
  6592 ;; *************** function _setMotors *****************
  6593 ;; Defined at:
  6594 ;;		line 122 in file "settings.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  motor           1    wreg     unsigned char 
  6597 ;;  dir             1   22[BANK0 ] unsigned char 
  6598 ;;  v               1   23[BANK0 ] unsigned char 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  motor           1   26[BANK0 ] unsigned char 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  1    wreg      void 
  6603 ;; Registers used:
  6604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6610 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6612 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;Total ram usage:        5 bytes
  6615 ;; Hardware stack levels used:    1
  6616 ;; Hardware stack levels required when called:    8
  6617 ;; This function calls:
  6618 ;;		___bmul
  6619 ;;		_setPWM
  6620 ;; This function is called by:
  6621 ;;		_updateMotors
  6622 ;;		_updateMovement
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           
  6627                           ;psect for function _setMotors
  6628  03F4                     _setMotors:	
  6629                           
  6630                           ;incstack = 0
  6631                           ; Regs used in _setMotors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6632                           ;setMotors@motor stored from wreg
  6633  03F4  0020               	movlb	0	; select bank0
  6634  03F5  00BA               	movwf	setMotors@motor
  6635  03F6                     l4279:	
  6636                           
  6637                           ;settings.c: 123:     dir = dir!=0;
  6638  03F6  0836               	movf	setMotors@dir,w
  6639  03F7  1D03               	btfss	3,2
  6640  03F8  2BFA               	goto	u3521
  6641  03F9  2BFC               	goto	u3520
  6642  03FA                     u3521:	
  6643  03FA  3001               	movlw	1
  6644  03FB  2BFD               	goto	u3530
  6645  03FC                     u3520:	
  6646  03FC  3000               	movlw	0
  6647  03FD                     u3530:	
  6648  03FD  00B8               	movwf	??_setMotors
  6649  03FE  0838               	movf	??_setMotors,w
  6650  03FF  00B6               	movwf	setMotors@dir
  6651  0400                     l4281:	
  6652                           
  6653                           ;settings.c: 124:     if((motorDirArr[motor] != dir) || (motorPWMArr[motor] != v)){
  6654  0400  083A               	movf	setMotors@motor,w
  6655  0401  3E4F               	addlw	(low (_motorDirArr| 0))& (0+255)
  6656  0402  0086               	movwf	6
  6657  0403  0187               	clrf	7
  6658  0404  0801               	movf	1,w
  6659  0405  0636               	xorwf	setMotors@dir,w
  6660  0406  1D03               	skipz
  6661  0407  2C09               	goto	u3541
  6662  0408  2C0A               	goto	u3540
  6663  0409                     u3541:	
  6664  0409  2C14               	goto	l4285
  6665  040A                     u3540:	
  6666  040A                     l4283:	
  6667  040A  083A               	movf	setMotors@motor,w
  6668  040B  3E4B               	addlw	(low (_motorPWMArr| 0))& (0+255)
  6669  040C  0086               	movwf	6
  6670  040D  0187               	clrf	7
  6671  040E  0801               	movf	1,w
  6672  040F  0637               	xorwf	setMotors@v,w
  6673  0410  1903               	skipnz
  6674  0411  2C13               	goto	u3551
  6675  0412  2C14               	goto	u3550
  6676  0413                     u3551:	
  6677  0413  2D66               	goto	l505
  6678  0414                     u3550:	
  6679  0414                     l4285:	
  6680                           
  6681                           ;settings.c: 125:         motorDirArr[motor] = dir;
  6682  0414  0836               	movf	setMotors@dir,w
  6683  0415  00B8               	movwf	??_setMotors
  6684  0416  083A               	movf	setMotors@motor,w
  6685  0417  3E4F               	addlw	(low (_motorDirArr| 0))& (0+255)
  6686  0418  0086               	movwf	6
  6687  0419  0187               	clrf	7
  6688  041A  0838               	movf	??_setMotors,w
  6689  041B  0081               	movwf	1
  6690                           
  6691                           ;settings.c: 126:         motorPWMArr[motor] = v;
  6692  041C  0837               	movf	setMotors@v,w
  6693  041D  00B8               	movwf	??_setMotors
  6694  041E  083A               	movf	setMotors@motor,w
  6695  041F  3E4B               	addlw	(low (_motorPWMArr| 0))& (0+255)
  6696  0420  0086               	movwf	6
  6697  0421  0187               	clrf	7
  6698  0422  0838               	movf	??_setMotors,w
  6699  0423  0081               	movwf	1
  6700                           
  6701                           ;settings.c: 127:         switch(motor){
  6702  0424  2D50               	goto	l4361
  6703  0425                     l4287:	
  6704                           
  6705                           ;settings.c: 129:                 TRISC |= 0b01010101;
  6706  0425  3055               	movlw	85
  6707  0426  00B8               	movwf	??_setMotors
  6708  0427  0838               	movf	??_setMotors,w
  6709  0428  0493               	iorwf	19,f	;volatile
  6710  0429                     l4289:	
  6711                           
  6712                           ;settings.c: 130:                 RC6PPS = 9*(!dir);
  6713  0429  3009               	movlw	9
  6714  042A  00B8               	movwf	??_setMotors
  6715  042B  0838               	movf	??_setMotors,w
  6716  042C  00B0               	movwf	___bmul@multiplicand
  6717  042D  0836               	movf	setMotors@dir,w
  6718  042E  1903               	btfsc	3,2
  6719  042F  2C31               	goto	u3561
  6720  0430  2C33               	goto	u3560
  6721  0431                     u3561:	
  6722  0431  3001               	movlw	1
  6723  0432  2C34               	goto	u3570
  6724  0433                     u3560:	
  6725  0433  3000               	movlw	0
  6726  0434                     u3570:	
  6727  0434  318A  2236  3183   	fcall	___bmul
  6728  0437  003E               	movlb	30	; select bank30
  6729  0438  00A6               	movwf	38	;volatile
  6730  0439                     l4291:	
  6731                           
  6732                           ;settings.c: 131:                 RC2PPS = 0;
  6733  0439  01A2               	clrf	34	;volatile
  6734  043A                     l4293:	
  6735                           
  6736                           ;settings.c: 132:                 RC4PPS = 9*dir;
  6737  043A  3009               	movlw	9
  6738  043B  0020               	movlb	0	; select bank0
  6739  043C  00B8               	movwf	??_setMotors
  6740  043D  0838               	movf	??_setMotors,w
  6741  043E  00B0               	movwf	___bmul@multiplicand
  6742  043F  0836               	movf	setMotors@dir,w
  6743  0440  318A  2236  3183   	fcall	___bmul
  6744  0443  003E               	movlb	30	; select bank30
  6745  0444  00A4               	movwf	36	;volatile
  6746  0445                     l4295:	
  6747                           
  6748                           ;settings.c: 133:                 RC0PPS = 0;
  6749  0445  01A0               	clrf	32	;volatile
  6750                           
  6751                           ;settings.c: 134:                 LATCbits.LATC6 = !dir;
  6752  0446  0020               	movlb	0	; select bank0
  6753  0447  0836               	movf	setMotors@dir,w
  6754  0448  1903               	btfsc	3,2
  6755  0449  2C4B               	goto	u3581
  6756  044A  2C4E               	goto	u3580
  6757  044B                     u3581:	
  6758  044B  0020               	movlb	0	; select bank0
  6759  044C  1718               	bsf	24,6	;volatile
  6760  044D  2C50               	goto	u3594
  6761  044E                     u3580:	
  6762  044E  0020               	movlb	0	; select bank0
  6763  044F  1318               	bcf	24,6	;volatile
  6764  0450                     u3594:	
  6765  0450                     l4297:	
  6766                           
  6767                           ;settings.c: 135:                 LATCbits.LATC2 = dir;
  6768  0450  0C36               	rrf	setMotors@dir,w
  6769  0451  1C03               	skipc
  6770  0452  1118               	bcf	24,2	;volatile
  6771  0453  1803               	skipnc
  6772  0454  1518               	bsf	24,2	;volatile
  6773  0455                     l4299:	
  6774                           
  6775                           ;settings.c: 136:                 LATCbits.LATC4 = dir;
  6776  0455  0C36               	rrf	setMotors@dir,w
  6777  0456  1C03               	skipc
  6778  0457  1218               	bcf	24,4	;volatile
  6779  0458  1803               	skipnc
  6780  0459  1618               	bsf	24,4	;volatile
  6781                           
  6782                           ;settings.c: 137:                 LATCbits.LATC0 = !dir;
  6783  045A  0836               	movf	setMotors@dir,w
  6784  045B  1903               	btfsc	3,2
  6785  045C  2C5E               	goto	u3601
  6786  045D  2C61               	goto	u3600
  6787  045E                     u3601:	
  6788  045E  0020               	movlb	0	; select bank0
  6789  045F  1418               	bsf	24,0	;volatile
  6790  0460  2C63               	goto	u3614
  6791  0461                     u3600:	
  6792  0461  0020               	movlb	0	; select bank0
  6793  0462  1018               	bcf	24,0	;volatile
  6794  0463                     u3614:	
  6795  0463                     l4301:	
  6796                           
  6797                           ;settings.c: 138:                 setPWM(1,v);
  6798  0463  0837               	movf	setMotors@v,w
  6799  0464  00B8               	movwf	??_setMotors
  6800  0465  0838               	movf	??_setMotors,w
  6801  0466  00B0               	movwf	setPWM@pwm
  6802  0467  3001               	movlw	1
  6803  0468  318B  23E9  3183   	fcall	_setPWM
  6804  046B                     l4303:	
  6805                           
  6806                           ;settings.c: 139:                 TRISC &= 0b10101010;
  6807  046B  30AA               	movlw	170
  6808  046C  0020               	movlb	0	; select bank0
  6809  046D  00B8               	movwf	??_setMotors
  6810  046E  0838               	movf	??_setMotors,w
  6811  046F  0593               	andwf	19,f	;volatile
  6812                           
  6813                           ;settings.c: 140:                 break;
  6814  0470  2D66               	goto	l505
  6815  0471                     l4305:	
  6816                           
  6817                           ;settings.c: 142:                 TRISC |= 0b10101010;
  6818  0471  30AA               	movlw	170
  6819  0472  00B8               	movwf	??_setMotors
  6820  0473  0838               	movf	??_setMotors,w
  6821  0474  0493               	iorwf	19,f	;volatile
  6822  0475                     l4307:	
  6823                           
  6824                           ;settings.c: 143:                 RC7PPS = 10*(!dir);
  6825  0475  300A               	movlw	10
  6826  0476  00B8               	movwf	??_setMotors
  6827  0477  0838               	movf	??_setMotors,w
  6828  0478  00B0               	movwf	___bmul@multiplicand
  6829  0479  0836               	movf	setMotors@dir,w
  6830  047A  1903               	btfsc	3,2
  6831  047B  2C7D               	goto	u3621
  6832  047C  2C7F               	goto	u3620
  6833  047D                     u3621:	
  6834  047D  3001               	movlw	1
  6835  047E  2C80               	goto	u3630
  6836  047F                     u3620:	
  6837  047F  3000               	movlw	0
  6838  0480                     u3630:	
  6839  0480  318A  2236  3183   	fcall	___bmul
  6840  0483  003E               	movlb	30	; select bank30
  6841  0484  00A7               	movwf	39	;volatile
  6842  0485                     l4309:	
  6843                           
  6844                           ;settings.c: 144:                 RC3PPS = 0;
  6845  0485  01A3               	clrf	35	;volatile
  6846  0486                     l4311:	
  6847                           
  6848                           ;settings.c: 145:                 RC5PPS = 10*dir;
  6849  0486  300A               	movlw	10
  6850  0487  0020               	movlb	0	; select bank0
  6851  0488  00B8               	movwf	??_setMotors
  6852  0489  0838               	movf	??_setMotors,w
  6853  048A  00B0               	movwf	___bmul@multiplicand
  6854  048B  0836               	movf	setMotors@dir,w
  6855  048C  318A  2236  3183   	fcall	___bmul
  6856  048F  003E               	movlb	30	; select bank30
  6857  0490  00A5               	movwf	37	;volatile
  6858  0491                     l4313:	
  6859                           
  6860                           ;settings.c: 146:                 RC1PPS = 0;
  6861  0491  01A1               	clrf	33	;volatile
  6862                           
  6863                           ;settings.c: 147:                 LATCbits.LATC7 = !dir;
  6864  0492  0020               	movlb	0	; select bank0
  6865  0493  0836               	movf	setMotors@dir,w
  6866  0494  1903               	btfsc	3,2
  6867  0495  2C97               	goto	u3641
  6868  0496  2C9A               	goto	u3640
  6869  0497                     u3641:	
  6870  0497  0020               	movlb	0	; select bank0
  6871  0498  1798               	bsf	24,7	;volatile
  6872  0499  2C9C               	goto	u3654
  6873  049A                     u3640:	
  6874  049A  0020               	movlb	0	; select bank0
  6875  049B  1398               	bcf	24,7	;volatile
  6876  049C                     u3654:	
  6877  049C                     l4315:	
  6878                           
  6879                           ;settings.c: 148:                 LATCbits.LATC3 = dir;
  6880  049C  0C36               	rrf	setMotors@dir,w
  6881  049D  1C03               	skipc
  6882  049E  1198               	bcf	24,3	;volatile
  6883  049F  1803               	skipnc
  6884  04A0  1598               	bsf	24,3	;volatile
  6885  04A1                     l4317:	
  6886                           
  6887                           ;settings.c: 149:                 LATCbits.LATC5 = dir;
  6888  04A1  0C36               	rrf	setMotors@dir,w
  6889  04A2  1C03               	skipc
  6890  04A3  1298               	bcf	24,5	;volatile
  6891  04A4  1803               	skipnc
  6892  04A5  1698               	bsf	24,5	;volatile
  6893                           
  6894                           ;settings.c: 150:                 LATCbits.LATC1 = !dir;
  6895  04A6  0836               	movf	setMotors@dir,w
  6896  04A7  1903               	btfsc	3,2
  6897  04A8  2CAA               	goto	u3661
  6898  04A9  2CAD               	goto	u3660
  6899  04AA                     u3661:	
  6900  04AA  0020               	movlb	0	; select bank0
  6901  04AB  1498               	bsf	24,1	;volatile
  6902  04AC  2CAF               	goto	u3674
  6903  04AD                     u3660:	
  6904  04AD  0020               	movlb	0	; select bank0
  6905  04AE  1098               	bcf	24,1	;volatile
  6906  04AF                     u3674:	
  6907  04AF                     l4319:	
  6908                           
  6909                           ;settings.c: 151:                 setPWM(2,v);
  6910  04AF  0837               	movf	setMotors@v,w
  6911  04B0  00B8               	movwf	??_setMotors
  6912  04B1  0838               	movf	??_setMotors,w
  6913  04B2  00B0               	movwf	setPWM@pwm
  6914  04B3  3002               	movlw	2
  6915  04B4  318B  23E9  3183   	fcall	_setPWM
  6916  04B7                     l4321:	
  6917                           
  6918                           ;settings.c: 152:                 TRISC &= 0b01010101;
  6919  04B7  3055               	movlw	85
  6920  04B8  0020               	movlb	0	; select bank0
  6921  04B9  00B8               	movwf	??_setMotors
  6922  04BA  0838               	movf	??_setMotors,w
  6923  04BB  0593               	andwf	19,f	;volatile
  6924                           
  6925                           ;settings.c: 153:                 break;
  6926  04BC  2D66               	goto	l505
  6927  04BD                     l4323:	
  6928                           
  6929                           ;settings.c: 155:                 TRISD |= 0b01010101;
  6930  04BD  3055               	movlw	85
  6931  04BE  00B8               	movwf	??_setMotors
  6932  04BF  0838               	movf	??_setMotors,w
  6933  04C0  0494               	iorwf	20,f	;volatile
  6934  04C1                     l4325:	
  6935                           
  6936                           ;settings.c: 156:                 RD4PPS = 11*(!dir);
  6937  04C1  300B               	movlw	11
  6938  04C2  00B8               	movwf	??_setMotors
  6939  04C3  0838               	movf	??_setMotors,w
  6940  04C4  00B0               	movwf	___bmul@multiplicand
  6941  04C5  0836               	movf	setMotors@dir,w
  6942  04C6  1903               	btfsc	3,2
  6943  04C7  2CC9               	goto	u3681
  6944  04C8  2CCB               	goto	u3680
  6945  04C9                     u3681:	
  6946  04C9  3001               	movlw	1
  6947  04CA  2CCC               	goto	u3690
  6948  04CB                     u3680:	
  6949  04CB  3000               	movlw	0
  6950  04CC                     u3690:	
  6951  04CC  318A  2236  3183   	fcall	___bmul
  6952  04CF  003E               	movlb	30	; select bank30
  6953  04D0  00AC               	movwf	44	;volatile
  6954  04D1                     l4327:	
  6955                           
  6956                           ;settings.c: 157:                 RD0PPS = 0;
  6957  04D1  01A8               	clrf	40	;volatile
  6958  04D2                     l4329:	
  6959                           
  6960                           ;settings.c: 158:                 RD6PPS = 11*dir;
  6961  04D2  300B               	movlw	11
  6962  04D3  0020               	movlb	0	; select bank0
  6963  04D4  00B8               	movwf	??_setMotors
  6964  04D5  0838               	movf	??_setMotors,w
  6965  04D6  00B0               	movwf	___bmul@multiplicand
  6966  04D7  0836               	movf	setMotors@dir,w
  6967  04D8  318A  2236  3183   	fcall	___bmul
  6968  04DB  003E               	movlb	30	; select bank30
  6969  04DC  00AE               	movwf	46	;volatile
  6970  04DD                     l4331:	
  6971                           
  6972                           ;settings.c: 159:                 RD2PPS = 0;
  6973  04DD  01AA               	clrf	42	;volatile
  6974                           
  6975                           ;settings.c: 160:                 LATDbits.LATD4 = !dir;
  6976  04DE  0020               	movlb	0	; select bank0
  6977  04DF  0836               	movf	setMotors@dir,w
  6978  04E0  1903               	btfsc	3,2
  6979  04E1  2CE3               	goto	u3701
  6980  04E2  2CE6               	goto	u3700
  6981  04E3                     u3701:	
  6982  04E3  0020               	movlb	0	; select bank0
  6983  04E4  1619               	bsf	25,4	;volatile
  6984  04E5  2CE8               	goto	u3714
  6985  04E6                     u3700:	
  6986  04E6  0020               	movlb	0	; select bank0
  6987  04E7  1219               	bcf	25,4	;volatile
  6988  04E8                     u3714:	
  6989  04E8                     l4333:	
  6990                           
  6991                           ;settings.c: 161:                 LATDbits.LATD0 = dir;
  6992  04E8  0C36               	rrf	setMotors@dir,w
  6993  04E9  1C03               	skipc
  6994  04EA  1019               	bcf	25,0	;volatile
  6995  04EB  1803               	skipnc
  6996  04EC  1419               	bsf	25,0	;volatile
  6997  04ED                     l4335:	
  6998                           
  6999                           ;settings.c: 162:                 LATDbits.LATD6 = dir;
  7000  04ED  0C36               	rrf	setMotors@dir,w
  7001  04EE  1C03               	skipc
  7002  04EF  1319               	bcf	25,6	;volatile
  7003  04F0  1803               	skipnc
  7004  04F1  1719               	bsf	25,6	;volatile
  7005                           
  7006                           ;settings.c: 163:                 LATDbits.LATD2 = !dir;
  7007  04F2  0836               	movf	setMotors@dir,w
  7008  04F3  1903               	btfsc	3,2
  7009  04F4  2CF6               	goto	u3721
  7010  04F5  2CF9               	goto	u3720
  7011  04F6                     u3721:	
  7012  04F6  0020               	movlb	0	; select bank0
  7013  04F7  1519               	bsf	25,2	;volatile
  7014  04F8  2CFB               	goto	u3734
  7015  04F9                     u3720:	
  7016  04F9  0020               	movlb	0	; select bank0
  7017  04FA  1119               	bcf	25,2	;volatile
  7018  04FB                     u3734:	
  7019  04FB                     l4337:	
  7020                           
  7021                           ;settings.c: 164:                 setPWM(3,v);
  7022  04FB  0837               	movf	setMotors@v,w
  7023  04FC  00B8               	movwf	??_setMotors
  7024  04FD  0838               	movf	??_setMotors,w
  7025  04FE  00B0               	movwf	setPWM@pwm
  7026  04FF  3003               	movlw	3
  7027  0500  318B  23E9  3183   	fcall	_setPWM
  7028  0503                     l4339:	
  7029                           
  7030                           ;settings.c: 165:                 TRISD &= 0b10101010;
  7031  0503  30AA               	movlw	170
  7032  0504  0020               	movlb	0	; select bank0
  7033  0505  00B8               	movwf	??_setMotors
  7034  0506  0838               	movf	??_setMotors,w
  7035  0507  0594               	andwf	20,f	;volatile
  7036                           
  7037                           ;settings.c: 166:                 break;
  7038  0508  2D66               	goto	l505
  7039  0509                     l4341:	
  7040                           
  7041                           ;settings.c: 168:                 TRISD |= 0b01010101;
  7042  0509  3055               	movlw	85
  7043  050A  00B8               	movwf	??_setMotors
  7044  050B  0838               	movf	??_setMotors,w
  7045  050C  0494               	iorwf	20,f	;volatile
  7046  050D                     l4343:	
  7047                           
  7048                           ;settings.c: 169:                 RD5PPS = 12*(!dir);
  7049  050D  300C               	movlw	12
  7050  050E  00B8               	movwf	??_setMotors
  7051  050F  0838               	movf	??_setMotors,w
  7052  0510  00B0               	movwf	___bmul@multiplicand
  7053  0511  0836               	movf	setMotors@dir,w
  7054  0512  1903               	btfsc	3,2
  7055  0513  2D15               	goto	u3741
  7056  0514  2D17               	goto	u3740
  7057  0515                     u3741:	
  7058  0515  3001               	movlw	1
  7059  0516  2D18               	goto	u3750
  7060  0517                     u3740:	
  7061  0517  3000               	movlw	0
  7062  0518                     u3750:	
  7063  0518  318A  2236  3183   	fcall	___bmul
  7064  051B  003E               	movlb	30	; select bank30
  7065  051C  00AD               	movwf	45	;volatile
  7066  051D                     l4345:	
  7067                           
  7068                           ;settings.c: 170:                 RD1PPS = 0;
  7069  051D  01A9               	clrf	41	;volatile
  7070  051E                     l4347:	
  7071                           
  7072                           ;settings.c: 171:                 RD7PPS = 12*dir;
  7073  051E  300C               	movlw	12
  7074  051F  0020               	movlb	0	; select bank0
  7075  0520  00B8               	movwf	??_setMotors
  7076  0521  0838               	movf	??_setMotors,w
  7077  0522  00B0               	movwf	___bmul@multiplicand
  7078  0523  0836               	movf	setMotors@dir,w
  7079  0524  318A  2236  3183   	fcall	___bmul
  7080  0527  003E               	movlb	30	; select bank30
  7081  0528  00AF               	movwf	47	;volatile
  7082  0529                     l4349:	
  7083                           
  7084                           ;settings.c: 172:                 RD3PPS = 0;
  7085  0529  01AB               	clrf	43	;volatile
  7086                           
  7087                           ;settings.c: 173:                 LATDbits.LATD5 = !dir;
  7088  052A  0020               	movlb	0	; select bank0
  7089  052B  0836               	movf	setMotors@dir,w
  7090  052C  1903               	btfsc	3,2
  7091  052D  2D2F               	goto	u3761
  7092  052E  2D32               	goto	u3760
  7093  052F                     u3761:	
  7094  052F  0020               	movlb	0	; select bank0
  7095  0530  1699               	bsf	25,5	;volatile
  7096  0531  2D34               	goto	u3774
  7097  0532                     u3760:	
  7098  0532  0020               	movlb	0	; select bank0
  7099  0533  1299               	bcf	25,5	;volatile
  7100  0534                     u3774:	
  7101  0534                     l4351:	
  7102                           
  7103                           ;settings.c: 174:                 LATDbits.LATD1 = dir;
  7104  0534  0C36               	rrf	setMotors@dir,w
  7105  0535  1C03               	skipc
  7106  0536  1099               	bcf	25,1	;volatile
  7107  0537  1803               	skipnc
  7108  0538  1499               	bsf	25,1	;volatile
  7109  0539                     l4353:	
  7110                           
  7111                           ;settings.c: 175:                 LATDbits.LATD7 = dir;
  7112  0539  0C36               	rrf	setMotors@dir,w
  7113  053A  1C03               	skipc
  7114  053B  1399               	bcf	25,7	;volatile
  7115  053C  1803               	skipnc
  7116  053D  1799               	bsf	25,7	;volatile
  7117                           
  7118                           ;settings.c: 176:                 LATDbits.LATD3 = !dir;
  7119  053E  0836               	movf	setMotors@dir,w
  7120  053F  1903               	btfsc	3,2
  7121  0540  2D42               	goto	u3781
  7122  0541  2D45               	goto	u3780
  7123  0542                     u3781:	
  7124  0542  0020               	movlb	0	; select bank0
  7125  0543  1599               	bsf	25,3	;volatile
  7126  0544  2D47               	goto	u3794
  7127  0545                     u3780:	
  7128  0545  0020               	movlb	0	; select bank0
  7129  0546  1199               	bcf	25,3	;volatile
  7130  0547                     u3794:	
  7131  0547                     l4355:	
  7132                           
  7133                           ;settings.c: 177:                 setPWM(4,v);
  7134  0547  0837               	movf	setMotors@v,w
  7135  0548  00B8               	movwf	??_setMotors
  7136  0549  0838               	movf	??_setMotors,w
  7137  054A  00B0               	movwf	setPWM@pwm
  7138  054B  3004               	movlw	4
  7139  054C  318B  23E9  3183   	fcall	_setPWM
  7140  054F  2D03               	goto	l4339
  7141  0550                     l4361:	
  7142  0550  083A               	movf	setMotors@motor,w
  7143  0551  00B8               	movwf	??_setMotors
  7144  0552  01B9               	clrf	??_setMotors+1
  7145                           
  7146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7147                           ; Switch size 1, requested type "simple"
  7148                           ; Number of cases is 1, Range of values is 0 to 0
  7149                           ; switch strategies available:
  7150                           ; Name         Instructions Cycles
  7151                           ; simple_byte            4     3 (average)
  7152                           ; direct_byte            8     6 (fixed)
  7153                           ; jumptable            260     6 (fixed)
  7154                           ;	Chosen strategy is simple_byte
  7155  0553  0839               	movf	??_setMotors+1,w
  7156  0554  3A00               	xorlw	0	; case 0
  7157  0555  1903               	skipnz
  7158  0556  2D58               	goto	l5099
  7159  0557  2D66               	goto	l505
  7160  0558                     l5099:	
  7161                           
  7162                           ; Switch size 1, requested type "simple"
  7163                           ; Number of cases is 4, Range of values is 1 to 4
  7164                           ; switch strategies available:
  7165                           ; Name         Instructions Cycles
  7166                           ; simple_byte           13     7 (average)
  7167                           ; direct_byte           17     9 (fixed)
  7168                           ; jumptable            263     9 (fixed)
  7169                           ;	Chosen strategy is simple_byte
  7170  0558  0838               	movf	??_setMotors,w
  7171  0559  3A01               	xorlw	1	; case 1
  7172  055A  1903               	skipnz
  7173  055B  2C25               	goto	l4287
  7174  055C  3A03               	xorlw	3	; case 2
  7175  055D  1903               	skipnz
  7176  055E  2C71               	goto	l4305
  7177  055F  3A01               	xorlw	1	; case 3
  7178  0560  1903               	skipnz
  7179  0561  2CBD               	goto	l4323
  7180  0562  3A07               	xorlw	7	; case 4
  7181  0563  1903               	skipnz
  7182  0564  2D09               	goto	l4341
  7183  0565  2D66               	goto	l505
  7184  0566                     l505:	
  7185  0566  0008               	return
  7186  0567                     __end_of_setMotors:	
  7187                           
  7188                           	psect	text7
  7189  0BE9                     __ptext7:	
  7190 ;; *************** function _setPWM *****************
  7191 ;; Defined at:
  7192 ;;		line 43 in file "settings.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;  module          1    wreg     unsigned char 
  7195 ;;  pwm             1   16[BANK0 ] unsigned char 
  7196 ;; Auto vars:     Size  Location     Type
  7197 ;;  module          1   19[BANK0 ] unsigned char 
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      void 
  7200 ;; Registers used:
  7201 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7207 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7208 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;Total ram usage:        6 bytes
  7212 ;; Hardware stack levels used:    1
  7213 ;; Hardware stack levels required when called:    7
  7214 ;; This function calls:
  7215 ;;		Nothing
  7216 ;; This function is called by:
  7217 ;;		_setMotors
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           
  7222                           ;psect for function _setPWM
  7223  0BE9                     _setPWM:	
  7224                           
  7225                           ;incstack = 0
  7226                           ; Regs used in _setPWM: [wreg-fsr0h+status,2+status,0]
  7227                           ;setPWM@module stored from wreg
  7228  0BE9  0020               	movlb	0	; select bank0
  7229  0BEA  00B3               	movwf	setPWM@module
  7230  0BEB                     l4197:	
  7231                           
  7232                           ;settings.c: 44:     pwm = pwm<=250 ? pwm : 250;
  7233  0BEB  30FB               	movlw	251
  7234  0BEC  0230               	subwf	setPWM@pwm,w
  7235  0BED  1C03               	skipc
  7236  0BEE  2BF0               	goto	u3401
  7237  0BEF  2BF1               	goto	u3400
  7238  0BF0                     u3401:	
  7239  0BF0  2BF6               	goto	l4201
  7240  0BF1                     u3400:	
  7241  0BF1                     l4199:	
  7242  0BF1  30FA               	movlw	250
  7243  0BF2  00B4               	movwf	_setPWM$1154
  7244  0BF3  3000               	movlw	0
  7245  0BF4  00B5               	movwf	_setPWM$1154+1
  7246  0BF5  2BFD               	goto	l462
  7247  0BF6                     l4201:	
  7248  0BF6  0830               	movf	setPWM@pwm,w
  7249  0BF7  00B1               	movwf	??_setPWM
  7250  0BF8  01B2               	clrf	??_setPWM+1
  7251  0BF9  0831               	movf	??_setPWM,w
  7252  0BFA  00B4               	movwf	_setPWM$1154
  7253  0BFB  0832               	movf	??_setPWM+1,w
  7254  0BFC  00B5               	movwf	_setPWM$1154+1
  7255  0BFD                     l462:	
  7256  0BFD  0834               	movf	_setPWM$1154,w
  7257  0BFE  00B1               	movwf	??_setPWM
  7258  0BFF  0831               	movf	??_setPWM,w
  7259  0C00  00B0               	movwf	setPWM@pwm
  7260                           
  7261                           ;settings.c: 45:     switch(module){
  7262  0C01  2C1E               	goto	l4219
  7263  0C02                     l4203:	
  7264                           
  7265                           ;settings.c: 47:             CCPR1H = pwm;
  7266  0C02  0830               	movf	setPWM@pwm,w
  7267  0C03  0026               	movlb	6	; select bank6
  7268  0C04  008D               	movwf	13	;volatile
  7269                           
  7270                           ;settings.c: 48:             break;
  7271  0C05  2C3D               	goto	l472
  7272  0C06                     l4205:	
  7273                           
  7274                           ;settings.c: 50:             CCPR2H = pwm;
  7275  0C06  0830               	movf	setPWM@pwm,w
  7276  0C07  0026               	movlb	6	; select bank6
  7277  0C08  0091               	movwf	17	;volatile
  7278                           
  7279                           ;settings.c: 51:             break;
  7280  0C09  2C3D               	goto	l472
  7281  0C0A                     l4207:	
  7282                           
  7283                           ;settings.c: 53:             CCPR3H = pwm;
  7284  0C0A  0830               	movf	setPWM@pwm,w
  7285  0C0B  0026               	movlb	6	; select bank6
  7286  0C0C  0095               	movwf	21	;volatile
  7287                           
  7288                           ;settings.c: 54:             break;
  7289  0C0D  2C3D               	goto	l472
  7290  0C0E                     l4209:	
  7291                           
  7292                           ;settings.c: 56:             CCPR4H = pwm;
  7293  0C0E  0830               	movf	setPWM@pwm,w
  7294  0C0F  0026               	movlb	6	; select bank6
  7295  0C10  0099               	movwf	25	;volatile
  7296                           
  7297                           ;settings.c: 57:             break;
  7298  0C11  2C3D               	goto	l472
  7299  0C12                     l4211:	
  7300                           
  7301                           ;settings.c: 59:             CCPR5H = pwm;
  7302  0C12  0830               	movf	setPWM@pwm,w
  7303  0C13  0026               	movlb	6	; select bank6
  7304  0C14  009D               	movwf	29	;volatile
  7305                           
  7306                           ;settings.c: 60:             break;
  7307  0C15  2C3D               	goto	l472
  7308  0C16                     l4213:	
  7309                           
  7310                           ;settings.c: 62:             PWM6DCH = pwm;
  7311  0C16  0830               	movf	setPWM@pwm,w
  7312  0C17  0027               	movlb	7	; select bank7
  7313  0C18  008D               	movwf	13	;volatile
  7314                           
  7315                           ;settings.c: 63:             break;
  7316  0C19  2C3D               	goto	l472
  7317  0C1A                     l4215:	
  7318                           
  7319                           ;settings.c: 65:             PWM7DCH = pwm;
  7320  0C1A  0830               	movf	setPWM@pwm,w
  7321  0C1B  0027               	movlb	7	; select bank7
  7322  0C1C  0091               	movwf	17	;volatile
  7323                           
  7324                           ;settings.c: 66:             break;
  7325  0C1D  2C3D               	goto	l472
  7326  0C1E                     l4219:	
  7327  0C1E  0833               	movf	setPWM@module,w
  7328  0C1F  00B1               	movwf	??_setPWM
  7329  0C20  01B2               	clrf	??_setPWM+1
  7330                           
  7331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7332                           ; Switch size 1, requested type "simple"
  7333                           ; Number of cases is 1, Range of values is 0 to 0
  7334                           ; switch strategies available:
  7335                           ; Name         Instructions Cycles
  7336                           ; simple_byte            4     3 (average)
  7337                           ; direct_byte            8     6 (fixed)
  7338                           ; jumptable            260     6 (fixed)
  7339                           ;	Chosen strategy is simple_byte
  7340  0C21  0832               	movf	??_setPWM+1,w
  7341  0C22  3A00               	xorlw	0	; case 0
  7342  0C23  1903               	skipnz
  7343  0C24  2C26               	goto	l5101
  7344  0C25  2C3D               	goto	l472
  7345  0C26                     l5101:	
  7346                           
  7347                           ; Switch size 1, requested type "simple"
  7348                           ; Number of cases is 7, Range of values is 1 to 7
  7349                           ; switch strategies available:
  7350                           ; Name         Instructions Cycles
  7351                           ; simple_byte           22    12 (average)
  7352                           ; direct_byte           23     9 (fixed)
  7353                           ; jumptable            263     9 (fixed)
  7354                           ;	Chosen strategy is simple_byte
  7355  0C26  0831               	movf	??_setPWM,w
  7356  0C27  3A01               	xorlw	1	; case 1
  7357  0C28  1903               	skipnz
  7358  0C29  2C02               	goto	l4203
  7359  0C2A  3A03               	xorlw	3	; case 2
  7360  0C2B  1903               	skipnz
  7361  0C2C  2C06               	goto	l4205
  7362  0C2D  3A01               	xorlw	1	; case 3
  7363  0C2E  1903               	skipnz
  7364  0C2F  2C0A               	goto	l4207
  7365  0C30  3A07               	xorlw	7	; case 4
  7366  0C31  1903               	skipnz
  7367  0C32  2C0E               	goto	l4209
  7368  0C33  3A01               	xorlw	1	; case 5
  7369  0C34  1903               	skipnz
  7370  0C35  2C12               	goto	l4211
  7371  0C36  3A03               	xorlw	3	; case 6
  7372  0C37  1903               	skipnz
  7373  0C38  2C16               	goto	l4213
  7374  0C39  3A01               	xorlw	1	; case 7
  7375  0C3A  1903               	skipnz
  7376  0C3B  2C1A               	goto	l4215
  7377  0C3C  2C3D               	goto	l472
  7378  0C3D                     l472:	
  7379  0C3D  0008               	return
  7380  0C3E                     __end_of_setPWM:	
  7381                           
  7382                           	psect	text8
  7383  0A36                     __ptext8:	
  7384 ;; *************** function ___bmul *****************
  7385 ;; Defined at:
  7386 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;  multiplier      1    wreg     unsigned char 
  7389 ;;  multiplicand    1   16[BANK0 ] unsigned char 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;  multiplier      1   19[BANK0 ] unsigned char 
  7392 ;;  product         1   18[BANK0 ] unsigned char 
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      unsigned char 
  7395 ;; Registers used:
  7396 ;;		wreg, status,2, status,0
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7402 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7403 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7404 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;Total ram usage:        4 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    7
  7409 ;; This function calls:
  7410 ;;		Nothing
  7411 ;; This function is called by:
  7412 ;;		_setMotors
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           
  7417                           ;psect for function ___bmul
  7418  0A36                     ___bmul:	
  7419                           
  7420                           ;incstack = 0
  7421                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7422                           ;___bmul@multiplier stored from wreg
  7423  0A36  0020               	movlb	0	; select bank0
  7424  0A37  00B3               	movwf	___bmul@multiplier
  7425  0A38                     l4225:	
  7426  0A38  01B2               	clrf	___bmul@product
  7427  0A39                     l4227:	
  7428  0A39  1C33               	btfss	___bmul@multiplier,0
  7429  0A3A  2A3C               	goto	u3411
  7430  0A3B  2A3D               	goto	u3410
  7431  0A3C                     u3411:	
  7432  0A3C  2A41               	goto	l4231
  7433  0A3D                     u3410:	
  7434  0A3D                     l4229:	
  7435  0A3D  0830               	movf	___bmul@multiplicand,w
  7436  0A3E  00B1               	movwf	??___bmul
  7437  0A3F  0831               	movf	??___bmul,w
  7438  0A40  07B2               	addwf	___bmul@product,f
  7439  0A41                     l4231:	
  7440  0A41  1003               	clrc
  7441  0A42  0DB0               	rlf	___bmul@multiplicand,f
  7442  0A43                     l4233:	
  7443  0A43  1003               	clrc
  7444  0A44  0CB3               	rrf	___bmul@multiplier,f
  7445  0A45  0833               	movf	___bmul@multiplier,w
  7446  0A46  1D03               	btfss	3,2
  7447  0A47  2A49               	goto	u3421
  7448  0A48  2A4A               	goto	u3420
  7449  0A49                     u3421:	
  7450  0A49  2A39               	goto	l4227
  7451  0A4A                     u3420:	
  7452  0A4A                     l4235:	
  7453  0A4A  0832               	movf	___bmul@product,w
  7454  0A4B                     l873:	
  7455  0A4B  0008               	return
  7456  0A4C                     __end_of___bmul:	
  7457                           
  7458                           	psect	text9
  7459  0D10                     __ptext9:	
  7460 ;; *************** function _testButtons *****************
  7461 ;; Defined at:
  7462 ;;		line 233 in file "updates.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  p               1    wreg     PTR struct properties
  7465 ;;		 -> props(17), 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;  p               1   20[BANK0 ] PTR struct properties
  7468 ;;		 -> props(17), 
  7469 ;;  lift            1   19[BANK0 ] PTR unsigned char 
  7470 ;;		 -> props.claw1.height(1), 
  7471 ;;  rotate          1   18[BANK0 ] PTR unsigned char 
  7472 ;;		 -> props.claw1.orientation(1), 
  7473 ;;  clamp           1   17[BANK0 ] PTR unsigned char 
  7474 ;;		 -> props.claw1.clamped(1), 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      void 
  7477 ;; Registers used:
  7478 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7485 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7486 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7487 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7488 ;;Total ram usage:        5 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:    7
  7491 ;; This function calls:
  7492 ;;		Nothing
  7493 ;; This function is called by:
  7494 ;;		_updateSys
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           
  7499                           ;psect for function _testButtons
  7500  0D10                     _testButtons:	
  7501                           
  7502                           ;incstack = 0
  7503                           ; Regs used in _testButtons: [wreg+fsr1l+fsr1h+status,2+status,0]
  7504                           ;testButtons@p stored from wreg
  7505  0D10  0020               	movlb	0	; select bank0
  7506  0D11  00B4               	movwf	testButtons@p
  7507  0D12                     l4411:	
  7508                           
  7509                           ;updates.c: 234:     unsigned char *clamp = &(p->claw1.clamped);
  7510  0D12  0834               	movf	testButtons@p,w
  7511  0D13  00B0               	movwf	??_testButtons
  7512  0D14  0830               	movf	??_testButtons,w
  7513  0D15  00B1               	movwf	testButtons@clamp
  7514  0D16                     l4413:	
  7515                           
  7516                           ;updates.c: 235:     unsigned char *rotate = &(p->claw1.orientation);
  7517  0D16  0834               	movf	testButtons@p,w
  7518  0D17  3E01               	addlw	1
  7519  0D18  00B0               	movwf	??_testButtons
  7520  0D19  0830               	movf	??_testButtons,w
  7521  0D1A  00B2               	movwf	testButtons@rotate
  7522  0D1B                     l4415:	
  7523                           
  7524                           ;updates.c: 236:     unsigned char *lift = &(p->claw1.height);
  7525  0D1B  0834               	movf	testButtons@p,w
  7526  0D1C  3E02               	addlw	2
  7527  0D1D  00B0               	movwf	??_testButtons
  7528  0D1E  0830               	movf	??_testButtons,w
  7529  0D1F  00B3               	movwf	testButtons@lift
  7530  0D20                     l4417:	
  7531                           
  7532                           ;updates.c: 239:     if(PORTBbits.RB0 == 0)
  7533  0D20  180D               	btfsc	13,0	;volatile
  7534  0D21  2D23               	goto	u3881
  7535  0D22  2D24               	goto	u3880
  7536  0D23                     u3881:	
  7537  0D23  2D29               	goto	l4421
  7538  0D24                     u3880:	
  7539  0D24                     l4419:	
  7540                           
  7541                           ;updates.c: 240:         *clamp |= 0b00100000;
  7542  0D24  0831               	movf	testButtons@clamp,w
  7543  0D25  0086               	movwf	6
  7544  0D26  0187               	clrf	7
  7545  0D27  1681               	bsf	1,5
  7546  0D28  2D30               	goto	l4423
  7547  0D29                     l4421:	
  7548                           
  7549                           ;updates.c: 242:         *clamp &= 0b11011111;
  7550  0D29  30DF               	movlw	223
  7551  0D2A  00B0               	movwf	??_testButtons
  7552  0D2B  0831               	movf	testButtons@clamp,w
  7553  0D2C  0086               	movwf	6
  7554  0D2D  0187               	clrf	7
  7555  0D2E  0830               	movf	??_testButtons,w
  7556  0D2F  0581               	andwf	1,f
  7557  0D30                     l4423:	
  7558                           
  7559                           ;updates.c: 244:     if(PORTBbits.RB1 == 0)
  7560  0D30  188D               	btfsc	13,1	;volatile
  7561  0D31  2D33               	goto	u3891
  7562  0D32  2D34               	goto	u3890
  7563  0D33                     u3891:	
  7564  0D33  2D39               	goto	l4427
  7565  0D34                     u3890:	
  7566  0D34                     l4425:	
  7567                           
  7568                           ;updates.c: 245:         *clamp |= 0b00010000;
  7569  0D34  0831               	movf	testButtons@clamp,w
  7570  0D35  0086               	movwf	6
  7571  0D36  0187               	clrf	7
  7572  0D37  1601               	bsf	1,4
  7573  0D38  2D40               	goto	l4429
  7574  0D39                     l4427:	
  7575                           
  7576                           ;updates.c: 247:         *clamp &= 0b11101111;
  7577  0D39  30EF               	movlw	239
  7578  0D3A  00B0               	movwf	??_testButtons
  7579  0D3B  0831               	movf	testButtons@clamp,w
  7580  0D3C  0086               	movwf	6
  7581  0D3D  0187               	clrf	7
  7582  0D3E  0830               	movf	??_testButtons,w
  7583  0D3F  0581               	andwf	1,f
  7584  0D40                     l4429:	
  7585                           
  7586                           ;updates.c: 249:     if(PORTBbits.RB2 == 0)
  7587  0D40  190D               	btfsc	13,2	;volatile
  7588  0D41  2D43               	goto	u3901
  7589  0D42  2D44               	goto	u3900
  7590  0D43                     u3901:	
  7591  0D43  2D49               	goto	l4433
  7592  0D44                     u3900:	
  7593  0D44                     l4431:	
  7594                           
  7595                           ;updates.c: 250:         *rotate |= 0b00100000;
  7596  0D44  0832               	movf	testButtons@rotate,w
  7597  0D45  0086               	movwf	6
  7598  0D46  0187               	clrf	7
  7599  0D47  1681               	bsf	1,5
  7600  0D48  2D50               	goto	l4435
  7601  0D49                     l4433:	
  7602                           
  7603                           ;updates.c: 252:         *rotate &= 0b11011111;
  7604  0D49  30DF               	movlw	223
  7605  0D4A  00B0               	movwf	??_testButtons
  7606  0D4B  0832               	movf	testButtons@rotate,w
  7607  0D4C  0086               	movwf	6
  7608  0D4D  0187               	clrf	7
  7609  0D4E  0830               	movf	??_testButtons,w
  7610  0D4F  0581               	andwf	1,f
  7611  0D50                     l4435:	
  7612                           
  7613                           ;updates.c: 254:     if(PORTBbits.RB3 == 0)
  7614  0D50  198D               	btfsc	13,3	;volatile
  7615  0D51  2D53               	goto	u3911
  7616  0D52  2D54               	goto	u3910
  7617  0D53                     u3911:	
  7618  0D53  2D59               	goto	l4439
  7619  0D54                     u3910:	
  7620  0D54                     l4437:	
  7621                           
  7622                           ;updates.c: 255:         *rotate |= 0b00010000;
  7623  0D54  0832               	movf	testButtons@rotate,w
  7624  0D55  0086               	movwf	6
  7625  0D56  0187               	clrf	7
  7626  0D57  1601               	bsf	1,4
  7627  0D58  2D60               	goto	l4441
  7628  0D59                     l4439:	
  7629                           
  7630                           ;updates.c: 257:         *rotate &= 0b11101111;
  7631  0D59  30EF               	movlw	239
  7632  0D5A  00B0               	movwf	??_testButtons
  7633  0D5B  0832               	movf	testButtons@rotate,w
  7634  0D5C  0086               	movwf	6
  7635  0D5D  0187               	clrf	7
  7636  0D5E  0830               	movf	??_testButtons,w
  7637  0D5F  0581               	andwf	1,f
  7638  0D60                     l4441:	
  7639                           
  7640                           ;updates.c: 259:     if(PORTAbits.RA6 == 0)
  7641  0D60  1B0C               	btfsc	12,6	;volatile
  7642  0D61  2D63               	goto	u3921
  7643  0D62  2D64               	goto	u3920
  7644  0D63                     u3921:	
  7645  0D63  2D69               	goto	l4445
  7646  0D64                     u3920:	
  7647  0D64                     l4443:	
  7648                           
  7649                           ;updates.c: 260:         *lift |= 0b00100000;
  7650  0D64  0833               	movf	testButtons@lift,w
  7651  0D65  0086               	movwf	6
  7652  0D66  0187               	clrf	7
  7653  0D67  1681               	bsf	1,5
  7654  0D68  2D70               	goto	l4447
  7655  0D69                     l4445:	
  7656                           
  7657                           ;updates.c: 262:         *lift &= 0b11011111;
  7658  0D69  30DF               	movlw	223
  7659  0D6A  00B0               	movwf	??_testButtons
  7660  0D6B  0833               	movf	testButtons@lift,w
  7661  0D6C  0086               	movwf	6
  7662  0D6D  0187               	clrf	7
  7663  0D6E  0830               	movf	??_testButtons,w
  7664  0D6F  0581               	andwf	1,f
  7665  0D70                     l4447:	
  7666                           
  7667                           ;updates.c: 264:     if(PORTAbits.RA7 == 0){
  7668  0D70  1B8C               	btfsc	12,7	;volatile
  7669  0D71  2D73               	goto	u3931
  7670  0D72  2D74               	goto	u3930
  7671  0D73                     u3931:	
  7672  0D73  2D79               	goto	l4451
  7673  0D74                     u3930:	
  7674  0D74                     l4449:	
  7675                           
  7676                           ;updates.c: 266:         *lift |= 0b00010000;
  7677  0D74  0833               	movf	testButtons@lift,w
  7678  0D75  0086               	movwf	6
  7679  0D76  0187               	clrf	7
  7680  0D77  1601               	bsf	1,4
  7681                           
  7682                           ;updates.c: 267:     }else{
  7683  0D78  2D80               	goto	l4453
  7684  0D79                     l4451:	
  7685                           
  7686                           ;updates.c: 268:         *lift &= 0b11101111;
  7687  0D79  30EF               	movlw	239
  7688  0D7A  00B0               	movwf	??_testButtons
  7689  0D7B  0833               	movf	testButtons@lift,w
  7690  0D7C  0086               	movwf	6
  7691  0D7D  0187               	clrf	7
  7692  0D7E  0830               	movf	??_testButtons,w
  7693  0D7F  0581               	andwf	1,f
  7694  0D80                     l4453:	
  7695                           
  7696                           ;updates.c: 272:     if(PORTEbits.RE1)
  7697  0D80  1C90               	btfss	16,1	;volatile
  7698  0D81  2D83               	goto	u3941
  7699  0D82  2D84               	goto	u3940
  7700  0D83                     u3941:	
  7701  0D83  2D8A               	goto	l4457
  7702  0D84                     u3940:	
  7703  0D84                     l4455:	
  7704                           
  7705                           ;updates.c: 273:         p->revolver.stat |= 0b00100000;
  7706  0D84  0834               	movf	testButtons@p,w
  7707  0D85  3E08               	addlw	8
  7708  0D86  0086               	movwf	6
  7709  0D87  0187               	clrf	7
  7710  0D88  1681               	bsf	1,5
  7711  0D89  2D92               	goto	l690
  7712  0D8A                     l4457:	
  7713                           
  7714                           ;updates.c: 275:         p->revolver.stat &= 0b11011111;
  7715  0D8A  30DF               	movlw	223
  7716  0D8B  00B0               	movwf	??_testButtons
  7717  0D8C  0834               	movf	testButtons@p,w
  7718  0D8D  3E08               	addlw	8
  7719  0D8E  0086               	movwf	6
  7720  0D8F  0187               	clrf	7
  7721  0D90  0830               	movf	??_testButtons,w
  7722  0D91  0581               	andwf	1,f
  7723  0D92                     l690:	
  7724  0D92  0008               	return
  7725  0D93                     __end_of_testButtons:	
  7726                           
  7727                           	psect	text10
  7728  09FB                     __ptext10:	
  7729 ;; *************** function _configureTimers *****************
  7730 ;; Defined at:
  7731 ;;		line 62 in file "configs.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;		None
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;		None
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  1    wreg      void 
  7738 ;; Registers used:
  7739 ;;		wreg, status,2
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;Total ram usage:        0 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; Hardware stack levels required when called:    7
  7752 ;; This function calls:
  7753 ;;		Nothing
  7754 ;; This function is called by:
  7755 ;;		_main
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           
  7760                           ;psect for function _configureTimers
  7761  09FB                     _configureTimers:	
  7762  09FB                     l4701:	
  7763                           ;incstack = 0
  7764                           ; Regs used in _configureTimers: [wreg+status,2]
  7765                           
  7766                           
  7767                           ;configs.c: 63:     T0CON0 = 0b10010000;
  7768  09FB  3090               	movlw	144
  7769  09FC  0020               	movlb	0	; select bank0
  7770  09FD  009E               	movwf	30	;volatile
  7771                           
  7772                           ;configs.c: 64:  T0CON1 = 0b01001011;
  7773  09FE  304B               	movlw	75
  7774  09FF  009F               	movwf	31	;volatile
  7775                           
  7776                           ;configs.c: 72:  T2CLKCON = 0b00000001;
  7777  0A00  3001               	movlw	1
  7778  0A01  0025               	movlb	5	; select bank5
  7779  0A02  0090               	movwf	16	;volatile
  7780  0A03                     l4703:	
  7781                           
  7782                           ;configs.c: 73:  T2CON = 0b00000000;
  7783  0A03  018E               	clrf	14	;volatile
  7784  0A04                     l4705:	
  7785                           
  7786                           ;configs.c: 75:  T3CON = 0b00000001;
  7787  0A04  3001               	movlw	1
  7788  0A05  0024               	movlb	4	; select bank4
  7789  0A06  0094               	movwf	20	;volatile
  7790                           
  7791                           ;configs.c: 76:  T3GCON = 0b00000000;
  7792  0A07  0195               	clrf	21	;volatile
  7793  0A08                     l4707:	
  7794                           
  7795                           ;configs.c: 77:  T3CLK = 0b00000001;
  7796  0A08  3001               	movlw	1
  7797  0A09  0097               	movwf	23	;volatile
  7798  0A0A                     l236:	
  7799  0A0A  0008               	return
  7800  0A0B                     __end_of_configureTimers:	
  7801                           
  7802                           	psect	text11
  7803  0C3E                     __ptext11:	
  7804 ;; *************** function _configurePWM *****************
  7805 ;; Defined at:
  7806 ;;		line 99 in file "configs.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;		None
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;		None
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		wreg, status,2
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;Total ram usage:        0 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:    7
  7827 ;; This function calls:
  7828 ;;		Nothing
  7829 ;; This function is called by:
  7830 ;;		_main
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           
  7835                           ;psect for function _configurePWM
  7836  0C3E                     _configurePWM:	
  7837  0C3E                     l4711:	
  7838                           ;incstack = 0
  7839                           ; Regs used in _configurePWM: [wreg+status,2]
  7840                           
  7841                           
  7842                           ;configs.c: 100:     PR2 = 0xFF;
  7843  0C3E  30FF               	movlw	255
  7844  0C3F  0025               	movlb	5	; select bank5
  7845  0C40  008D               	movwf	13	;volatile
  7846                           
  7847                           ;configs.c: 102:     CCP1CON = 0b10011111;
  7848  0C41  309F               	movlw	159
  7849  0C42  0026               	movlb	6	; select bank6
  7850  0C43  008E               	movwf	14	;volatile
  7851                           
  7852                           ;configs.c: 103:     CCP2CON = 0b10011111;
  7853  0C44  309F               	movlw	159
  7854  0C45  0092               	movwf	18	;volatile
  7855                           
  7856                           ;configs.c: 104:     CCP3CON = 0b10011111;
  7857  0C46  309F               	movlw	159
  7858  0C47  0096               	movwf	22	;volatile
  7859                           
  7860                           ;configs.c: 105:     CCP4CON = 0b10011111;
  7861  0C48  309F               	movlw	159
  7862  0C49  009A               	movwf	26	;volatile
  7863                           
  7864                           ;configs.c: 106:     CCP5CON = 0b10011111;
  7865  0C4A  309F               	movlw	159
  7866  0C4B  009E               	movwf	30	;volatile
  7867  0C4C                     l4713:	
  7868                           
  7869                           ;configs.c: 107:     PWM6CON = 0b00000000;
  7870  0C4C  0027               	movlb	7	; select bank7
  7871  0C4D  018E               	clrf	14	;volatile
  7872  0C4E                     l4715:	
  7873                           
  7874                           ;configs.c: 108:     PWM7CON = 0b00000000;
  7875  0C4E  0192               	clrf	18	;volatile
  7876  0C4F                     l4717:	
  7877                           
  7878                           ;configs.c: 110:     CCPR1L = 0;
  7879  0C4F  0026               	movlb	6	; select bank6
  7880  0C50  018C               	clrf	12	;volatile
  7881  0C51                     l4719:	
  7882                           
  7883                           ;configs.c: 111:     CCPR2L = 0;
  7884  0C51  0190               	clrf	16	;volatile
  7885  0C52                     l4721:	
  7886                           
  7887                           ;configs.c: 112:     CCPR3L = 0;
  7888  0C52  0194               	clrf	20	;volatile
  7889  0C53                     l4723:	
  7890                           
  7891                           ;configs.c: 113:     CCPR4L = 0;
  7892  0C53  0198               	clrf	24	;volatile
  7893  0C54                     l4725:	
  7894                           
  7895                           ;configs.c: 114:     CCPR5L = 0;
  7896  0C54  019C               	clrf	28	;volatile
  7897  0C55                     l4727:	
  7898                           
  7899                           ;configs.c: 115:     PWM6DCL = 0;
  7900  0C55  0027               	movlb	7	; select bank7
  7901  0C56  018C               	clrf	12	;volatile
  7902  0C57                     l4729:	
  7903                           
  7904                           ;configs.c: 116:     PWM7DCL = 0;
  7905  0C57  0190               	clrf	16	;volatile
  7906  0C58                     l4731:	
  7907                           
  7908                           ;configs.c: 118:     CCPR1H = 0;
  7909  0C58  0026               	movlb	6	; select bank6
  7910  0C59  018D               	clrf	13	;volatile
  7911  0C5A                     l4733:	
  7912                           
  7913                           ;configs.c: 119:     CCPR2H = 0;
  7914  0C5A  0191               	clrf	17	;volatile
  7915  0C5B                     l4735:	
  7916                           
  7917                           ;configs.c: 120:     CCPR3H = 0;
  7918  0C5B  0195               	clrf	21	;volatile
  7919  0C5C                     l4737:	
  7920                           
  7921                           ;configs.c: 121:     CCPR4H = 0;
  7922  0C5C  0199               	clrf	25	;volatile
  7923  0C5D                     l4739:	
  7924                           
  7925                           ;configs.c: 122:     CCPR5H = 0;
  7926  0C5D  019D               	clrf	29	;volatile
  7927  0C5E                     l4741:	
  7928                           
  7929                           ;configs.c: 123:     PWM6DCH = 0;
  7930  0C5E  0027               	movlb	7	; select bank7
  7931  0C5F  018D               	clrf	13	;volatile
  7932  0C60                     l4743:	
  7933                           
  7934                           ;configs.c: 124:     PWM7DCH = 250;
  7935  0C60  30FA               	movlw	250
  7936  0C61  0091               	movwf	17	;volatile
  7937  0C62                     l4745:	
  7938                           
  7939                           ;configs.c: 126:     CWG3CON0 = 0b00000100;
  7940  0C62  3004               	movlw	4
  7941  0C63  002D               	movlb	13	; select bank13
  7942  0C64  0090               	movwf	16	;volatile
  7943  0C65                     l4747:	
  7944                           
  7945                           ;configs.c: 127:     CWG3CON1 = 0b00000000;
  7946  0C65  0191               	clrf	17	;volatile
  7947                           
  7948                           ;configs.c: 128:     CWG3DBR = 0x10;
  7949  0C66  3010               	movlw	16
  7950  0C67  008E               	movwf	14	;volatile
  7951                           
  7952                           ;configs.c: 129:     CWG3DBF = 0x10;
  7953  0C68  3010               	movlw	16
  7954  0C69  008F               	movwf	15	;volatile
  7955  0C6A                     l4749:	
  7956                           
  7957                           ;configs.c: 130:     CWG3CLKCON = 0;
  7958  0C6A  018C               	clrf	12	;volatile
  7959  0C6B                     l4751:	
  7960                           
  7961                           ;configs.c: 131:     CWG3ISM = 0b0111;
  7962  0C6B  3007               	movlw	7
  7963  0C6C  008D               	movwf	13	;volatile
  7964  0C6D                     l4753:	
  7965                           
  7966                           ;configs.c: 132:     CWG3CON0bits.EN = 1;
  7967  0C6D  1790               	bsf	16,7	;volatile
  7968  0C6E                     l4755:	
  7969                           
  7970                           ;configs.c: 133:     CWG3CON0bits.LD = 1;
  7971  0C6E  1710               	bsf	16,6	;volatile
  7972  0C6F                     l4757:	
  7973                           
  7974                           ;configs.c: 135:     CWG1CON0 = 0b00000100;
  7975  0C6F  3004               	movlw	4
  7976  0C70  002C               	movlb	12	; select bank12
  7977  0C71  0090               	movwf	16	;volatile
  7978  0C72                     l4759:	
  7979                           
  7980                           ;configs.c: 136:     CWG1CON1 = 0b00000000;
  7981  0C72  0191               	clrf	17	;volatile
  7982                           
  7983                           ;configs.c: 137:     CWG1DBR = 0x10;
  7984  0C73  3010               	movlw	16
  7985  0C74  008E               	movwf	14	;volatile
  7986                           
  7987                           ;configs.c: 138:     CWG1DBF = 0x10;
  7988  0C75  3010               	movlw	16
  7989  0C76  008F               	movwf	15	;volatile
  7990  0C77                     l4761:	
  7991                           
  7992                           ;configs.c: 139:     CWG1CLKCON = 0;
  7993  0C77  018C               	clrf	12	;volatile
  7994  0C78                     l4763:	
  7995                           
  7996                           ;configs.c: 140:     CWG1ISM = 0b0111;
  7997  0C78  3007               	movlw	7
  7998  0C79  008D               	movwf	13	;volatile
  7999  0C7A                     l4765:	
  8000                           
  8001                           ;configs.c: 141:     CWG1CON0bits.EN = 1;
  8002  0C7A  1790               	bsf	16,7	;volatile
  8003  0C7B                     l4767:	
  8004                           
  8005                           ;configs.c: 142:     CWG1CON0bits.LD = 1;
  8006  0C7B  1710               	bsf	16,6	;volatile
  8007                           
  8008                           ;configs.c: 144:     CLC1CON = 0b00000000;
  8009  0C7C  003C               	movlb	28	; select bank28
  8010  0C7D  0190               	clrf	16	;volatile
  8011  0C7E                     l4769:	
  8012                           
  8013                           ;configs.c: 145:     CLC1SEL0 = 0b00101010;
  8014  0C7E  302A               	movlw	42
  8015  0C7F  0092               	movwf	18	;volatile
  8016  0C80                     l4771:	
  8017                           
  8018                           ;configs.c: 146:     CLC1SEL1 = 0b00101010;
  8019  0C80  302A               	movlw	42
  8020  0C81  0093               	movwf	19	;volatile
  8021                           
  8022                           ;configs.c: 147:     CLC1POL = 0b00000000;
  8023  0C82  0191               	clrf	17	;volatile
  8024  0C83                     l4773:	
  8025                           
  8026                           ;configs.c: 148:     CLC1GLS0 = 0b00000010;
  8027  0C83  3002               	movlw	2
  8028  0C84  0096               	movwf	22	;volatile
  8029  0C85                     l4775:	
  8030                           
  8031                           ;configs.c: 149:     CLC1GLS1 = 0b00001000;
  8032  0C85  3008               	movlw	8
  8033  0C86  0097               	movwf	23	;volatile
  8034                           
  8035                           ;configs.c: 150:     CLC1GLS2 = 0;
  8036  0C87  0198               	clrf	24	;volatile
  8037                           
  8038                           ;configs.c: 151:     CLC1GLS3 = 0;
  8039  0C88  0199               	clrf	25	;volatile
  8040  0C89                     l4777:	
  8041                           
  8042                           ;configs.c: 152:     CLC1CONbits.LC1EN = 1;
  8043  0C89  1790               	bsf	16,7	;volatile
  8044                           
  8045                           ;configs.c: 154:     CLC2CON = 0b00000000;
  8046  0C8A  019A               	clrf	26	;volatile
  8047  0C8B                     l4779:	
  8048                           
  8049                           ;configs.c: 155:     CLC2SEL0 = 0b00101011;
  8050  0C8B  302B               	movlw	43
  8051  0C8C  009C               	movwf	28	;volatile
  8052  0C8D                     l4781:	
  8053                           
  8054                           ;configs.c: 156:     CLC2SEL1 = 0b00101011;
  8055  0C8D  302B               	movlw	43
  8056  0C8E  009D               	movwf	29	;volatile
  8057                           
  8058                           ;configs.c: 157:     CLC2POL = 0b00000000;
  8059  0C8F  019B               	clrf	27	;volatile
  8060  0C90                     l4783:	
  8061                           
  8062                           ;configs.c: 158:     CLC2GLS0 = 0b00000010;
  8063  0C90  3002               	movlw	2
  8064  0C91  00A0               	movwf	32	;volatile
  8065  0C92                     l4785:	
  8066                           
  8067                           ;configs.c: 159:     CLC2GLS1 = 0b00001000;
  8068  0C92  3008               	movlw	8
  8069  0C93  00A1               	movwf	33	;volatile
  8070                           
  8071                           ;configs.c: 160:     CLC2GLS2 = 0;
  8072  0C94  01A2               	clrf	34	;volatile
  8073                           
  8074                           ;configs.c: 161:     CLC2GLS3 = 0;
  8075  0C95  01A3               	clrf	35	;volatile
  8076  0C96                     l4787:	
  8077                           
  8078                           ;configs.c: 162:     CLC2CONbits.LC2EN = 1;
  8079  0C96  179A               	bsf	26,7	;volatile
  8080  0C97                     l4789:	
  8081                           
  8082                           ;configs.c: 164:     PIR4bits.TMR2IF = 0;
  8083  0C97  002E               	movlb	14	; select bank14
  8084  0C98  1090               	bcf	16,1	;volatile
  8085  0C99                     l4791:	
  8086                           
  8087                           ;configs.c: 165:     T2CONbits.ON = 1;
  8088  0C99  0025               	movlb	5	; select bank5
  8089  0C9A  178E               	bsf	14,7	;volatile
  8090  0C9B                     l4793:	
  8091                           
  8092                           ;configs.c: 166:     PWM6CONbits.EN = 1;
  8093  0C9B  0027               	movlb	7	; select bank7
  8094  0C9C  178E               	bsf	14,7	;volatile
  8095  0C9D                     l4795:	
  8096                           
  8097                           ;configs.c: 167:     PWM7CONbits.EN = 1;
  8098  0C9D  1792               	bsf	18,7	;volatile
  8099  0C9E                     l245:	
  8100  0C9E  0008               	return
  8101  0C9F                     __end_of_configurePWM:	
  8102                           
  8103                           	psect	text12
  8104  0A8D                     __ptext12:	
  8105 ;; *************** function _configureIOs *****************
  8106 ;; Defined at:
  8107 ;;		line 14 in file "configs.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;		None
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;		None
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  1    wreg      void 
  8114 ;; Registers used:
  8115 ;;		wreg, status,2
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 0/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;Total ram usage:        0 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:    7
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_main
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           
  8136                           ;psect for function _configureIOs
  8137  0A8D                     _configureIOs:	
  8138  0A8D                     l4681:	
  8139                           ;incstack = 0
  8140                           ; Regs used in _configureIOs: [wreg+status,2]
  8141                           
  8142                           
  8143                           ;configs.c: 15:     LATA = 0;
  8144  0A8D  0020               	movlb	0	; select bank0
  8145  0A8E  0196               	clrf	22	;volatile
  8146                           
  8147                           ;configs.c: 16:     LATB = 0;
  8148  0A8F  0197               	clrf	23	;volatile
  8149                           
  8150                           ;configs.c: 17:     LATC = 0;
  8151  0A90  0198               	clrf	24	;volatile
  8152                           
  8153                           ;configs.c: 18:     LATD = 0;
  8154  0A91  0199               	clrf	25	;volatile
  8155                           
  8156                           ;configs.c: 19:     LATE = 0;
  8157  0A92  019A               	clrf	26	;volatile
  8158                           
  8159                           ;configs.c: 21:     INLVLA = 0;
  8160  0A93  003E               	movlb	30	; select bank30
  8161  0A94  01BC               	clrf	60	;volatile
  8162                           
  8163                           ;configs.c: 22:     INLVLB = 0;
  8164  0A95  01C7               	clrf	71	;volatile
  8165                           
  8166                           ;configs.c: 23:     INLVLE = 0;
  8167  0A96  01E8               	clrf	104	;volatile
  8168  0A97                     l4683:	
  8169                           
  8170                           ;configs.c: 26:     TRISA = 0b11000000;
  8171  0A97  30C0               	movlw	192
  8172  0A98  0020               	movlb	0	; select bank0
  8173  0A99  0091               	movwf	17	;volatile
  8174  0A9A                     l4685:	
  8175                           
  8176                           ;configs.c: 27:     TRISB = 0b11001111;
  8177  0A9A  30CF               	movlw	207
  8178  0A9B  0092               	movwf	18	;volatile
  8179                           
  8180                           ;configs.c: 28:     TRISC = 0b00000000;
  8181  0A9C  0193               	clrf	19	;volatile
  8182                           
  8183                           ;configs.c: 29:     TRISD = 0b00000000;
  8184  0A9D  0194               	clrf	20	;volatile
  8185  0A9E                     l4687:	
  8186                           
  8187                           ;configs.c: 30:     TRISE = 0b0011;
  8188  0A9E  3003               	movlw	3
  8189  0A9F  0095               	movwf	21	;volatile
  8190  0AA0                     l4689:	
  8191                           
  8192                           ;configs.c: 32:     WPUA = 0b11000000;
  8193  0AA0  30C0               	movlw	192
  8194  0AA1  003E               	movlb	30	; select bank30
  8195  0AA2  00B9               	movwf	57	;volatile
  8196  0AA3                     l4691:	
  8197                           
  8198                           ;configs.c: 33:     WPUB = 0b11001111;
  8199  0AA3  30CF               	movlw	207
  8200  0AA4  00C4               	movwf	68	;volatile
  8201  0AA5                     l4693:	
  8202                           
  8203                           ;configs.c: 34:     WPUC = 0;
  8204  0AA5  01CF               	clrf	79	;volatile
  8205  0AA6                     l4695:	
  8206                           
  8207                           ;configs.c: 35:     WPUD = 0;
  8208  0AA6  01DA               	clrf	90	;volatile
  8209  0AA7                     l4697:	
  8210                           
  8211                           ;configs.c: 36:     WPUE = 0b0111;
  8212  0AA7  3007               	movlw	7
  8213  0AA8  00E5               	movwf	101	;volatile
  8214                           
  8215                           ;configs.c: 38:     ANSELA = 0;
  8216  0AA9  01B8               	clrf	56	;volatile
  8217                           
  8218                           ;configs.c: 39:     ANSELB = 0;
  8219  0AAA  01C3               	clrf	67	;volatile
  8220                           
  8221                           ;configs.c: 40:     ANSELC = 0;
  8222  0AAB  01CE               	clrf	78	;volatile
  8223                           
  8224                           ;configs.c: 41:     ANSELD = 0;
  8225  0AAC  01D9               	clrf	89	;volatile
  8226  0AAD                     l4699:	
  8227                           
  8228                           ;configs.c: 42:     ANSELE = 1;
  8229  0AAD  3001               	movlw	1
  8230  0AAE  00E4               	movwf	100	;volatile
  8231  0AAF                     l230:	
  8232  0AAF  0008               	return
  8233  0AB0                     __end_of_configureIOs:	
  8234                           
  8235                           	psect	text13
  8236  0A20                     __ptext13:	
  8237 ;; *************** function _configureI2C *****************
  8238 ;; Defined at:
  8239 ;;		line 81 in file "configs.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;		None
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;		None
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  1    wreg      void 
  8246 ;; Registers used:
  8247 ;;		wreg
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8257 ;;Total ram usage:        0 bytes
  8258 ;; Hardware stack levels used:    1
  8259 ;; Hardware stack levels required when called:    7
  8260 ;; This function calls:
  8261 ;;		Nothing
  8262 ;; This function is called by:
  8263 ;;		_main
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           
  8268                           ;psect for function _configureI2C
  8269  0A20                     _configureI2C:	
  8270  0A20                     l4709:	
  8271                           ;incstack = 0
  8272                           ; Regs used in _configureI2C: [wreg]
  8273                           
  8274                           
  8275                           ;configs.c: 82:  SSP1STAT = 0b01000000;
  8276  0A20  3040               	movlw	64
  8277  0A21  0023               	movlb	3	; select bank3
  8278  0A22  008F               	movwf	15	;volatile
  8279                           
  8280                           ;configs.c: 83:     SSP1CON1 = 0b00100110;
  8281  0A23  3026               	movlw	38
  8282  0A24  0090               	movwf	16	;volatile
  8283                           
  8284                           ;configs.c: 84:     SSP1CON2 = 0b00000001;
  8285  0A25  3001               	movlw	1
  8286  0A26  0091               	movwf	17	;volatile
  8287                           
  8288                           ;configs.c: 85:     SSP1CON3 = 0b00101011;
  8289  0A27  302B               	movlw	43
  8290  0A28  0092               	movwf	18	;volatile
  8291                           
  8292                           ;configs.c: 86:     SSP1ADD = 0b00110010;
  8293  0A29  3032               	movlw	50
  8294  0A2A  008D               	movwf	13	;volatile
  8295                           
  8296                           ;configs.c: 88:     SSP1CLKPPS = 0x0E;
  8297  0A2B  300E               	movlw	14
  8298  0A2C  003D               	movlb	29	; select bank29
  8299  0A2D  00C5               	movwf	69	;volatile
  8300                           
  8301                           ;configs.c: 89:     SSP1DATPPS = 0x0F;
  8302  0A2E  300F               	movlw	15
  8303  0A2F  00C6               	movwf	70	;volatile
  8304                           
  8305                           ;configs.c: 90:     RB6PPS = 0x14;
  8306  0A30  3014               	movlw	20
  8307  0A31  003E               	movlb	30	; select bank30
  8308  0A32  009E               	movwf	30	;volatile
  8309                           
  8310                           ;configs.c: 91:     RB7PPS = 0x15;
  8311  0A33  3015               	movlw	21
  8312  0A34  009F               	movwf	31	;volatile
  8313  0A35                     l239:	
  8314  0A35  0008               	return
  8315  0A36                     __end_of_configureI2C:	
  8316                           
  8317                           	psect	text14
  8318  09F1                     __ptext14:	
  8319 ;; *************** function _configureCPU *****************
  8320 ;; Defined at:
  8321 ;;		line 6 in file "configs.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;		None
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1    wreg      void 
  8328 ;; Registers used:
  8329 ;;		wreg
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8339 ;;Total ram usage:        0 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; Hardware stack levels required when called:    7
  8342 ;; This function calls:
  8343 ;;		Nothing
  8344 ;; This function is called by:
  8345 ;;		_main
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           
  8350                           ;psect for function _configureCPU
  8351  09F1                     _configureCPU:	
  8352  09F1                     l4677:	
  8353                           ;incstack = 0
  8354                           ; Regs used in _configureCPU: [wreg]
  8355                           
  8356                           
  8357                           ;configs.c: 7:     OSCCON1 = 0b01100000;
  8358  09F1  3060               	movlw	96
  8359  09F2  0031               	movlb	17	; select bank17
  8360  09F3  008D               	movwf	13	;volatile
  8361                           
  8362                           ;configs.c: 8:     OSCFRQ = 0b110;
  8363  09F4  3006               	movlw	6
  8364  09F5  0093               	movwf	19	;volatile
  8365                           
  8366                           ;configs.c: 10:     INTCON = 0b11000000;
  8367  09F6  30C0               	movlw	192
  8368  09F7  008B               	movwf	11	;volatile
  8369  09F8                     l4679:	
  8370                           
  8371                           ;configs.c: 11:     PIE3bits.SSP1IE = 1;
  8372  09F8  002E               	movlb	14	; select bank14
  8373  09F9  1419               	bsf	25,0	;volatile
  8374  09FA                     l227:	
  8375  09FA  0008               	return
  8376  09FB                     __end_of_configureCPU:	
  8377                           
  8378                           	psect	intentry
  8379  0004                     __pintentry:	
  8380 ;; *************** function _ISR *****************
  8381 ;; Defined at:
  8382 ;;		line 54 in file "Main.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;		None
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;		None
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  1    wreg      void 
  8389 ;; Registers used:
  8390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;Total ram usage:        0 bytes
  8401 ;; Hardware stack levels used:    1
  8402 ;; Hardware stack levels required when called:    6
  8403 ;; This function calls:
  8404 ;;		_i2cISR
  8405 ;; This function is called by:
  8406 ;;		Interrupt level 1
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410  0004                     _ISR:	
  8411                           
  8412                           ;incstack = 0
  8413  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8414                           
  8415                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8416  0005  3180               	pagesel	$
  8417  0006                     i1l4829:	
  8418                           
  8419                           ;Main.c: 55:     if(PIR3bits.SSP1IF == 1){
  8420  0006  002E               	movlb	14	; select bank14
  8421  0007  1C0F               	btfss	15,0	;volatile
  8422  0008  280A               	goto	u450_21
  8423  0009  280B               	goto	u450_20
  8424  000A                     u450_21:	
  8425  000A  280E               	goto	i1l333
  8426  000B                     u450_20:	
  8427  000B                     i1l4831:	
  8428                           
  8429                           ;Main.c: 57:         i2cISR();
  8430  000B  318A  22DB  3180   	fcall	_i2cISR
  8431  000E                     i1l333:	
  8432  000E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8433  000F  0009               	retfie
  8434  0010                     __end_of_ISR:	
  8435                           
  8436                           	psect	text16
  8437  0ADB                     __ptext16:	
  8438 ;; *************** function _i2cISR *****************
  8439 ;; Defined at:
  8440 ;;		line 18 in file "i2c.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;		None
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;  d               1   15[BANK0 ] unsigned char 
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  1    wreg      void 
  8447 ;; Registers used:
  8448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8456 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8457 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;Total ram usage:        2 bytes
  8459 ;; Hardware stack levels used:    1
  8460 ;; Hardware stack levels required when called:    5
  8461 ;; This function calls:
  8462 ;;		_handleRead
  8463 ;;		_handleWrite
  8464 ;; This function is called by:
  8465 ;;		_ISR
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           
  8470                           ;psect for function _i2cISR
  8471  0ADB                     _i2cISR:	
  8472  0ADB                     i1l4797:	
  8473                           ;incstack = 0
  8474                           ; Regs used in _i2cISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8475                           
  8476  0ADB                     i1l4799:	
  8477                           
  8478                           ;i2c.c: 20:     SSP1IF = 0;
  8479  0ADB  002E               	movlb	14	; select bank14
  8480  0ADC  100F               	bcf	15,0	;volatile
  8481  0ADD                     i1l4801:	
  8482                           
  8483                           ;i2c.c: 21:     d = SSP1BUF;
  8484  0ADD  0023               	movlb	3	; select bank3
  8485  0ADE  080C               	movf	12,w	;volatile
  8486  0ADF  0020               	movlb	0	; select bank0
  8487  0AE0  00AE               	movwf	??_i2cISR
  8488  0AE1  082E               	movf	??_i2cISR,w
  8489  0AE2  00AF               	movwf	i2cISR@d
  8490  0AE3                     i1l4803:	
  8491                           
  8492                           ;i2c.c: 22:     if(SSP1CON3bits.ACKTIM){
  8493  0AE3  0023               	movlb	3	; select bank3
  8494  0AE4  1F92               	btfss	18,7	;volatile
  8495  0AE5  2AE7               	goto	u445_21
  8496  0AE6  2AE8               	goto	u445_20
  8497  0AE7                     u445_21:	
  8498  0AE7  2AF6               	goto	i1l276
  8499  0AE8                     u445_20:	
  8500  0AE8                     i1l4805:	
  8501                           
  8502                           ;i2c.c: 23:         if(SSP1STATbits.D_nA){
  8503  0AE8  1E8F               	btfss	15,5	;volatile
  8504  0AE9  2AEB               	goto	u446_21
  8505  0AEA  2AEC               	goto	u446_20
  8506  0AEB                     u446_21:	
  8507  0AEB  2B07               	goto	i1l4819
  8508  0AEC                     u446_20:	
  8509  0AEC                     i1l4807:	
  8510                           
  8511                           ;i2c.c: 24:             if(SSP1STATbits.R_nW == 0)
  8512  0AEC  190F               	btfsc	15,2	;volatile
  8513  0AED  2AEF               	goto	u447_21
  8514  0AEE  2AF0               	goto	u447_20
  8515  0AEF                     u447_21:	
  8516  0AEF  2B07               	goto	i1l4819
  8517  0AF0                     u447_20:	
  8518  0AF0                     i1l4809:	
  8519                           
  8520                           ;i2c.c: 25:                 handleWrite(d);
  8521  0AF0  0020               	movlb	0	; select bank0
  8522  0AF1  082F               	movf	i2cISR@d,w
  8523  0AF2  318B  2342  318A   	fcall	_handleWrite
  8524  0AF5  2B07               	goto	i1l4819
  8525  0AF6                     i1l276:	
  8526                           
  8527                           ;i2c.c: 28:         if(!SSP1STATbits.D_nA){
  8528  0AF6  1A8F               	btfsc	15,5	;volatile
  8529  0AF7  2AF9               	goto	u448_21
  8530  0AF8  2AFA               	goto	u448_20
  8531  0AF9                     u448_21:	
  8532  0AF9  2B07               	goto	i1l4819
  8533  0AFA                     u448_20:	
  8534  0AFA                     i1l4811:	
  8535                           
  8536                           ;i2c.c: 29:             i2c_status = I2C_OPTIONS;
  8537  0AFA  0020               	movlb	0	; select bank0
  8538  0AFB  01D8               	clrf	_i2c_status
  8539  0AFC                     i1l4813:	
  8540                           
  8541                           ;i2c.c: 30:             if(SSP1STATbits.R_nW == 0)
  8542  0AFC  0023               	movlb	3	; select bank3
  8543  0AFD  190F               	btfsc	15,2	;volatile
  8544  0AFE  2B00               	goto	u449_21
  8545  0AFF  2B01               	goto	u449_20
  8546  0B00                     u449_21:	
  8547  0B00  2B04               	goto	i1l4817
  8548  0B01                     u449_20:	
  8549  0B01                     i1l4815:	
  8550                           
  8551                           ;i2c.c: 31:                 i2c_settings = 0;
  8552  0B01  0020               	movlb	0	; select bank0
  8553  0B02  01D7               	clrf	_i2c_settings
  8554  0B03  2B07               	goto	i1l4819
  8555  0B04                     i1l4817:	
  8556                           
  8557                           ;i2c.c: 33:                 handleRead();
  8558  0B04  318B  230B  318A   	fcall	_handleRead
  8559  0B07                     i1l4819:	
  8560                           
  8561                           ;i2c.c: 36:     SSP1CON2bits.ACKDT = 0;
  8562  0B07  0023               	movlb	3	; select bank3
  8563  0B08  1291               	bcf	17,5	;volatile
  8564  0B09                     i1l4821:	
  8565                           
  8566                           ;i2c.c: 37:     SSP1CON1bits.CKP = 1;
  8567  0B09  1610               	bsf	16,4	;volatile
  8568  0B0A                     i1l283:	
  8569  0B0A  0008               	return
  8570  0B0B                     __end_of_i2cISR:	
  8571                           
  8572                           	psect	text17
  8573  0B42                     __ptext17:	
  8574 ;; *************** function _handleWrite *****************
  8575 ;; Defined at:
  8576 ;;		line 40 in file "i2c.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  d               1    wreg     unsigned char 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;  d               1   13[BANK0 ] unsigned char 
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  1    wreg      void 
  8583 ;; Registers used:
  8584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;Total ram usage:        4 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:    4
  8597 ;; This function calls:
  8598 ;;		_setStatus
  8599 ;; This function is called by:
  8600 ;;		_i2cISR
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           
  8605                           ;psect for function _handleWrite
  8606  0B42                     _handleWrite:	
  8607                           
  8608                           ;incstack = 0
  8609                           ; Regs used in _handleWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8610                           ;handleWrite@d stored from wreg
  8611  0B42  0020               	movlb	0	; select bank0
  8612  0B43  00AD               	movwf	handleWrite@d
  8613  0B44                     i1l4369:	
  8614                           
  8615                           ;i2c.c: 41:     switch(i2c_status){
  8616  0B44  2B81               	goto	i1l4391
  8617  0B45                     i1l4371:	
  8618                           
  8619                           ;i2c.c: 43:             i2c_settings = d;
  8620  0B45  082D               	movf	handleWrite@d,w
  8621  0B46  00AA               	movwf	??_handleWrite
  8622  0B47  082A               	movf	??_handleWrite,w
  8623  0B48  00D7               	movwf	_i2c_settings
  8624  0B49                     i1l4373:	
  8625                           
  8626                           ;i2c.c: 44:             if(!i2c_settings)LATEbits.LATE2 = 1;
  8627  0B49  0857               	movf	_i2c_settings,w
  8628  0B4A  1D03               	btfss	3,2
  8629  0B4B  2B4D               	goto	u386_21
  8630  0B4C  2B4E               	goto	u386_20
  8631  0B4D                     u386_21:	
  8632  0B4D  2B4F               	goto	i1l288
  8633  0B4E                     u386_20:	
  8634  0B4E                     i1l4375:	
  8635  0B4E  151A               	bsf	26,2	;volatile
  8636  0B4F                     i1l288:	
  8637                           
  8638                           ;i2c.c: 45:             i2c_status = I2C_VALUE;
  8639  0B4F  01D8               	clrf	_i2c_status
  8640  0B50  0AD8               	incf	_i2c_status,f
  8641                           
  8642                           ;i2c.c: 46:             break;
  8643  0B51  2B94               	goto	i1l293
  8644  0B52                     i1l4377:	
  8645                           
  8646                           ;i2c.c: 48:             i2c_val = d;
  8647  0B52  082D               	movf	handleWrite@d,w
  8648  0B53  00AA               	movwf	??_handleWrite
  8649  0B54  082A               	movf	??_handleWrite,w
  8650  0B55  00D6               	movwf	_i2c_val
  8651  0B56                     i1l4379:	
  8652                           
  8653                           ;i2c.c: 49:             setStatus(i2c_settings,i2c_val,-1);
  8654  0B56  0856               	movf	_i2c_val,w
  8655  0B57  00AA               	movwf	??_handleWrite
  8656  0B58  082A               	movf	??_handleWrite,w
  8657  0B59  00A2               	movwf	setStatus@v
  8658  0B5A  30FF               	movlw	255
  8659  0B5B  00A3               	movwf	setStatus@v2
  8660  0B5C  30FF               	movlw	255
  8661  0B5D  00A4               	movwf	setStatus@v2+1
  8662  0B5E  0857               	movf	_i2c_settings,w
  8663  0B5F  318C  249F  318B   	fcall	_setStatus
  8664  0B62                     i1l4381:	
  8665                           
  8666                           ;i2c.c: 50:             i2c_status = I2C_VALUE2;
  8667  0B62  3002               	movlw	2
  8668  0B63  0020               	movlb	0	; select bank0
  8669  0B64  00AA               	movwf	??_handleWrite
  8670  0B65  082A               	movf	??_handleWrite,w
  8671  0B66  00D8               	movwf	_i2c_status
  8672                           
  8673                           ;i2c.c: 51:             break;
  8674  0B67  2B94               	goto	i1l293
  8675  0B68                     i1l4383:	
  8676                           
  8677                           ;i2c.c: 54:             setStatus(i2c_settings,i2c_val,(int)d);
  8678  0B68  0856               	movf	_i2c_val,w
  8679  0B69  00AA               	movwf	??_handleWrite
  8680  0B6A  082A               	movf	??_handleWrite,w
  8681  0B6B  00A2               	movwf	setStatus@v
  8682  0B6C  082D               	movf	handleWrite@d,w
  8683  0B6D  00AB               	movwf	??_handleWrite+1
  8684  0B6E  01AC               	clrf	??_handleWrite+2
  8685  0B6F  082B               	movf	??_handleWrite+1,w
  8686  0B70  00A3               	movwf	setStatus@v2
  8687  0B71  082C               	movf	??_handleWrite+2,w
  8688  0B72  00A4               	movwf	setStatus@v2+1
  8689  0B73  0857               	movf	_i2c_settings,w
  8690  0B74  318C  249F  318B   	fcall	_setStatus
  8691  0B77                     i1l4385:	
  8692                           
  8693                           ;i2c.c: 55:             i2c_status = I2C_OPTIONS;
  8694  0B77  0020               	movlb	0	; select bank0
  8695  0B78  01D8               	clrf	_i2c_status
  8696                           
  8697                           ;i2c.c: 56:             break;
  8698  0B79  2B94               	goto	i1l293
  8699  0B7A                     i1l292:	
  8700                           ;i2c.c: 57:         default:
  8701                           
  8702                           
  8703                           ;i2c.c: 58:             i2c_status = I2C_VALUE;
  8704  0B7A  01D8               	clrf	_i2c_status
  8705  0B7B  0AD8               	incf	_i2c_status,f
  8706  0B7C                     i1l4387:	
  8707                           
  8708                           ;i2c.c: 59:             i2c_settings = d;
  8709  0B7C  082D               	movf	handleWrite@d,w
  8710  0B7D  00AA               	movwf	??_handleWrite
  8711  0B7E  082A               	movf	??_handleWrite,w
  8712  0B7F  00D7               	movwf	_i2c_settings
  8713                           
  8714                           ;i2c.c: 60:             break;
  8715  0B80  2B94               	goto	i1l293
  8716  0B81                     i1l4391:	
  8717  0B81  0858               	movf	_i2c_status,w
  8718  0B82  00AA               	movwf	??_handleWrite
  8719  0B83  01AB               	clrf	??_handleWrite+1
  8720                           
  8721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8722                           ; Switch size 1, requested type "simple"
  8723                           ; Number of cases is 1, Range of values is 0 to 0
  8724                           ; switch strategies available:
  8725                           ; Name         Instructions Cycles
  8726                           ; simple_byte            4     3 (average)
  8727                           ; direct_byte            8     6 (fixed)
  8728                           ; jumptable            260     6 (fixed)
  8729                           ;	Chosen strategy is simple_byte
  8730  0B84  082B               	movf	??_handleWrite+1,w
  8731  0B85  3A00               	xorlw	0	; case 0
  8732  0B86  1903               	skipnz
  8733  0B87  2B89               	goto	i1l5103
  8734  0B88  2B7A               	goto	i1l292
  8735  0B89                     i1l5103:	
  8736                           
  8737                           ; Switch size 1, requested type "simple"
  8738                           ; Number of cases is 3, Range of values is 0 to 2
  8739                           ; switch strategies available:
  8740                           ; Name         Instructions Cycles
  8741                           ; simple_byte           10     6 (average)
  8742                           ; direct_byte           12     6 (fixed)
  8743                           ; jumptable            260     6 (fixed)
  8744                           ;	Chosen strategy is simple_byte
  8745  0B89  082A               	movf	??_handleWrite,w
  8746  0B8A  3A00               	xorlw	0	; case 0
  8747  0B8B  1903               	skipnz
  8748  0B8C  2B45               	goto	i1l4371
  8749  0B8D  3A01               	xorlw	1	; case 1
  8750  0B8E  1903               	skipnz
  8751  0B8F  2B52               	goto	i1l4377
  8752  0B90  3A03               	xorlw	3	; case 2
  8753  0B91  1903               	skipnz
  8754  0B92  2B68               	goto	i1l4383
  8755  0B93  2B7A               	goto	i1l292
  8756  0B94                     i1l293:	
  8757  0B94  0008               	return
  8758  0B95                     __end_of_handleWrite:	
  8759                           
  8760                           	psect	text18
  8761  0C9F                     __ptext18:	
  8762 ;; *************** function _setStatus *****************
  8763 ;; Defined at:
  8764 ;;		line 12 in file "settings.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  s               1    wreg     unsigned char 
  8767 ;;  v               1    2[BANK0 ] unsigned char 
  8768 ;;  v2              2    3[BANK0 ] int 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;  s               1    9[BANK0 ] unsigned char 
  8771 ;;  motor           1    8[BANK0 ] unsigned char 
  8772 ;;  dir             1    7[BANK0 ] unsigned char 
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  1    wreg      void 
  8775 ;; Registers used:
  8776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8782 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8785 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8786 ;;Total ram usage:        8 bytes
  8787 ;; Hardware stack levels used:    1
  8788 ;; Hardware stack levels required when called:    3
  8789 ;; This function calls:
  8790 ;;		_revRoutine
  8791 ;;		_setDrive
  8792 ;;		_setDrive2
  8793 ;;		_setRoutine
  8794 ;;		i1_setMotors
  8795 ;; This function is called by:
  8796 ;;		_handleWrite
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           
  8800                           
  8801                           ;psect for function _setStatus
  8802  0C9F                     _setStatus:	
  8803                           
  8804                           ;incstack = 0
  8805                           ; Regs used in _setStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8806                           ;setStatus@s stored from wreg
  8807  0C9F  0020               	movlb	0	; select bank0
  8808  0CA0  00A9               	movwf	setStatus@s
  8809  0CA1                     i1l4239:	
  8810                           
  8811                           ;settings.c: 13:     unsigned char dir = s&0b111;
  8812  0CA1  0829               	movf	setStatus@s,w
  8813  0CA2  3907               	andlw	7
  8814  0CA3  00A5               	movwf	??_setStatus
  8815  0CA4  0825               	movf	??_setStatus,w
  8816  0CA5  00A7               	movwf	setStatus@dir
  8817  0CA6                     i1l4241:	
  8818                           
  8819                           ;settings.c: 14:     unsigned char motor = (s&0b111000)>>3;
  8820  0CA6  0829               	movf	setStatus@s,w
  8821  0CA7  00A5               	movwf	??_setStatus
  8822  0CA8  3003               	movlw	3
  8823  0CA9                     u343_25:	
  8824  0CA9  36A5               	lsrf	??_setStatus,f
  8825  0CAA  0B89               	decfsz	9,f
  8826  0CAB  2CA9               	goto	u343_25
  8827  0CAC  0825               	movf	??_setStatus,w
  8828  0CAD  3907               	andlw	7
  8829  0CAE  00A6               	movwf	??_setStatus+1
  8830  0CAF  0826               	movf	??_setStatus+1,w
  8831  0CB0  00A8               	movwf	setStatus@motor
  8832  0CB1                     i1l4243:	
  8833                           
  8834                           ;settings.c: 15:     if(v2 >= 0){
  8835  0CB1  1BA4               	btfsc	setStatus@v2+1,7
  8836  0CB2  2CB4               	goto	u344_21
  8837  0CB3  2CB5               	goto	u344_20
  8838  0CB4                     u344_21:	
  8839  0CB4  2CC2               	goto	i1l442
  8840  0CB5                     u344_20:	
  8841  0CB5                     i1l4245:	
  8842                           
  8843                           ;settings.c: 17:         setDrive2(dir,v,v2);
  8844  0CB5  0822               	movf	setStatus@v,w
  8845  0CB6  00A5               	movwf	??_setStatus
  8846  0CB7  0825               	movf	??_setStatus,w
  8847  0CB8  00F6               	movwf	setDrive2@v
  8848  0CB9  0823               	movf	setStatus@v2,w
  8849  0CBA  00A6               	movwf	??_setStatus+1
  8850  0CBB  0826               	movf	??_setStatus+1,w
  8851  0CBC  00F7               	movwf	setDrive2@v2
  8852  0CBD  0827               	movf	setStatus@dir,w
  8853  0CBE  318E  26B2  318C   	fcall	_setDrive2
  8854  0CC1  2D0F               	goto	i1l443
  8855  0CC2                     i1l442:	
  8856                           ;settings.c: 19:     }
  8857                           
  8858                           
  8859                           ;settings.c: 20:     if(s & 0b01000000){
  8860  0CC2  1F29               	btfss	setStatus@s,6
  8861  0CC3  2CC5               	goto	u345_21
  8862  0CC4  2CC6               	goto	u345_20
  8863  0CC5                     u345_21:	
  8864  0CC5  2CD4               	goto	i1l4255
  8865  0CC6                     u345_20:	
  8866  0CC6                     i1l4249:	
  8867                           
  8868                           ;settings.c: 22:         if(!(s & 0b00100000))
  8869  0CC6  1AA9               	btfsc	setStatus@s,5
  8870  0CC7  2CC9               	goto	u346_21
  8871  0CC8  2CCA               	goto	u346_20
  8872  0CC9                     u346_21:	
  8873  0CC9  2CCF               	goto	i1l4253
  8874  0CCA                     u346_20:	
  8875  0CCA                     i1l4251:	
  8876                           
  8877                           ;settings.c: 23:             setRoutine(s);
  8878  0CCA  0829               	movf	setStatus@s,w
  8879  0CCB  318F  274A  318C   	fcall	_setRoutine
  8880  0CCE  2D0F               	goto	i1l443
  8881  0CCF                     i1l4253:	
  8882                           
  8883                           ;settings.c: 25:             revRoutine(s);
  8884  0CCF  0829               	movf	setStatus@s,w
  8885  0CD0  318A  22B0  318C   	fcall	_revRoutine
  8886  0CD3  2D0F               	goto	i1l443
  8887  0CD4                     i1l4255:	
  8888                           
  8889                           ;settings.c: 28:         if(s & 0b111000){
  8890  0CD4  0829               	movf	setStatus@s,w
  8891  0CD5  3938               	andlw	56
  8892  0CD6  1903               	btfsc	3,2
  8893  0CD7  2CD9               	goto	u347_21
  8894  0CD8  2CDA               	goto	u347_20
  8895  0CD9                     u347_21:	
  8896  0CD9  2D07               	goto	i1l4277
  8897  0CDA                     u347_20:	
  8898  0CDA                     i1l4257:	
  8899                           
  8900                           ;settings.c: 30:             LATEbits.LATE2 = 0;
  8901  0CDA  111A               	bcf	26,2	;volatile
  8902  0CDB                     i1l4259:	
  8903                           
  8904                           ;settings.c: 31:             if(motor==1)props.revolver.stat |= 0x10;
  8905  0CDB  0328               	decf	setStatus@motor,w
  8906  0CDC  1D03               	btfss	3,2
  8907  0CDD  2CDF               	goto	u348_21
  8908  0CDE  2CE0               	goto	u348_20
  8909  0CDF                     u348_21:	
  8910  0CDF  2CE2               	goto	i1l4263
  8911  0CE0                     u348_20:	
  8912  0CE0                     i1l4261:	
  8913  0CE0  1661               	bsf	_props+8,4
  8914  0CE1  2CFA               	goto	i1l4275
  8915  0CE2                     i1l4263:	
  8916  0CE2  3002               	movlw	2
  8917  0CE3  0628               	xorwf	setStatus@motor,w
  8918  0CE4  1D03               	btfss	3,2
  8919  0CE5  2CE7               	goto	u349_21
  8920  0CE6  2CE8               	goto	u349_20
  8921  0CE7                     u349_21:	
  8922  0CE7  2CEA               	goto	i1l4267
  8923  0CE8                     u349_20:	
  8924  0CE8                     i1l4265:	
  8925  0CE8  15DB               	bsf	_props+2,3
  8926  0CE9  2CFA               	goto	i1l4275
  8927  0CEA                     i1l4267:	
  8928  0CEA  3003               	movlw	3
  8929  0CEB  0628               	xorwf	setStatus@motor,w
  8930  0CEC  1D03               	btfss	3,2
  8931  0CED  2CEF               	goto	u350_21
  8932  0CEE  2CF0               	goto	u350_20
  8933  0CEF                     u350_21:	
  8934  0CEF  2CF2               	goto	i1l4271
  8935  0CF0                     u350_20:	
  8936  0CF0                     i1l4269:	
  8937  0CF0  15DA               	bsf	_props+1,3
  8938  0CF1  2CFA               	goto	i1l4275
  8939  0CF2                     i1l4271:	
  8940  0CF2  3004               	movlw	4
  8941  0CF3  0628               	xorwf	setStatus@motor,w
  8942  0CF4  1D03               	btfss	3,2
  8943  0CF5  2CF7               	goto	u351_21
  8944  0CF6  2CF8               	goto	u351_20
  8945  0CF7                     u351_21:	
  8946  0CF7  2CFA               	goto	i1l452
  8947  0CF8                     u351_20:	
  8948  0CF8                     i1l4273:	
  8949  0CF8  15D9               	bsf	_props,3
  8950  0CF9  2CFA               	goto	i1l4275
  8951  0CFA                     i1l452:	
  8952  0CFA                     i1l4275:	
  8953                           
  8954                           ;settings.c: 35:             setMotors(motor,dir,v);
  8955  0CFA  0827               	movf	setStatus@dir,w
  8956  0CFB  00A5               	movwf	??_setStatus
  8957  0CFC  0825               	movf	??_setStatus,w
  8958  0CFD  00F6               	movwf	i1setMotors@dir
  8959  0CFE  0822               	movf	setStatus@v,w
  8960  0CFF  00A6               	movwf	??_setStatus+1
  8961  0D00  0826               	movf	??_setStatus+1,w
  8962  0D01  00F7               	movwf	i1setMotors@v
  8963  0D02  0828               	movf	setStatus@motor,w
  8964  0D03  3185  2567  318C   	fcall	i1_setMotors
  8965                           
  8966                           ;settings.c: 36:         }
  8967  0D06  2D0F               	goto	i1l443
  8968  0D07                     i1l4277:	
  8969                           
  8970                           ;settings.c: 38:             setDrive(dir,v);
  8971  0D07  0822               	movf	setStatus@v,w
  8972  0D08  00A5               	movwf	??_setStatus
  8973  0D09  0825               	movf	??_setStatus,w
  8974  0D0A  00F6               	movwf	setDrive@v
  8975  0D0B  0827               	movf	setStatus@dir,w
  8976  0D0C  3186  26D5  318C   	fcall	_setDrive
  8977  0D0F                     i1l443:	
  8978  0D0F  0008               	return
  8979  0D10                     __end_of_setStatus:	
  8980                           
  8981                           	psect	text19
  8982  0F4A                     __ptext19:	
  8983 ;; *************** function _setRoutine *****************
  8984 ;; Defined at:
  8985 ;;		line 70 in file "settings.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;  s               1    wreg     unsigned char 
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;  s               1    0[BANK0 ] unsigned char 
  8990 ;;  i               1    1[BANK0 ] unsigned char 
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  1    wreg      void 
  8993 ;; Registers used:
  8994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9001 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9003 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;Total ram usage:        4 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; Hardware stack levels required when called:    2
  9007 ;; This function calls:
  9008 ;;		i1_setMotors
  9009 ;; This function is called by:
  9010 ;;		_setStatus
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           
  9015                           ;psect for function _setRoutine
  9016  0F4A                     _setRoutine:	
  9017                           
  9018                           ;incstack = 0
  9019                           ; Regs used in _setRoutine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9020                           ;setRoutine@s stored from wreg
  9021  0F4A  0020               	movlb	0	; select bank0
  9022  0F4B  00A0               	movwf	setRoutine@s
  9023  0F4C                     i1l4023:	
  9024                           
  9025                           ;settings.c: 71:     if(s&0b1111)
  9026  0F4C  0820               	movf	setRoutine@s,w
  9027  0F4D  390F               	andlw	15
  9028  0F4E  1903               	btfsc	3,2
  9029  0F4F  2F51               	goto	u333_21
  9030  0F50  2F52               	goto	u333_20
  9031  0F51                     u333_21:	
  9032  0F51  2F5E               	goto	i1l4027
  9033  0F52                     u333_20:	
  9034  0F52                     i1l4025:	
  9035                           
  9036                           ;settings.c: 72:         props.claw1.time1 = props.time;
  9037  0F52  300D               	movlw	13
  9038  0F53  3E59               	addlw	(low (_props| 0))& (0+255)
  9039  0F54  0086               	movwf	6
  9040  0F55  0187               	clrf	7
  9041  0F56  3F40               	moviw [0]fsr1
  9042  0F57  00DD               	movwf	_props+4
  9043  0F58  3F41               	moviw [1]fsr1
  9044  0F59  00DE               	movwf	_props+5
  9045  0F5A  3F42               	moviw [2]fsr1
  9046  0F5B  00DF               	movwf	_props+6
  9047  0F5C  3F43               	moviw [3]fsr1
  9048  0F5D  00E0               	movwf	_props+7
  9049  0F5E                     i1l4027:	
  9050                           
  9051                           ;settings.c: 75:     props.claw1.clamped &= 0b11110111;
  9052  0F5E  30F7               	movlw	247
  9053  0F5F  00FB               	movwf	??_setRoutine
  9054  0F60  087B               	movf	??_setRoutine,w
  9055  0F61  05D9               	andwf	_props,f
  9056  0F62                     i1l4029:	
  9057                           
  9058                           ;settings.c: 76:     props.claw1.orientation &= 0b11110111;
  9059  0F62  30F7               	movlw	247
  9060  0F63  00FB               	movwf	??_setRoutine
  9061  0F64  087B               	movf	??_setRoutine,w
  9062  0F65  05DA               	andwf	_props+1,f
  9063  0F66                     i1l4031:	
  9064                           
  9065                           ;settings.c: 77:     props.claw1.height &= 0b11110111;
  9066  0F66  30F7               	movlw	247
  9067  0F67  00FB               	movwf	??_setRoutine
  9068  0F68  087B               	movf	??_setRoutine,w
  9069  0F69  05DB               	andwf	_props+2,f
  9070                           
  9071                           ;settings.c: 78:     switch(s&0b1111){
  9072  0F6A  2FDC               	goto	i1l4071
  9073  0F6B                     i1l4033:	
  9074                           
  9075                           ;settings.c: 80:             props.claw1.routine = 0;
  9076  0F6B  01DC               	clrf	_props+3
  9077                           
  9078                           ;settings.c: 81:             break;
  9079  0F6C  2FFF               	goto	i1l488
  9080  0F6D                     i1l4035:	
  9081                           
  9082                           ;settings.c: 83:             setMotors(2,1,64);
  9083  0F6D  01F6               	clrf	i1setMotors@dir
  9084  0F6E  0AF6               	incf	i1setMotors@dir,f
  9085  0F6F  3040               	movlw	64
  9086  0F70  00FB               	movwf	??_setRoutine
  9087  0F71  087B               	movf	??_setRoutine,w
  9088  0F72  00F7               	movwf	i1setMotors@v
  9089  0F73  3002               	movlw	2
  9090  0F74  3185  2567  318F   	fcall	i1_setMotors
  9091  0F77                     i1l4037:	
  9092                           
  9093                           ;settings.c: 84:             props.claw1.routine = 0x11;
  9094  0F77  3011               	movlw	17
  9095  0F78  00FB               	movwf	??_setRoutine
  9096  0F79  087B               	movf	??_setRoutine,w
  9097  0F7A  0020               	movlb	0	; select bank0
  9098  0F7B  00DC               	movwf	_props+3
  9099                           
  9100                           ;settings.c: 85:             break;
  9101  0F7C  2FFF               	goto	i1l488
  9102  0F7D                     i1l4039:	
  9103                           
  9104                           ;settings.c: 87:             setMotors(2,1,64);
  9105  0F7D  01F6               	clrf	i1setMotors@dir
  9106  0F7E  0AF6               	incf	i1setMotors@dir,f
  9107  0F7F  3040               	movlw	64
  9108  0F80  00FB               	movwf	??_setRoutine
  9109  0F81  087B               	movf	??_setRoutine,w
  9110  0F82  00F7               	movwf	i1setMotors@v
  9111  0F83  3002               	movlw	2
  9112  0F84  3185  2567  318F   	fcall	i1_setMotors
  9113  0F87                     i1l4041:	
  9114                           
  9115                           ;settings.c: 88:             props.claw1.routine = 0x24;
  9116  0F87  3024               	movlw	36
  9117  0F88  00FB               	movwf	??_setRoutine
  9118  0F89  087B               	movf	??_setRoutine,w
  9119  0F8A  0020               	movlb	0	; select bank0
  9120  0F8B  00DC               	movwf	_props+3
  9121                           
  9122                           ;settings.c: 89:             break;
  9123  0F8C  2FFF               	goto	i1l488
  9124  0F8D                     i1l4043:	
  9125                           
  9126                           ;settings.c: 91:             setMotors(4,1,64);
  9127  0F8D  01F6               	clrf	i1setMotors@dir
  9128  0F8E  0AF6               	incf	i1setMotors@dir,f
  9129  0F8F  3040               	movlw	64
  9130  0F90  00FB               	movwf	??_setRoutine
  9131  0F91  087B               	movf	??_setRoutine,w
  9132  0F92  00F7               	movwf	i1setMotors@v
  9133  0F93  3004               	movlw	4
  9134  0F94  3185  2567  318F   	fcall	i1_setMotors
  9135  0F97                     i1l4045:	
  9136                           
  9137                           ;settings.c: 92:             props.claw1.routine = 0x31;
  9138  0F97  3031               	movlw	49
  9139  0F98  00FB               	movwf	??_setRoutine
  9140  0F99  087B               	movf	??_setRoutine,w
  9141  0F9A  0020               	movlb	0	; select bank0
  9142  0F9B  00DC               	movwf	_props+3
  9143                           
  9144                           ;settings.c: 93:             break;
  9145  0F9C  2FFF               	goto	i1l488
  9146  0F9D                     i1l4047:	
  9147                           
  9148                           ;settings.c: 95:             setMotors(4,0,64);
  9149  0F9D  01F6               	clrf	i1setMotors@dir
  9150  0F9E  3040               	movlw	64
  9151  0F9F  00FB               	movwf	??_setRoutine
  9152  0FA0  087B               	movf	??_setRoutine,w
  9153  0FA1  00F7               	movwf	i1setMotors@v
  9154  0FA2  3004               	movlw	4
  9155  0FA3  3185  2567  318F   	fcall	i1_setMotors
  9156  0FA6                     i1l4049:	
  9157                           
  9158                           ;settings.c: 96:             props.claw1.routine = 0x41;
  9159  0FA6  3041               	movlw	65
  9160  0FA7  00FB               	movwf	??_setRoutine
  9161  0FA8  087B               	movf	??_setRoutine,w
  9162  0FA9  0020               	movlb	0	; select bank0
  9163  0FAA  00DC               	movwf	_props+3
  9164                           
  9165                           ;settings.c: 97:             break;
  9166  0FAB  2FFF               	goto	i1l488
  9167  0FAC                     i1l4051:	
  9168                           
  9169                           ;settings.c: 99:             setMotors(2,0,64);
  9170  0FAC  01F6               	clrf	i1setMotors@dir
  9171  0FAD  3040               	movlw	64
  9172  0FAE  00FB               	movwf	??_setRoutine
  9173  0FAF  087B               	movf	??_setRoutine,w
  9174  0FB0  00F7               	movwf	i1setMotors@v
  9175  0FB1  3002               	movlw	2
  9176  0FB2  3185  2567  318F   	fcall	i1_setMotors
  9177                           
  9178                           ;settings.c: 100:             setMotors(3,0,64);
  9179  0FB5  01F6               	clrf	i1setMotors@dir
  9180  0FB6  3040               	movlw	64
  9181  0FB7  00FB               	movwf	??_setRoutine
  9182  0FB8  087B               	movf	??_setRoutine,w
  9183  0FB9  00F7               	movwf	i1setMotors@v
  9184  0FBA  3003               	movlw	3
  9185  0FBB  3185  2567  318F   	fcall	i1_setMotors
  9186  0FBE                     i1l4053:	
  9187                           
  9188                           ;settings.c: 101:             props.claw1.routine = 0x52;
  9189  0FBE  3052               	movlw	82
  9190  0FBF  00FB               	movwf	??_setRoutine
  9191  0FC0  087B               	movf	??_setRoutine,w
  9192  0FC1  0020               	movlb	0	; select bank0
  9193  0FC2  00DC               	movwf	_props+3
  9194                           
  9195                           ;settings.c: 102:             break;
  9196  0FC3  2FFF               	goto	i1l488
  9197  0FC4                     i1l4055:	
  9198                           
  9199                           ;settings.c: 104:             props.claw1.routine = 0x64;
  9200  0FC4  3064               	movlw	100
  9201  0FC5  00FB               	movwf	??_setRoutine
  9202  0FC6  087B               	movf	??_setRoutine,w
  9203  0FC7  00DC               	movwf	_props+3
  9204                           
  9205                           ;settings.c: 105:             break;
  9206  0FC8  2FFF               	goto	i1l488
  9207  0FC9                     i1l4057:	
  9208                           
  9209                           ;settings.c: 107:             for(char i=0;i<5;++i)
  9210  0FC9  01A1               	clrf	setRoutine@i
  9211  0FCA                     i1l4063:	
  9212                           
  9213                           ;settings.c: 108:                 setMotors(i,0,0);
  9214  0FCA  01F6               	clrf	i1setMotors@dir
  9215  0FCB  01F7               	clrf	i1setMotors@v
  9216  0FCC  0821               	movf	setRoutine@i,w
  9217  0FCD  3185  2567  318F   	fcall	i1_setMotors
  9218  0FD0                     i1l4065:	
  9219  0FD0  3001               	movlw	1
  9220  0FD1  00FB               	movwf	??_setRoutine
  9221  0FD2  087B               	movf	??_setRoutine,w
  9222  0FD3  0020               	movlb	0	; select bank0
  9223  0FD4  07A1               	addwf	setRoutine@i,f
  9224  0FD5                     i1l4067:	
  9225  0FD5  3005               	movlw	5
  9226  0FD6  0221               	subwf	setRoutine@i,w
  9227  0FD7  1C03               	skipc
  9228  0FD8  2FDA               	goto	u334_21
  9229  0FD9  2FDB               	goto	u334_20
  9230  0FDA                     u334_21:	
  9231  0FDA  2FCA               	goto	i1l4063
  9232  0FDB                     u334_20:	
  9233  0FDB  2FFF               	goto	i1l488
  9234  0FDC                     i1l4071:	
  9235  0FDC  0820               	movf	setRoutine@s,w
  9236  0FDD  390F               	andlw	15
  9237  0FDE  00FB               	movwf	??_setRoutine
  9238  0FDF  01FC               	clrf	??_setRoutine+1
  9239                           
  9240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9241                           ; Switch size 1, requested type "simple"
  9242                           ; Number of cases is 1, Range of values is 0 to 0
  9243                           ; switch strategies available:
  9244                           ; Name         Instructions Cycles
  9245                           ; simple_byte            4     3 (average)
  9246                           ; direct_byte            8     6 (fixed)
  9247                           ; jumptable            260     6 (fixed)
  9248                           ;	Chosen strategy is simple_byte
  9249  0FE0  087C               	movf	??_setRoutine+1,w
  9250  0FE1  3A00               	xorlw	0	; case 0
  9251  0FE2  1903               	skipnz
  9252  0FE3  2FE5               	goto	i1l5105
  9253  0FE4  2FFF               	goto	i1l488
  9254  0FE5                     i1l5105:	
  9255                           
  9256                           ; Switch size 1, requested type "simple"
  9257                           ; Number of cases is 8, Range of values is 0 to 15
  9258                           ; switch strategies available:
  9259                           ; Name         Instructions Cycles
  9260                           ; simple_byte           25    13 (average)
  9261                           ; direct_byte           38     6 (fixed)
  9262                           ; jumptable            260     6 (fixed)
  9263                           ;	Chosen strategy is simple_byte
  9264  0FE5  087B               	movf	??_setRoutine,w
  9265  0FE6  3A00               	xorlw	0	; case 0
  9266  0FE7  1903               	skipnz
  9267  0FE8  2F6B               	goto	i1l4033
  9268  0FE9  3A01               	xorlw	1	; case 1
  9269  0FEA  1903               	skipnz
  9270  0FEB  2F6D               	goto	i1l4035
  9271  0FEC  3A03               	xorlw	3	; case 2
  9272  0FED  1903               	skipnz
  9273  0FEE  2F7D               	goto	i1l4039
  9274  0FEF  3A01               	xorlw	1	; case 3
  9275  0FF0  1903               	skipnz
  9276  0FF1  2F8D               	goto	i1l4043
  9277  0FF2  3A07               	xorlw	7	; case 4
  9278  0FF3  1903               	skipnz
  9279  0FF4  2F9D               	goto	i1l4047
  9280  0FF5  3A01               	xorlw	1	; case 5
  9281  0FF6  1903               	skipnz
  9282  0FF7  2FAC               	goto	i1l4051
  9283  0FF8  3A03               	xorlw	3	; case 6
  9284  0FF9  1903               	skipnz
  9285  0FFA  2FC4               	goto	i1l4055
  9286  0FFB  3A09               	xorlw	9	; case 15
  9287  0FFC  1903               	skipnz
  9288  0FFD  2FC9               	goto	i1l4057
  9289  0FFE  2FFF               	goto	i1l488
  9290  0FFF                     i1l488:	
  9291  0FFF  0008               	return
  9292  1000                     __end_of_setRoutine:	
  9293                           
  9294                           	psect	text20
  9295  0EB2                     __ptext20:	
  9296 ;; *************** function _setDrive2 *****************
  9297 ;; Defined at:
  9298 ;;		line 252 in file "settings.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;  dir             1    wreg     unsigned char 
  9301 ;;  v               1    6[COMMON] unsigned char 
  9302 ;;  v2              1    7[COMMON] unsigned char 
  9303 ;; Auto vars:     Size  Location     Type
  9304 ;;  dir             1   10[COMMON] unsigned char 
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  1    wreg      void 
  9307 ;; Registers used:
  9308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9317 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9318 ;;Total ram usage:        5 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; Hardware stack levels required when called:    1
  9321 ;; This function calls:
  9322 ;;		i1_setPWM
  9323 ;; This function is called by:
  9324 ;;		_setStatus
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           
  9329                           ;psect for function _setDrive2
  9330  0EB2                     _setDrive2:	
  9331                           
  9332                           ;incstack = 0
  9333                           ; Regs used in _setDrive2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9334                           ;setDrive2@dir stored from wreg
  9335  0EB2  00FA               	movwf	setDrive2@dir
  9336  0EB3                     i1l3959:	
  9337                           
  9338                           ;settings.c: 253:     if((driveDir != dir) || (drivePWM1 != v) || (drivePWM2 != v2)){
  9339  0EB3  0020               	movlb	0	; select bank0
  9340  0EB4  0855               	movf	_driveDir,w
  9341  0EB5  067A               	xorwf	setDrive2@dir,w
  9342  0EB6  1D03               	skipz
  9343  0EB7  2EB9               	goto	u330_21
  9344  0EB8  2EBA               	goto	u330_20
  9345  0EB9                     u330_21:	
  9346  0EB9  2EC6               	goto	i1l3965
  9347  0EBA                     u330_20:	
  9348  0EBA                     i1l3961:	
  9349  0EBA  0854               	movf	_drivePWM1,w
  9350  0EBB  0676               	xorwf	setDrive2@v,w
  9351  0EBC  1D03               	skipz
  9352  0EBD  2EBF               	goto	u331_21
  9353  0EBE  2EC0               	goto	u331_20
  9354  0EBF                     u331_21:	
  9355  0EBF  2EC6               	goto	i1l3965
  9356  0EC0                     u331_20:	
  9357  0EC0                     i1l3963:	
  9358  0EC0  0853               	movf	_drivePWM2,w
  9359  0EC1  0677               	xorwf	setDrive2@v2,w
  9360  0EC2  1903               	skipnz
  9361  0EC3  2EC5               	goto	u332_21
  9362  0EC4  2EC6               	goto	u332_20
  9363  0EC5                     u332_21:	
  9364  0EC5  2F49               	goto	i1l527
  9365  0EC6                     u332_20:	
  9366  0EC6                     i1l3965:	
  9367                           
  9368                           ;settings.c: 254:         driveDir = dir;
  9369  0EC6  087A               	movf	setDrive2@dir,w
  9370  0EC7  00F8               	movwf	??_setDrive2
  9371  0EC8  0878               	movf	??_setDrive2,w
  9372  0EC9  00D5               	movwf	_driveDir
  9373                           
  9374                           ;settings.c: 255:         drivePWM1 = v;
  9375  0ECA  0876               	movf	setDrive2@v,w
  9376  0ECB  00F8               	movwf	??_setDrive2
  9377  0ECC  0878               	movf	??_setDrive2,w
  9378  0ECD  00D4               	movwf	_drivePWM1
  9379                           
  9380                           ;settings.c: 256:         drivePWM2 = v2;
  9381  0ECE  0877               	movf	setDrive2@v2,w
  9382  0ECF  00F8               	movwf	??_setDrive2
  9383  0ED0  0878               	movf	??_setDrive2,w
  9384  0ED1  00D3               	movwf	_drivePWM2
  9385                           
  9386                           ;settings.c: 257:         switch(dir){
  9387  0ED2  2F39               	goto	i1l4017
  9388  0ED3                     i1l3967:	
  9389                           
  9390                           ;settings.c: 259:                 TRISA |= 0b00111111;
  9391  0ED3  303F               	movlw	63
  9392  0ED4  00F8               	movwf	??_setDrive2
  9393  0ED5  0878               	movf	??_setDrive2,w
  9394  0ED6  0491               	iorwf	17,f	;volatile
  9395  0ED7                     i1l3969:	
  9396                           
  9397                           ;settings.c: 260:                 RA0PPS = 13;
  9398  0ED7  300D               	movlw	13
  9399  0ED8  003E               	movlb	30	; select bank30
  9400  0ED9  0090               	movwf	16	;volatile
  9401  0EDA                     i1l3971:	
  9402                           
  9403                           ;settings.c: 261:                 RA1PPS = 0x23;
  9404  0EDA  3023               	movlw	35
  9405  0EDB  0091               	movwf	17	;volatile
  9406  0EDC                     i1l3973:	
  9407                           
  9408                           ;settings.c: 262:                 RA2PPS = 14;
  9409  0EDC  300E               	movlw	14
  9410  0EDD  0092               	movwf	18	;volatile
  9411  0EDE                     i1l3975:	
  9412                           
  9413                           ;settings.c: 263:                 RA3PPS = 0;
  9414  0EDE  0193               	clrf	19	;volatile
  9415  0EDF                     i1l3977:	
  9416                           
  9417                           ;settings.c: 264:                 RA4PPS = 0x22;
  9418  0EDF  3022               	movlw	34
  9419  0EE0  0094               	movwf	20	;volatile
  9420  0EE1                     i1l3979:	
  9421                           
  9422                           ;settings.c: 265:                 RA5PPS = 0;
  9423  0EE1  0195               	clrf	21	;volatile
  9424                           
  9425                           ;settings.c: 266:                 LATA &= 0b11000000;
  9426  0EE2  30C0               	movlw	192
  9427  0EE3  00F8               	movwf	??_setDrive2
  9428  0EE4  0878               	movf	??_setDrive2,w
  9429  0EE5  0020               	movlb	0	; select bank0
  9430  0EE6  0596               	andwf	22,f	;volatile
  9431  0EE7                     i1l3981:	
  9432                           
  9433                           ;settings.c: 267:                 CWG3ISM = 0b0111;
  9434  0EE7  3007               	movlw	7
  9435  0EE8  002D               	movlb	13	; select bank13
  9436  0EE9  008D               	movwf	13	;volatile
  9437  0EEA                     i1l3983:	
  9438                           
  9439                           ;settings.c: 268:                 setPWM(5,v);
  9440  0EEA  0876               	movf	setDrive2@v,w
  9441  0EEB  00F8               	movwf	??_setDrive2
  9442  0EEC  0878               	movf	??_setDrive2,w
  9443  0EED  00F0               	movwf	i1setPWM@pwm
  9444  0EEE  3005               	movlw	5
  9445  0EEF  318B  2395  318E   	fcall	i1_setPWM
  9446  0EF2                     i1l3985:	
  9447                           
  9448                           ;settings.c: 269:                 setPWM(6,v2);
  9449  0EF2  0877               	movf	setDrive2@v2,w
  9450  0EF3  00F8               	movwf	??_setDrive2
  9451  0EF4  0878               	movf	??_setDrive2,w
  9452  0EF5  00F0               	movwf	i1setPWM@pwm
  9453  0EF6  3006               	movlw	6
  9454  0EF7  318B  2395  318E   	fcall	i1_setPWM
  9455  0EFA                     i1l3987:	
  9456                           
  9457                           ;settings.c: 270:                 setPWM(7,245);
  9458  0EFA  30F5               	movlw	245
  9459  0EFB  00F8               	movwf	??_setDrive2
  9460  0EFC  0878               	movf	??_setDrive2,w
  9461  0EFD  00F0               	movwf	i1setPWM@pwm
  9462  0EFE  3007               	movlw	7
  9463  0EFF  318B  2395  318E   	fcall	i1_setPWM
  9464  0F02                     i1l3989:	
  9465                           
  9466                           ;settings.c: 271:                 TRISA &= 0b11000000;
  9467  0F02  30C0               	movlw	192
  9468  0F03  00F8               	movwf	??_setDrive2
  9469  0F04  0878               	movf	??_setDrive2,w
  9470  0F05  0020               	movlb	0	; select bank0
  9471  0F06  0591               	andwf	17,f	;volatile
  9472                           
  9473                           ;settings.c: 272:                 break;
  9474  0F07  2F49               	goto	i1l527
  9475  0F08                     i1l3991:	
  9476                           
  9477                           ;settings.c: 274:                 TRISA |= 0b00111111;
  9478  0F08  303F               	movlw	63
  9479  0F09  00F8               	movwf	??_setDrive2
  9480  0F0A  0878               	movf	??_setDrive2,w
  9481  0F0B  0491               	iorwf	17,f	;volatile
  9482  0F0C                     i1l3993:	
  9483                           
  9484                           ;settings.c: 275:                 CWG3ISM = 0b0101;
  9485  0F0C  3005               	movlw	5
  9486  0F0D  002D               	movlb	13	; select bank13
  9487  0F0E  008D               	movwf	13	;volatile
  9488  0F0F                     i1l3995:	
  9489                           
  9490                           ;settings.c: 276:                 CWG1ISM = 0b0110;
  9491  0F0F  3006               	movlw	6
  9492  0F10  002C               	movlb	12	; select bank12
  9493  0F11  008D               	movwf	13	;volatile
  9494  0F12                     i1l3997:	
  9495                           
  9496                           ;settings.c: 277:                 RA0PPS = 0x23;
  9497  0F12  3023               	movlw	35
  9498  0F13  003E               	movlb	30	; select bank30
  9499  0F14  0090               	movwf	16	;volatile
  9500  0F15                     i1l3999:	
  9501                           
  9502                           ;settings.c: 278:                 RA1PPS = 0;
  9503  0F15  0191               	clrf	17	;volatile
  9504  0F16                     i1l4001:	
  9505                           
  9506                           ;settings.c: 279:                 RA2PPS = 0x02;
  9507  0F16  3002               	movlw	2
  9508  0F17  0092               	movwf	18	;volatile
  9509  0F18                     i1l4003:	
  9510                           
  9511                           ;settings.c: 280:                 RA3PPS = 0x22;
  9512  0F18  3022               	movlw	34
  9513  0F19  0093               	movwf	19	;volatile
  9514  0F1A                     i1l4005:	
  9515                           
  9516                           ;settings.c: 281:                 RA4PPS = 0;
  9517  0F1A  0194               	clrf	20	;volatile
  9518  0F1B                     i1l4007:	
  9519                           
  9520                           ;settings.c: 282:                 RA5PPS = 0x01;
  9521  0F1B  3001               	movlw	1
  9522  0F1C  0095               	movwf	21	;volatile
  9523                           
  9524                           ;settings.c: 283:                 LATA &= 0b11000000;
  9525  0F1D  30C0               	movlw	192
  9526  0F1E  00F8               	movwf	??_setDrive2
  9527  0F1F  0878               	movf	??_setDrive2,w
  9528  0F20  0020               	movlb	0	; select bank0
  9529  0F21  0596               	andwf	22,f	;volatile
  9530  0F22                     i1l4009:	
  9531                           
  9532                           ;settings.c: 284:                 LATA |= 0b00000010;
  9533  0F22  1496               	bsf	22,1	;volatile
  9534  0F23                     i1l4011:	
  9535                           
  9536                           ;settings.c: 285:                 setPWM(5,v);
  9537  0F23  0876               	movf	setDrive2@v,w
  9538  0F24  00F8               	movwf	??_setDrive2
  9539  0F25  0878               	movf	??_setDrive2,w
  9540  0F26  00F0               	movwf	i1setPWM@pwm
  9541  0F27  3005               	movlw	5
  9542  0F28  318B  2395  318E   	fcall	i1_setPWM
  9543  0F2B                     i1l4013:	
  9544                           
  9545                           ;settings.c: 286:                 setPWM(6,v2);
  9546  0F2B  0877               	movf	setDrive2@v2,w
  9547  0F2C  00F8               	movwf	??_setDrive2
  9548  0F2D  0878               	movf	??_setDrive2,w
  9549  0F2E  00F0               	movwf	i1setPWM@pwm
  9550  0F2F  3006               	movlw	6
  9551  0F30  318B  2395  318E   	fcall	i1_setPWM
  9552                           
  9553                           ;settings.c: 287:                 TRISA &= 0b11000000;
  9554  0F33  30C0               	movlw	192
  9555  0F34  00F8               	movwf	??_setDrive2
  9556  0F35  0878               	movf	??_setDrive2,w
  9557  0F36  0020               	movlb	0	; select bank0
  9558  0F37  0591               	andwf	17,f	;volatile
  9559                           
  9560                           ;settings.c: 310:                 break;
  9561  0F38  2F49               	goto	i1l527
  9562  0F39                     i1l4017:	
  9563  0F39  087A               	movf	setDrive2@dir,w
  9564  0F3A  00F8               	movwf	??_setDrive2
  9565  0F3B  01F9               	clrf	??_setDrive2+1
  9566                           
  9567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9568                           ; Switch size 1, requested type "simple"
  9569                           ; Number of cases is 1, Range of values is 0 to 0
  9570                           ; switch strategies available:
  9571                           ; Name         Instructions Cycles
  9572                           ; simple_byte            4     3 (average)
  9573                           ; direct_byte            8     6 (fixed)
  9574                           ; jumptable            260     6 (fixed)
  9575                           ;	Chosen strategy is simple_byte
  9576  0F3C  0879               	movf	??_setDrive2+1,w
  9577  0F3D  3A00               	xorlw	0	; case 0
  9578  0F3E  1903               	skipnz
  9579  0F3F  2F41               	goto	i1l5107
  9580  0F40  2F49               	goto	i1l527
  9581  0F41                     i1l5107:	
  9582                           
  9583                           ; Switch size 1, requested type "simple"
  9584                           ; Number of cases is 2, Range of values is 0 to 1
  9585                           ; switch strategies available:
  9586                           ; Name         Instructions Cycles
  9587                           ; simple_byte            7     4 (average)
  9588                           ; direct_byte           10     6 (fixed)
  9589                           ; jumptable            260     6 (fixed)
  9590                           ;	Chosen strategy is simple_byte
  9591  0F41  0878               	movf	??_setDrive2,w
  9592  0F42  3A00               	xorlw	0	; case 0
  9593  0F43  1903               	skipnz
  9594  0F44  2ED3               	goto	i1l3967
  9595  0F45  3A01               	xorlw	1	; case 1
  9596  0F46  1903               	skipnz
  9597  0F47  2F08               	goto	i1l3991
  9598  0F48  2F49               	goto	i1l527
  9599  0F49                     i1l527:	
  9600  0F49  0008               	return
  9601  0F4A                     __end_of_setDrive2:	
  9602                           
  9603                           	psect	text21
  9604  06D5                     __ptext21:	
  9605 ;; *************** function _setDrive *****************
  9606 ;; Defined at:
  9607 ;;		line 184 in file "settings.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  dir             1    wreg     unsigned char 
  9610 ;;  v               1    6[COMMON] unsigned char 
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;  dir             1    9[COMMON] unsigned char 
  9613 ;; Return value:  Size  Location     Type
  9614 ;;                  1    wreg      void 
  9615 ;; Registers used:
  9616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9617 ;; Tracked objects:
  9618 ;;		On entry : 0/0
  9619 ;;		On exit  : 0/0
  9620 ;;		Unchanged: 0/0
  9621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9622 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9624 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9625 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9626 ;;Total ram usage:        4 bytes
  9627 ;; Hardware stack levels used:    1
  9628 ;; Hardware stack levels required when called:    1
  9629 ;; This function calls:
  9630 ;;		i1_setPWM
  9631 ;; This function is called by:
  9632 ;;		_setStatus
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           
  9637                           ;psect for function _setDrive
  9638  06D5                     _setDrive:	
  9639                           
  9640                           ;incstack = 0
  9641                           ; Regs used in _setDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9642                           ;setDrive@dir stored from wreg
  9643  06D5  00F9               	movwf	setDrive@dir
  9644  06D6                     i1l4085:	
  9645                           
  9646                           ;settings.c: 185:     if((driveDir != dir) || (drivePWM1 != v) || (drivePWM2 != v)){
  9647  06D6  0020               	movlb	0	; select bank0
  9648  06D7  0855               	movf	_driveDir,w
  9649  06D8  0679               	xorwf	setDrive@dir,w
  9650  06D9  1D03               	skipz
  9651  06DA  2EDC               	goto	u337_21
  9652  06DB  2EDD               	goto	u337_20
  9653  06DC                     u337_21:	
  9654  06DC  2EE9               	goto	i1l4091
  9655  06DD                     u337_20:	
  9656  06DD                     i1l4087:	
  9657  06DD  0854               	movf	_drivePWM1,w
  9658  06DE  0676               	xorwf	setDrive@v,w
  9659  06DF  1D03               	skipz
  9660  06E0  2EE2               	goto	u338_21
  9661  06E1  2EE3               	goto	u338_20
  9662  06E2                     u338_21:	
  9663  06E2  2EE9               	goto	i1l4091
  9664  06E3                     u338_20:	
  9665  06E3                     i1l4089:	
  9666  06E3  0853               	movf	_drivePWM2,w
  9667  06E4  0676               	xorwf	setDrive@v,w
  9668  06E5  1903               	skipnz
  9669  06E6  2EE8               	goto	u339_21
  9670  06E7  2EE9               	goto	u339_20
  9671  06E8                     u339_21:	
  9672  06E8  2FB2               	goto	i1l517
  9673  06E9                     u339_20:	
  9674  06E9                     i1l4091:	
  9675                           
  9676                           ;settings.c: 186:         driveDir = dir;
  9677  06E9  0879               	movf	setDrive@dir,w
  9678  06EA  00F7               	movwf	??_setDrive
  9679  06EB  0877               	movf	??_setDrive,w
  9680  06EC  00D5               	movwf	_driveDir
  9681                           
  9682                           ;settings.c: 187:         drivePWM1 = v;
  9683  06ED  0876               	movf	setDrive@v,w
  9684  06EE  00F7               	movwf	??_setDrive
  9685  06EF  0877               	movf	??_setDrive,w
  9686  06F0  00D4               	movwf	_drivePWM1
  9687                           
  9688                           ;settings.c: 188:         drivePWM2 = v;
  9689  06F1  0876               	movf	setDrive@v,w
  9690  06F2  00F7               	movwf	??_setDrive
  9691  06F3  0877               	movf	??_setDrive,w
  9692  06F4  00D3               	movwf	_drivePWM2
  9693                           
  9694                           ;settings.c: 189:         switch(dir){
  9695  06F5  2F9C               	goto	i1l4191
  9696  06F6                     i1l4093:	
  9697                           
  9698                           ;settings.c: 191:                 TRISA |= 0b00111111;
  9699  06F6  303F               	movlw	63
  9700  06F7  00F7               	movwf	??_setDrive
  9701  06F8  0877               	movf	??_setDrive,w
  9702  06F9  0491               	iorwf	17,f	;volatile
  9703  06FA                     i1l4095:	
  9704                           
  9705                           ;settings.c: 192:                 RA0PPS = 13;
  9706  06FA  300D               	movlw	13
  9707  06FB  003E               	movlb	30	; select bank30
  9708  06FC  0090               	movwf	16	;volatile
  9709  06FD                     i1l4097:	
  9710                           
  9711                           ;settings.c: 193:                 RA1PPS = 0x23;
  9712  06FD  3023               	movlw	35
  9713  06FE  0091               	movwf	17	;volatile
  9714  06FF                     i1l4099:	
  9715                           
  9716                           ;settings.c: 194:                 RA2PPS = 14;
  9717  06FF  300E               	movlw	14
  9718  0700  0092               	movwf	18	;volatile
  9719  0701                     i1l4101:	
  9720                           
  9721                           ;settings.c: 195:                 RA3PPS = 0;
  9722  0701  0193               	clrf	19	;volatile
  9723  0702                     i1l4103:	
  9724                           
  9725                           ;settings.c: 196:                 RA4PPS = 0x22;
  9726  0702  3022               	movlw	34
  9727  0703  0094               	movwf	20	;volatile
  9728  0704                     i1l4105:	
  9729                           
  9730                           ;settings.c: 197:                 RA5PPS = 0;
  9731  0704  0195               	clrf	21	;volatile
  9732                           
  9733                           ;settings.c: 198:                 LATA &= 0b11000000;
  9734  0705  30C0               	movlw	192
  9735  0706  00F7               	movwf	??_setDrive
  9736  0707  0877               	movf	??_setDrive,w
  9737  0708  0020               	movlb	0	; select bank0
  9738  0709  0596               	andwf	22,f	;volatile
  9739  070A                     i1l4107:	
  9740                           
  9741                           ;settings.c: 199:                 CWG3ISM = 0b0111;
  9742  070A  3007               	movlw	7
  9743  070B  002D               	movlb	13	; select bank13
  9744  070C  008D               	movwf	13	;volatile
  9745  070D                     i1l4109:	
  9746                           
  9747                           ;settings.c: 200:                 setPWM(5,v);
  9748  070D  0876               	movf	setDrive@v,w
  9749  070E  00F7               	movwf	??_setDrive
  9750  070F  0877               	movf	??_setDrive,w
  9751  0710  00F0               	movwf	i1setPWM@pwm
  9752  0711  3005               	movlw	5
  9753  0712  318B  2395  3186   	fcall	i1_setPWM
  9754  0715                     i1l4111:	
  9755                           
  9756                           ;settings.c: 201:                 setPWM(6,v);
  9757  0715  0876               	movf	setDrive@v,w
  9758  0716  00F7               	movwf	??_setDrive
  9759  0717  0877               	movf	??_setDrive,w
  9760  0718  00F0               	movwf	i1setPWM@pwm
  9761  0719  3006               	movlw	6
  9762  071A  318B  2395  3186   	fcall	i1_setPWM
  9763  071D                     i1l4113:	
  9764                           
  9765                           ;settings.c: 202:                 setPWM(7,245);
  9766  071D  30F5               	movlw	245
  9767  071E  00F7               	movwf	??_setDrive
  9768  071F  0877               	movf	??_setDrive,w
  9769  0720  00F0               	movwf	i1setPWM@pwm
  9770  0721  3007               	movlw	7
  9771  0722  318B  2395  3186   	fcall	i1_setPWM
  9772  0725                     i1l4115:	
  9773                           
  9774                           ;settings.c: 203:                 TRISA &= 0b11000000;
  9775  0725  30C0               	movlw	192
  9776  0726  00F7               	movwf	??_setDrive
  9777  0727  0877               	movf	??_setDrive,w
  9778  0728  0020               	movlb	0	; select bank0
  9779  0729  0591               	andwf	17,f	;volatile
  9780                           
  9781                           ;settings.c: 204:                 break;
  9782  072A  2FB2               	goto	i1l517
  9783  072B                     i1l4117:	
  9784                           
  9785                           ;settings.c: 206:                 TRISA |= 0b00111111;
  9786  072B  303F               	movlw	63
  9787  072C  00F7               	movwf	??_setDrive
  9788  072D  0877               	movf	??_setDrive,w
  9789  072E  0491               	iorwf	17,f	;volatile
  9790  072F                     i1l4119:	
  9791                           
  9792                           ;settings.c: 207:                 CWG3ISM = 0b0101;
  9793  072F  3005               	movlw	5
  9794  0730  002D               	movlb	13	; select bank13
  9795  0731  008D               	movwf	13	;volatile
  9796  0732                     i1l4121:	
  9797                           
  9798                           ;settings.c: 208:                 CWG1ISM = 0b0110;
  9799  0732  3006               	movlw	6
  9800  0733  002C               	movlb	12	; select bank12
  9801  0734  008D               	movwf	13	;volatile
  9802  0735                     i1l4123:	
  9803                           
  9804                           ;settings.c: 209:                 RA0PPS = 0x23;
  9805  0735  3023               	movlw	35
  9806  0736  003E               	movlb	30	; select bank30
  9807  0737  0090               	movwf	16	;volatile
  9808  0738                     i1l4125:	
  9809                           
  9810                           ;settings.c: 210:                 RA1PPS = 0;
  9811  0738  0191               	clrf	17	;volatile
  9812  0739                     i1l4127:	
  9813                           
  9814                           ;settings.c: 211:                 RA2PPS = 0x02;
  9815  0739  3002               	movlw	2
  9816  073A  0092               	movwf	18	;volatile
  9817  073B                     i1l4129:	
  9818                           
  9819                           ;settings.c: 212:                 RA3PPS = 0x22;
  9820  073B  3022               	movlw	34
  9821  073C  0093               	movwf	19	;volatile
  9822  073D                     i1l4131:	
  9823                           
  9824                           ;settings.c: 213:                 RA4PPS = 0;
  9825  073D  0194               	clrf	20	;volatile
  9826  073E                     i1l4133:	
  9827                           
  9828                           ;settings.c: 214:                 RA5PPS = 0x01;
  9829  073E  3001               	movlw	1
  9830  073F  0095               	movwf	21	;volatile
  9831                           
  9832                           ;settings.c: 215:                 LATA &= 0b11000000;
  9833  0740  30C0               	movlw	192
  9834  0741  00F7               	movwf	??_setDrive
  9835  0742  0877               	movf	??_setDrive,w
  9836  0743  0020               	movlb	0	; select bank0
  9837  0744  0596               	andwf	22,f	;volatile
  9838  0745                     i1l4135:	
  9839                           
  9840                           ;settings.c: 216:                 LATA |= 0b00000010;
  9841  0745  1496               	bsf	22,1	;volatile
  9842  0746                     i1l4137:	
  9843                           
  9844                           ;settings.c: 217:                 setPWM(5,v);
  9845  0746  0876               	movf	setDrive@v,w
  9846  0747  00F7               	movwf	??_setDrive
  9847  0748  0877               	movf	??_setDrive,w
  9848  0749  00F0               	movwf	i1setPWM@pwm
  9849  074A  3005               	movlw	5
  9850  074B  318B  2395  3186   	fcall	i1_setPWM
  9851  074E                     i1l4139:	
  9852                           
  9853                           ;settings.c: 218:                 setPWM(6,v);
  9854  074E  0876               	movf	setDrive@v,w
  9855  074F  00F7               	movwf	??_setDrive
  9856  0750  0877               	movf	??_setDrive,w
  9857  0751  00F0               	movwf	i1setPWM@pwm
  9858  0752  3006               	movlw	6
  9859  0753  318B  2395  3186   	fcall	i1_setPWM
  9860                           
  9861                           ;settings.c: 219:                 TRISA &= 0b11000000;
  9862  0756  30C0               	movlw	192
  9863  0757  00F7               	movwf	??_setDrive
  9864  0758  0877               	movf	??_setDrive,w
  9865  0759  0020               	movlb	0	; select bank0
  9866  075A  0591               	andwf	17,f	;volatile
  9867                           
  9868                           ;settings.c: 220:                 break;
  9869  075B  2FB2               	goto	i1l517
  9870  075C                     i1l4141:	
  9871                           
  9872                           ;settings.c: 222:                 TRISA |= 0b00111111;
  9873  075C  303F               	movlw	63
  9874  075D  00F7               	movwf	??_setDrive
  9875  075E  0877               	movf	??_setDrive,w
  9876  075F  0491               	iorwf	17,f	;volatile
  9877  0760                     i1l4143:	
  9878                           
  9879                           ;settings.c: 223:                 CWG3ISM = 0b0101;
  9880  0760  3005               	movlw	5
  9881  0761  002D               	movlb	13	; select bank13
  9882  0762  008D               	movwf	13	;volatile
  9883  0763                     i1l4145:	
  9884                           
  9885                           ;settings.c: 224:                 RA0PPS = 0;
  9886  0763  003E               	movlb	30	; select bank30
  9887  0764  0190               	clrf	16	;volatile
  9888  0765                     i1l4147:	
  9889                           
  9890                           ;settings.c: 225:                 RA1PPS = 0x23;
  9891  0765  3023               	movlw	35
  9892  0766  0091               	movwf	17	;volatile
  9893  0767                     i1l4149:	
  9894                           
  9895                           ;settings.c: 226:                 RA2PPS = 0x23;
  9896  0767  3023               	movlw	35
  9897  0768  0092               	movwf	18	;volatile
  9898  0769                     i1l4151:	
  9899                           
  9900                           ;settings.c: 227:                 RA3PPS = 0;
  9901  0769  0193               	clrf	19	;volatile
  9902  076A                     i1l4153:	
  9903                           
  9904                           ;settings.c: 228:                 RA4PPS = 0;
  9905  076A  0194               	clrf	20	;volatile
  9906  076B                     i1l4155:	
  9907                           
  9908                           ;settings.c: 229:                 RA5PPS = 0x22;
  9909  076B  3022               	movlw	34
  9910  076C  0095               	movwf	21	;volatile
  9911  076D                     i1l4157:	
  9912                           
  9913                           ;settings.c: 230:                 LATA &= 0b11000000;
  9914  076D  30C0               	movlw	192
  9915  076E  00F7               	movwf	??_setDrive
  9916  076F  0877               	movf	??_setDrive,w
  9917  0770  0020               	movlb	0	; select bank0
  9918  0771  0596               	andwf	22,f	;volatile
  9919  0772                     i1l4159:	
  9920                           
  9921                           ;settings.c: 231:                 LATA |= 0b00000001;
  9922  0772  1416               	bsf	22,0	;volatile
  9923  0773                     i1l4161:	
  9924                           
  9925                           ;settings.c: 232:                 setPWM(5,v);
  9926  0773  0876               	movf	setDrive@v,w
  9927  0774  00F7               	movwf	??_setDrive
  9928  0775  0877               	movf	??_setDrive,w
  9929  0776  00F0               	movwf	i1setPWM@pwm
  9930  0777  3005               	movlw	5
  9931  0778  318B  2395  3186   	fcall	i1_setPWM
  9932  077B  2F25               	goto	i1l4115
  9933  077C                     i1l4165:	
  9934                           
  9935                           ;settings.c: 236:                 TRISA |= 0b00111111;
  9936  077C  303F               	movlw	63
  9937  077D  00F7               	movwf	??_setDrive
  9938  077E  0877               	movf	??_setDrive,w
  9939  077F  0491               	iorwf	17,f	;volatile
  9940  0780                     i1l4167:	
  9941                           
  9942                           ;settings.c: 237:                 CWG3ISM = 0b0101;
  9943  0780  3005               	movlw	5
  9944  0781  002D               	movlb	13	; select bank13
  9945  0782  008D               	movwf	13	;volatile
  9946  0783                     i1l4169:	
  9947                           
  9948                           ;settings.c: 238:                 RA0PPS = 0x23;
  9949  0783  3023               	movlw	35
  9950  0784  003E               	movlb	30	; select bank30
  9951  0785  0090               	movwf	16	;volatile
  9952  0786                     i1l4171:	
  9953                           
  9954                           ;settings.c: 239:                 RA1PPS = 0x23;
  9955  0786  3023               	movlw	35
  9956  0787  0091               	movwf	17	;volatile
  9957  0788                     i1l4173:	
  9958                           
  9959                           ;settings.c: 240:                 RA2PPS = 0;
  9960  0788  0192               	clrf	18	;volatile
  9961  0789                     i1l4175:	
  9962                           
  9963                           ;settings.c: 241:                 RA3PPS = 0x22;
  9964  0789  3022               	movlw	34
  9965  078A  0093               	movwf	19	;volatile
  9966  078B                     i1l4177:	
  9967                           
  9968                           ;settings.c: 242:                 RA4PPS = 0;
  9969  078B  0194               	clrf	20	;volatile
  9970  078C                     i1l4179:	
  9971                           
  9972                           ;settings.c: 243:                 RA5PPS = 0;
  9973  078C  0195               	clrf	21	;volatile
  9974  078D                     i1l4181:	
  9975                           
  9976                           ;settings.c: 244:                 LATA &= 0b11000000;
  9977  078D  30C0               	movlw	192
  9978  078E  00F7               	movwf	??_setDrive
  9979  078F  0877               	movf	??_setDrive,w
  9980  0790  0020               	movlb	0	; select bank0
  9981  0791  0596               	andwf	22,f	;volatile
  9982  0792                     i1l4183:	
  9983                           
  9984                           ;settings.c: 245:                 LATA |= 0b00000100;
  9985  0792  1516               	bsf	22,2	;volatile
  9986  0793                     i1l4185:	
  9987                           
  9988                           ;settings.c: 246:                 setPWM(5,v);
  9989  0793  0876               	movf	setDrive@v,w
  9990  0794  00F7               	movwf	??_setDrive
  9991  0795  0877               	movf	??_setDrive,w
  9992  0796  00F0               	movwf	i1setPWM@pwm
  9993  0797  3005               	movlw	5
  9994  0798  318B  2395  3186   	fcall	i1_setPWM
  9995  079B  2F25               	goto	i1l4115
  9996  079C                     i1l4191:	
  9997  079C  0879               	movf	setDrive@dir,w
  9998  079D  00F7               	movwf	??_setDrive
  9999  079E  01F8               	clrf	??_setDrive+1
 10000                           
 10001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10002                           ; Switch size 1, requested type "simple"
 10003                           ; Number of cases is 1, Range of values is 0 to 0
 10004                           ; switch strategies available:
 10005                           ; Name         Instructions Cycles
 10006                           ; simple_byte            4     3 (average)
 10007                           ; direct_byte            8     6 (fixed)
 10008                           ; jumptable            260     6 (fixed)
 10009                           ;	Chosen strategy is simple_byte
 10010  079F  0878               	movf	??_setDrive+1,w
 10011  07A0  3A00               	xorlw	0	; case 0
 10012  07A1  1903               	skipnz
 10013  07A2  2FA4               	goto	i1l5109
 10014  07A3  2FB2               	goto	i1l517
 10015  07A4                     i1l5109:	
 10016                           
 10017                           ; Switch size 1, requested type "simple"
 10018                           ; Number of cases is 4, Range of values is 0 to 3
 10019                           ; switch strategies available:
 10020                           ; Name         Instructions Cycles
 10021                           ; simple_byte           13     7 (average)
 10022                           ; direct_byte           14     6 (fixed)
 10023                           ; jumptable            260     6 (fixed)
 10024                           ;	Chosen strategy is simple_byte
 10025  07A4  0877               	movf	??_setDrive,w
 10026  07A5  3A00               	xorlw	0	; case 0
 10027  07A6  1903               	skipnz
 10028  07A7  2EF6               	goto	i1l4093
 10029  07A8  3A01               	xorlw	1	; case 1
 10030  07A9  1903               	skipnz
 10031  07AA  2F2B               	goto	i1l4117
 10032  07AB  3A03               	xorlw	3	; case 2
 10033  07AC  1903               	skipnz
 10034  07AD  2F5C               	goto	i1l4141
 10035  07AE  3A01               	xorlw	1	; case 3
 10036  07AF  1903               	skipnz
 10037  07B0  2F7C               	goto	i1l4165
 10038  07B1  2FB2               	goto	i1l517
 10039  07B2                     i1l517:	
 10040  07B2  0008               	return
 10041  07B3                     __end_of_setDrive:	
 10042                           
 10043                           	psect	text22
 10044  0AB0                     __ptext22:	
 10045 ;; *************** function _revRoutine *****************
 10046 ;; Defined at:
 10047 ;;		line 113 in file "settings.c"
 10048 ;; Parameters:    Size  Location     Type
 10049 ;;  s               1    wreg     unsigned char 
 10050 ;; Auto vars:     Size  Location     Type
 10051 ;;  s               1    0[BANK0 ] unsigned char 
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  1    wreg      void 
 10054 ;; Registers used:
 10055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10056 ;; Tracked objects:
 10057 ;;		On entry : 0/0
 10058 ;;		On exit  : 0/0
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10062 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10063 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10064 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10065 ;;Total ram usage:        4 bytes
 10066 ;; Hardware stack levels used:    1
 10067 ;; Hardware stack levels required when called:    2
 10068 ;; This function calls:
 10069 ;;		i1_setMotors
 10070 ;; This function is called by:
 10071 ;;		_setStatus
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           
 10075                           
 10076                           ;psect for function _revRoutine
 10077  0AB0                     _revRoutine:	
 10078                           
 10079                           ;incstack = 0
 10080                           ; Regs used in _revRoutine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10081                           ;revRoutine@s stored from wreg
 10082  0AB0  0020               	movlb	0	; select bank0
 10083  0AB1  00A0               	movwf	revRoutine@s
 10084  0AB2                     i1l4077:	
 10085                           
 10086                           ;settings.c: 115:     props.revolver.stat = ((s<<2)&0b11000000)+(s&0b1111);
 10087  0AB2  300F               	movlw	15
 10088  0AB3  0520               	andwf	revRoutine@s,w
 10089  0AB4  00FB               	movwf	??_revRoutine
 10090  0AB5  0820               	movf	revRoutine@s,w
 10091  0AB6  00FC               	movwf	??_revRoutine+1
 10092  0AB7  3001               	movlw	1
 10093  0AB8                     u335_25:	
 10094  0AB8  35FC               	lslf	??_revRoutine+1,f
 10095  0AB9  3EFF               	addlw	-1
 10096  0ABA  1D03               	skipz
 10097  0ABB  2AB8               	goto	u335_25
 10098  0ABC  357C               	lslf	??_revRoutine+1,w
 10099  0ABD  39C0               	andlw	192
 10100  0ABE  077B               	addwf	??_revRoutine,w
 10101  0ABF  00FD               	movwf	??_revRoutine+2
 10102  0AC0  087D               	movf	??_revRoutine+2,w
 10103  0AC1  00E1               	movwf	_props+8
 10104  0AC2                     i1l4079:	
 10105                           
 10106                           ;settings.c: 116:     if(s&0x40)
 10107  0AC2  1F20               	btfss	revRoutine@s,6
 10108  0AC3  2AC5               	goto	u336_21
 10109  0AC4  2AC6               	goto	u336_20
 10110  0AC5                     u336_21:	
 10111  0AC5  2AD1               	goto	i1l4083
 10112  0AC6                     u336_20:	
 10113  0AC6                     i1l4081:	
 10114                           
 10115                           ;settings.c: 117:         setMotors(1,1,255);
 10116  0AC6  01F6               	clrf	i1setMotors@dir
 10117  0AC7  0AF6               	incf	i1setMotors@dir,f
 10118  0AC8  30FF               	movlw	255
 10119  0AC9  00FB               	movwf	??_revRoutine
 10120  0ACA  087B               	movf	??_revRoutine,w
 10121  0ACB  00F7               	movwf	i1setMotors@v
 10122  0ACC  3001               	movlw	1
 10123  0ACD  3185  2567  318A   	fcall	i1_setMotors
 10124  0AD0  2ADA               	goto	i1l493
 10125  0AD1                     i1l4083:	
 10126                           
 10127                           ;settings.c: 119:         setMotors(1,0,255);
 10128  0AD1  01F6               	clrf	i1setMotors@dir
 10129  0AD2  30FF               	movlw	255
 10130  0AD3  00FB               	movwf	??_revRoutine
 10131  0AD4  087B               	movf	??_revRoutine,w
 10132  0AD5  00F7               	movwf	i1setMotors@v
 10133  0AD6  3001               	movlw	1
 10134  0AD7  3185  2567  318A   	fcall	i1_setMotors
 10135  0ADA                     i1l493:	
 10136  0ADA  0008               	return
 10137  0ADB                     __end_of_revRoutine:	
 10138                           
 10139                           	psect	text23
 10140  0567                     __ptext23:	
 10141 ;; *************** function i1_setMotors *****************
 10142 ;; Defined at:
 10143 ;;		line 122 in file "settings.c"
 10144 ;; Parameters:    Size  Location     Type
 10145 ;;  motor           1    wreg     unsigned char 
 10146 ;;  dir             1    6[COMMON] unsigned char 
 10147 ;;  v               1    7[COMMON] unsigned char 
 10148 ;; Auto vars:     Size  Location     Type
 10149 ;;  motor           1   10[COMMON] unsigned char 
 10150 ;; Return value:  Size  Location     Type
 10151 ;;                  1    wreg      void 
 10152 ;; Registers used:
 10153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10154 ;; Tracked objects:
 10155 ;;		On entry : 0/0
 10156 ;;		On exit  : 0/0
 10157 ;;		Unchanged: 0/0
 10158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10161 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10162 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10163 ;;Total ram usage:        5 bytes
 10164 ;; Hardware stack levels used:    1
 10165 ;; Hardware stack levels required when called:    1
 10166 ;; This function calls:
 10167 ;;		i1___bmul
 10168 ;;		i1_setPWM
 10169 ;; This function is called by:
 10170 ;;		_setStatus
 10171 ;;		_setRoutine
 10172 ;;		_revRoutine
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           
 10177                           ;psect for function i1_setMotors
 10178  0567                     i1_setMotors:	
 10179                           
 10180                           ;incstack = 0
 10181                           ; Regs used in i1_setMotors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10182                           ;i1setMotors@motor stored from wreg
 10183  0567  00FA               	movwf	i1setMotors@motor
 10184  0568                     i1l3871:	
 10185                           
 10186                           ;settings.c: 123:     dir = dir!=0;
 10187  0568  0876               	movf	i1setMotors@dir,w
 10188  0569  1D03               	btfss	3,2
 10189  056A  2D6C               	goto	u302_21
 10190  056B  2D6E               	goto	u302_20
 10191  056C                     u302_21:	
 10192  056C  3001               	movlw	1
 10193  056D  2D6F               	goto	u303_20
 10194  056E                     u302_20:	
 10195  056E  3000               	movlw	0
 10196  056F                     u303_20:	
 10197  056F  00F8               	movwf	??i1_setMotors
 10198  0570  0878               	movf	??i1_setMotors,w
 10199  0571  00F6               	movwf	i1setMotors@dir
 10200  0572                     i1l3873:	
 10201                           
 10202                           ;settings.c: 124:     if((motorDirArr[motor] != dir) || (motorPWMArr[motor] != v)){
 10203  0572  087A               	movf	i1setMotors@motor,w
 10204  0573  3E4F               	addlw	(low (_motorDirArr| 0))& (0+255)
 10205  0574  0086               	movwf	6
 10206  0575  0187               	clrf	7
 10207  0576  0801               	movf	1,w
 10208  0577  0676               	xorwf	i1setMotors@dir,w
 10209  0578  1D03               	skipz
 10210  0579  2D7B               	goto	u304_21
 10211  057A  2D7C               	goto	u304_20
 10212  057B                     u304_21:	
 10213  057B  2D86               	goto	i1l3877
 10214  057C                     u304_20:	
 10215  057C                     i1l3875:	
 10216  057C  087A               	movf	i1setMotors@motor,w
 10217  057D  3E4B               	addlw	(low (_motorPWMArr| 0))& (0+255)
 10218  057E  0086               	movwf	6
 10219  057F  0187               	clrf	7
 10220  0580  0801               	movf	1,w
 10221  0581  0677               	xorwf	i1setMotors@v,w
 10222  0582  1903               	skipnz
 10223  0583  2D85               	goto	u305_21
 10224  0584  2D86               	goto	u305_20
 10225  0585                     u305_21:	
 10226  0585  2ED4               	goto	i1l505
 10227  0586                     u305_20:	
 10228  0586                     i1l3877:	
 10229                           
 10230                           ;settings.c: 125:         motorDirArr[motor] = dir;
 10231  0586  0876               	movf	i1setMotors@dir,w
 10232  0587  00F8               	movwf	??i1_setMotors
 10233  0588  087A               	movf	i1setMotors@motor,w
 10234  0589  3E4F               	addlw	(low (_motorDirArr| 0))& (0+255)
 10235  058A  0086               	movwf	6
 10236  058B  0187               	clrf	7
 10237  058C  0878               	movf	??i1_setMotors,w
 10238  058D  0081               	movwf	1
 10239                           
 10240                           ;settings.c: 126:         motorPWMArr[motor] = v;
 10241  058E  0877               	movf	i1setMotors@v,w
 10242  058F  00F8               	movwf	??i1_setMotors
 10243  0590  087A               	movf	i1setMotors@motor,w
 10244  0591  3E4B               	addlw	(low (_motorPWMArr| 0))& (0+255)
 10245  0592  0086               	movwf	6
 10246  0593  0187               	clrf	7
 10247  0594  0878               	movf	??i1_setMotors,w
 10248  0595  0081               	movwf	1
 10249                           
 10250                           ;settings.c: 127:         switch(motor){
 10251  0596  2EBE               	goto	i1l3953
 10252  0597                     i1l3879:	
 10253                           
 10254                           ;settings.c: 129:                 TRISC |= 0b01010101;
 10255  0597  3055               	movlw	85
 10256  0598  00F8               	movwf	??i1_setMotors
 10257  0599  0878               	movf	??i1_setMotors,w
 10258  059A  0020               	movlb	0	; select bank0
 10259  059B  0493               	iorwf	19,f	;volatile
 10260  059C                     i1l3881:	
 10261                           
 10262                           ;settings.c: 130:                 RC6PPS = 9*(!dir);
 10263  059C  3009               	movlw	9
 10264  059D  00F8               	movwf	??i1_setMotors
 10265  059E  0878               	movf	??i1_setMotors,w
 10266  059F  00F0               	movwf	i1___bmul@multiplicand
 10267  05A0  0876               	movf	i1setMotors@dir,w
 10268  05A1  1903               	btfsc	3,2
 10269  05A2  2DA4               	goto	u306_21
 10270  05A3  2DA6               	goto	u306_20
 10271  05A4                     u306_21:	
 10272  05A4  3001               	movlw	1
 10273  05A5  2DA7               	goto	u307_20
 10274  05A6                     u306_20:	
 10275  05A6  3000               	movlw	0
 10276  05A7                     u307_20:	
 10277  05A7  318A  220B  3185   	fcall	i1___bmul
 10278  05AA  003E               	movlb	30	; select bank30
 10279  05AB  00A6               	movwf	38	;volatile
 10280  05AC                     i1l3883:	
 10281                           
 10282                           ;settings.c: 131:                 RC2PPS = 0;
 10283  05AC  01A2               	clrf	34	;volatile
 10284  05AD                     i1l3885:	
 10285                           
 10286                           ;settings.c: 132:                 RC4PPS = 9*dir;
 10287  05AD  3009               	movlw	9
 10288  05AE  00F8               	movwf	??i1_setMotors
 10289  05AF  0878               	movf	??i1_setMotors,w
 10290  05B0  00F0               	movwf	i1___bmul@multiplicand
 10291  05B1  0876               	movf	i1setMotors@dir,w
 10292  05B2  318A  220B  3185   	fcall	i1___bmul
 10293  05B5  003E               	movlb	30	; select bank30
 10294  05B6  00A4               	movwf	36	;volatile
 10295  05B7                     i1l3887:	
 10296                           
 10297                           ;settings.c: 133:                 RC0PPS = 0;
 10298  05B7  01A0               	clrf	32	;volatile
 10299                           
 10300                           ;settings.c: 134:                 LATCbits.LATC6 = !dir;
 10301  05B8  0876               	movf	i1setMotors@dir,w
 10302  05B9  1903               	btfsc	3,2
 10303  05BA  2DBC               	goto	u308_21
 10304  05BB  2DBF               	goto	u308_20
 10305  05BC                     u308_21:	
 10306  05BC  0020               	movlb	0	; select bank0
 10307  05BD  1718               	bsf	24,6	;volatile
 10308  05BE  2DC1               	goto	u309_24
 10309  05BF                     u308_20:	
 10310  05BF  0020               	movlb	0	; select bank0
 10311  05C0  1318               	bcf	24,6	;volatile
 10312  05C1                     u309_24:	
 10313  05C1                     i1l3889:	
 10314                           
 10315                           ;settings.c: 135:                 LATCbits.LATC2 = dir;
 10316  05C1  0C76               	rrf	i1setMotors@dir,w
 10317  05C2  1C03               	skipc
 10318  05C3  1118               	bcf	24,2	;volatile
 10319  05C4  1803               	skipnc
 10320  05C5  1518               	bsf	24,2	;volatile
 10321  05C6                     i1l3891:	
 10322                           
 10323                           ;settings.c: 136:                 LATCbits.LATC4 = dir;
 10324  05C6  0C76               	rrf	i1setMotors@dir,w
 10325  05C7  1C03               	skipc
 10326  05C8  1218               	bcf	24,4	;volatile
 10327  05C9  1803               	skipnc
 10328  05CA  1618               	bsf	24,4	;volatile
 10329                           
 10330                           ;settings.c: 137:                 LATCbits.LATC0 = !dir;
 10331  05CB  0876               	movf	i1setMotors@dir,w
 10332  05CC  1903               	btfsc	3,2
 10333  05CD  2DCF               	goto	u310_21
 10334  05CE  2DD2               	goto	u310_20
 10335  05CF                     u310_21:	
 10336  05CF  0020               	movlb	0	; select bank0
 10337  05D0  1418               	bsf	24,0	;volatile
 10338  05D1  2DD4               	goto	u311_24
 10339  05D2                     u310_20:	
 10340  05D2  0020               	movlb	0	; select bank0
 10341  05D3  1018               	bcf	24,0	;volatile
 10342  05D4                     u311_24:	
 10343  05D4                     i1l3893:	
 10344                           
 10345                           ;settings.c: 138:                 setPWM(1,v);
 10346  05D4  0877               	movf	i1setMotors@v,w
 10347  05D5  00F8               	movwf	??i1_setMotors
 10348  05D6  0878               	movf	??i1_setMotors,w
 10349  05D7  00F0               	movwf	i1setPWM@pwm
 10350  05D8  3001               	movlw	1
 10351  05D9  318B  2395  3185   	fcall	i1_setPWM
 10352  05DC                     i1l3895:	
 10353                           
 10354                           ;settings.c: 139:                 TRISC &= 0b10101010;
 10355  05DC  30AA               	movlw	170
 10356  05DD  00F8               	movwf	??i1_setMotors
 10357  05DE  0878               	movf	??i1_setMotors,w
 10358  05DF  0020               	movlb	0	; select bank0
 10359  05E0  0593               	andwf	19,f	;volatile
 10360                           
 10361                           ;settings.c: 140:                 break;
 10362  05E1  2ED4               	goto	i1l505
 10363  05E2                     i1l3897:	
 10364                           
 10365                           ;settings.c: 142:                 TRISC |= 0b10101010;
 10366  05E2  30AA               	movlw	170
 10367  05E3  00F8               	movwf	??i1_setMotors
 10368  05E4  0878               	movf	??i1_setMotors,w
 10369  05E5  0020               	movlb	0	; select bank0
 10370  05E6  0493               	iorwf	19,f	;volatile
 10371  05E7                     i1l3899:	
 10372                           
 10373                           ;settings.c: 143:                 RC7PPS = 10*(!dir);
 10374  05E7  300A               	movlw	10
 10375  05E8  00F8               	movwf	??i1_setMotors
 10376  05E9  0878               	movf	??i1_setMotors,w
 10377  05EA  00F0               	movwf	i1___bmul@multiplicand
 10378  05EB  0876               	movf	i1setMotors@dir,w
 10379  05EC  1903               	btfsc	3,2
 10380  05ED  2DEF               	goto	u312_21
 10381  05EE  2DF1               	goto	u312_20
 10382  05EF                     u312_21:	
 10383  05EF  3001               	movlw	1
 10384  05F0  2DF2               	goto	u313_20
 10385  05F1                     u312_20:	
 10386  05F1  3000               	movlw	0
 10387  05F2                     u313_20:	
 10388  05F2  318A  220B  3185   	fcall	i1___bmul
 10389  05F5  003E               	movlb	30	; select bank30
 10390  05F6  00A7               	movwf	39	;volatile
 10391  05F7                     i1l3901:	
 10392                           
 10393                           ;settings.c: 144:                 RC3PPS = 0;
 10394  05F7  01A3               	clrf	35	;volatile
 10395  05F8                     i1l3903:	
 10396                           
 10397                           ;settings.c: 145:                 RC5PPS = 10*dir;
 10398  05F8  300A               	movlw	10
 10399  05F9  00F8               	movwf	??i1_setMotors
 10400  05FA  0878               	movf	??i1_setMotors,w
 10401  05FB  00F0               	movwf	i1___bmul@multiplicand
 10402  05FC  0876               	movf	i1setMotors@dir,w
 10403  05FD  318A  220B  3185   	fcall	i1___bmul
 10404  0600  003E               	movlb	30	; select bank30
 10405  0601  00A5               	movwf	37	;volatile
 10406  0602                     i1l3905:	
 10407                           
 10408                           ;settings.c: 146:                 RC1PPS = 0;
 10409  0602  01A1               	clrf	33	;volatile
 10410                           
 10411                           ;settings.c: 147:                 LATCbits.LATC7 = !dir;
 10412  0603  0876               	movf	i1setMotors@dir,w
 10413  0604  1903               	btfsc	3,2
 10414  0605  2E07               	goto	u314_21
 10415  0606  2E0A               	goto	u314_20
 10416  0607                     u314_21:	
 10417  0607  0020               	movlb	0	; select bank0
 10418  0608  1798               	bsf	24,7	;volatile
 10419  0609  2E0C               	goto	u315_24
 10420  060A                     u314_20:	
 10421  060A  0020               	movlb	0	; select bank0
 10422  060B  1398               	bcf	24,7	;volatile
 10423  060C                     u315_24:	
 10424  060C                     i1l3907:	
 10425                           
 10426                           ;settings.c: 148:                 LATCbits.LATC3 = dir;
 10427  060C  0C76               	rrf	i1setMotors@dir,w
 10428  060D  1C03               	skipc
 10429  060E  1198               	bcf	24,3	;volatile
 10430  060F  1803               	skipnc
 10431  0610  1598               	bsf	24,3	;volatile
 10432  0611                     i1l3909:	
 10433                           
 10434                           ;settings.c: 149:                 LATCbits.LATC5 = dir;
 10435  0611  0C76               	rrf	i1setMotors@dir,w
 10436  0612  1C03               	skipc
 10437  0613  1298               	bcf	24,5	;volatile
 10438  0614  1803               	skipnc
 10439  0615  1698               	bsf	24,5	;volatile
 10440                           
 10441                           ;settings.c: 150:                 LATCbits.LATC1 = !dir;
 10442  0616  0876               	movf	i1setMotors@dir,w
 10443  0617  1903               	btfsc	3,2
 10444  0618  2E1A               	goto	u316_21
 10445  0619  2E1D               	goto	u316_20
 10446  061A                     u316_21:	
 10447  061A  0020               	movlb	0	; select bank0
 10448  061B  1498               	bsf	24,1	;volatile
 10449  061C  2E1F               	goto	u317_24
 10450  061D                     u316_20:	
 10451  061D  0020               	movlb	0	; select bank0
 10452  061E  1098               	bcf	24,1	;volatile
 10453  061F                     u317_24:	
 10454  061F                     i1l3911:	
 10455                           
 10456                           ;settings.c: 151:                 setPWM(2,v);
 10457  061F  0877               	movf	i1setMotors@v,w
 10458  0620  00F8               	movwf	??i1_setMotors
 10459  0621  0878               	movf	??i1_setMotors,w
 10460  0622  00F0               	movwf	i1setPWM@pwm
 10461  0623  3002               	movlw	2
 10462  0624  318B  2395  3185   	fcall	i1_setPWM
 10463  0627                     i1l3913:	
 10464                           
 10465                           ;settings.c: 152:                 TRISC &= 0b01010101;
 10466  0627  3055               	movlw	85
 10467  0628  00F8               	movwf	??i1_setMotors
 10468  0629  0878               	movf	??i1_setMotors,w
 10469  062A  0020               	movlb	0	; select bank0
 10470  062B  0593               	andwf	19,f	;volatile
 10471                           
 10472                           ;settings.c: 153:                 break;
 10473  062C  2ED4               	goto	i1l505
 10474  062D                     i1l3915:	
 10475                           
 10476                           ;settings.c: 155:                 TRISD |= 0b01010101;
 10477  062D  3055               	movlw	85
 10478  062E  00F8               	movwf	??i1_setMotors
 10479  062F  0878               	movf	??i1_setMotors,w
 10480  0630  0020               	movlb	0	; select bank0
 10481  0631  0494               	iorwf	20,f	;volatile
 10482  0632                     i1l3917:	
 10483                           
 10484                           ;settings.c: 156:                 RD4PPS = 11*(!dir);
 10485  0632  300B               	movlw	11
 10486  0633  00F8               	movwf	??i1_setMotors
 10487  0634  0878               	movf	??i1_setMotors,w
 10488  0635  00F0               	movwf	i1___bmul@multiplicand
 10489  0636  0876               	movf	i1setMotors@dir,w
 10490  0637  1903               	btfsc	3,2
 10491  0638  2E3A               	goto	u318_21
 10492  0639  2E3C               	goto	u318_20
 10493  063A                     u318_21:	
 10494  063A  3001               	movlw	1
 10495  063B  2E3D               	goto	u319_20
 10496  063C                     u318_20:	
 10497  063C  3000               	movlw	0
 10498  063D                     u319_20:	
 10499  063D  318A  220B  3185   	fcall	i1___bmul
 10500  0640  003E               	movlb	30	; select bank30
 10501  0641  00AC               	movwf	44	;volatile
 10502  0642                     i1l3919:	
 10503                           
 10504                           ;settings.c: 157:                 RD0PPS = 0;
 10505  0642  01A8               	clrf	40	;volatile
 10506  0643                     i1l3921:	
 10507                           
 10508                           ;settings.c: 158:                 RD6PPS = 11*dir;
 10509  0643  300B               	movlw	11
 10510  0644  00F8               	movwf	??i1_setMotors
 10511  0645  0878               	movf	??i1_setMotors,w
 10512  0646  00F0               	movwf	i1___bmul@multiplicand
 10513  0647  0876               	movf	i1setMotors@dir,w
 10514  0648  318A  220B  3185   	fcall	i1___bmul
 10515  064B  003E               	movlb	30	; select bank30
 10516  064C  00AE               	movwf	46	;volatile
 10517  064D                     i1l3923:	
 10518                           
 10519                           ;settings.c: 159:                 RD2PPS = 0;
 10520  064D  01AA               	clrf	42	;volatile
 10521                           
 10522                           ;settings.c: 160:                 LATDbits.LATD4 = !dir;
 10523  064E  0876               	movf	i1setMotors@dir,w
 10524  064F  1903               	btfsc	3,2
 10525  0650  2E52               	goto	u320_21
 10526  0651  2E55               	goto	u320_20
 10527  0652                     u320_21:	
 10528  0652  0020               	movlb	0	; select bank0
 10529  0653  1619               	bsf	25,4	;volatile
 10530  0654  2E57               	goto	u321_24
 10531  0655                     u320_20:	
 10532  0655  0020               	movlb	0	; select bank0
 10533  0656  1219               	bcf	25,4	;volatile
 10534  0657                     u321_24:	
 10535  0657                     i1l3925:	
 10536                           
 10537                           ;settings.c: 161:                 LATDbits.LATD0 = dir;
 10538  0657  0C76               	rrf	i1setMotors@dir,w
 10539  0658  1C03               	skipc
 10540  0659  1019               	bcf	25,0	;volatile
 10541  065A  1803               	skipnc
 10542  065B  1419               	bsf	25,0	;volatile
 10543  065C                     i1l3927:	
 10544                           
 10545                           ;settings.c: 162:                 LATDbits.LATD6 = dir;
 10546  065C  0C76               	rrf	i1setMotors@dir,w
 10547  065D  1C03               	skipc
 10548  065E  1319               	bcf	25,6	;volatile
 10549  065F  1803               	skipnc
 10550  0660  1719               	bsf	25,6	;volatile
 10551                           
 10552                           ;settings.c: 163:                 LATDbits.LATD2 = !dir;
 10553  0661  0876               	movf	i1setMotors@dir,w
 10554  0662  1903               	btfsc	3,2
 10555  0663  2E65               	goto	u322_21
 10556  0664  2E68               	goto	u322_20
 10557  0665                     u322_21:	
 10558  0665  0020               	movlb	0	; select bank0
 10559  0666  1519               	bsf	25,2	;volatile
 10560  0667  2E6A               	goto	u323_24
 10561  0668                     u322_20:	
 10562  0668  0020               	movlb	0	; select bank0
 10563  0669  1119               	bcf	25,2	;volatile
 10564  066A                     u323_24:	
 10565  066A                     i1l3929:	
 10566                           
 10567                           ;settings.c: 164:                 setPWM(3,v);
 10568  066A  0877               	movf	i1setMotors@v,w
 10569  066B  00F8               	movwf	??i1_setMotors
 10570  066C  0878               	movf	??i1_setMotors,w
 10571  066D  00F0               	movwf	i1setPWM@pwm
 10572  066E  3003               	movlw	3
 10573  066F  318B  2395  3185   	fcall	i1_setPWM
 10574  0672                     i1l3931:	
 10575                           
 10576                           ;settings.c: 165:                 TRISD &= 0b10101010;
 10577  0672  30AA               	movlw	170
 10578  0673  00F8               	movwf	??i1_setMotors
 10579  0674  0878               	movf	??i1_setMotors,w
 10580  0675  0020               	movlb	0	; select bank0
 10581  0676  0594               	andwf	20,f	;volatile
 10582                           
 10583                           ;settings.c: 166:                 break;
 10584  0677  2ED4               	goto	i1l505
 10585  0678                     i1l3933:	
 10586                           
 10587                           ;settings.c: 168:                 TRISD |= 0b01010101;
 10588  0678  3055               	movlw	85
 10589  0679  00F8               	movwf	??i1_setMotors
 10590  067A  0878               	movf	??i1_setMotors,w
 10591  067B  0020               	movlb	0	; select bank0
 10592  067C  0494               	iorwf	20,f	;volatile
 10593  067D                     i1l3935:	
 10594                           
 10595                           ;settings.c: 169:                 RD5PPS = 12*(!dir);
 10596  067D  300C               	movlw	12
 10597  067E  00F8               	movwf	??i1_setMotors
 10598  067F  0878               	movf	??i1_setMotors,w
 10599  0680  00F0               	movwf	i1___bmul@multiplicand
 10600  0681  0876               	movf	i1setMotors@dir,w
 10601  0682  1903               	btfsc	3,2
 10602  0683  2E85               	goto	u324_21
 10603  0684  2E87               	goto	u324_20
 10604  0685                     u324_21:	
 10605  0685  3001               	movlw	1
 10606  0686  2E88               	goto	u325_20
 10607  0687                     u324_20:	
 10608  0687  3000               	movlw	0
 10609  0688                     u325_20:	
 10610  0688  318A  220B  3185   	fcall	i1___bmul
 10611  068B  003E               	movlb	30	; select bank30
 10612  068C  00AD               	movwf	45	;volatile
 10613  068D                     i1l3937:	
 10614                           
 10615                           ;settings.c: 170:                 RD1PPS = 0;
 10616  068D  01A9               	clrf	41	;volatile
 10617  068E                     i1l3939:	
 10618                           
 10619                           ;settings.c: 171:                 RD7PPS = 12*dir;
 10620  068E  300C               	movlw	12
 10621  068F  00F8               	movwf	??i1_setMotors
 10622  0690  0878               	movf	??i1_setMotors,w
 10623  0691  00F0               	movwf	i1___bmul@multiplicand
 10624  0692  0876               	movf	i1setMotors@dir,w
 10625  0693  318A  220B  3185   	fcall	i1___bmul
 10626  0696  003E               	movlb	30	; select bank30
 10627  0697  00AF               	movwf	47	;volatile
 10628  0698                     i1l3941:	
 10629                           
 10630                           ;settings.c: 172:                 RD3PPS = 0;
 10631  0698  01AB               	clrf	43	;volatile
 10632                           
 10633                           ;settings.c: 173:                 LATDbits.LATD5 = !dir;
 10634  0699  0876               	movf	i1setMotors@dir,w
 10635  069A  1903               	btfsc	3,2
 10636  069B  2E9D               	goto	u326_21
 10637  069C  2EA0               	goto	u326_20
 10638  069D                     u326_21:	
 10639  069D  0020               	movlb	0	; select bank0
 10640  069E  1699               	bsf	25,5	;volatile
 10641  069F  2EA2               	goto	u327_24
 10642  06A0                     u326_20:	
 10643  06A0  0020               	movlb	0	; select bank0
 10644  06A1  1299               	bcf	25,5	;volatile
 10645  06A2                     u327_24:	
 10646  06A2                     i1l3943:	
 10647                           
 10648                           ;settings.c: 174:                 LATDbits.LATD1 = dir;
 10649  06A2  0C76               	rrf	i1setMotors@dir,w
 10650  06A3  1C03               	skipc
 10651  06A4  1099               	bcf	25,1	;volatile
 10652  06A5  1803               	skipnc
 10653  06A6  1499               	bsf	25,1	;volatile
 10654  06A7                     i1l3945:	
 10655                           
 10656                           ;settings.c: 175:                 LATDbits.LATD7 = dir;
 10657  06A7  0C76               	rrf	i1setMotors@dir,w
 10658  06A8  1C03               	skipc
 10659  06A9  1399               	bcf	25,7	;volatile
 10660  06AA  1803               	skipnc
 10661  06AB  1799               	bsf	25,7	;volatile
 10662                           
 10663                           ;settings.c: 176:                 LATDbits.LATD3 = !dir;
 10664  06AC  0876               	movf	i1setMotors@dir,w
 10665  06AD  1903               	btfsc	3,2
 10666  06AE  2EB0               	goto	u328_21
 10667  06AF  2EB3               	goto	u328_20
 10668  06B0                     u328_21:	
 10669  06B0  0020               	movlb	0	; select bank0
 10670  06B1  1599               	bsf	25,3	;volatile
 10671  06B2  2EB5               	goto	u329_24
 10672  06B3                     u328_20:	
 10673  06B3  0020               	movlb	0	; select bank0
 10674  06B4  1199               	bcf	25,3	;volatile
 10675  06B5                     u329_24:	
 10676  06B5                     i1l3947:	
 10677                           
 10678                           ;settings.c: 177:                 setPWM(4,v);
 10679  06B5  0877               	movf	i1setMotors@v,w
 10680  06B6  00F8               	movwf	??i1_setMotors
 10681  06B7  0878               	movf	??i1_setMotors,w
 10682  06B8  00F0               	movwf	i1setPWM@pwm
 10683  06B9  3004               	movlw	4
 10684  06BA  318B  2395  3185   	fcall	i1_setPWM
 10685  06BD  2E72               	goto	i1l3931
 10686  06BE                     i1l3953:	
 10687  06BE  087A               	movf	i1setMotors@motor,w
 10688  06BF  00F8               	movwf	??i1_setMotors
 10689  06C0  01F9               	clrf	??i1_setMotors+1
 10690                           
 10691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10692                           ; Switch size 1, requested type "simple"
 10693                           ; Number of cases is 1, Range of values is 0 to 0
 10694                           ; switch strategies available:
 10695                           ; Name         Instructions Cycles
 10696                           ; simple_byte            4     3 (average)
 10697                           ; direct_byte            8     6 (fixed)
 10698                           ; jumptable            260     6 (fixed)
 10699                           ;	Chosen strategy is simple_byte
 10700  06C1  0879               	movf	??i1_setMotors+1,w
 10701  06C2  3A00               	xorlw	0	; case 0
 10702  06C3  1903               	skipnz
 10703  06C4  2EC6               	goto	i1l5111
 10704  06C5  2ED4               	goto	i1l505
 10705  06C6                     i1l5111:	
 10706                           
 10707                           ; Switch size 1, requested type "simple"
 10708                           ; Number of cases is 4, Range of values is 1 to 4
 10709                           ; switch strategies available:
 10710                           ; Name         Instructions Cycles
 10711                           ; simple_byte           13     7 (average)
 10712                           ; direct_byte           17     9 (fixed)
 10713                           ; jumptable            263     9 (fixed)
 10714                           ;	Chosen strategy is simple_byte
 10715  06C6  0878               	movf	??i1_setMotors,w
 10716  06C7  3A01               	xorlw	1	; case 1
 10717  06C8  1903               	skipnz
 10718  06C9  2D97               	goto	i1l3879
 10719  06CA  3A03               	xorlw	3	; case 2
 10720  06CB  1903               	skipnz
 10721  06CC  2DE2               	goto	i1l3897
 10722  06CD  3A01               	xorlw	1	; case 3
 10723  06CE  1903               	skipnz
 10724  06CF  2E2D               	goto	i1l3915
 10725  06D0  3A07               	xorlw	7	; case 4
 10726  06D1  1903               	skipnz
 10727  06D2  2E78               	goto	i1l3933
 10728  06D3  2ED4               	goto	i1l505
 10729  06D4                     i1l505:	
 10730  06D4  0008               	return
 10731  06D5                     __end_ofi1_setMotors:	
 10732                           
 10733                           	psect	text24
 10734  0B95                     __ptext24:	
 10735 ;; *************** function i1_setPWM *****************
 10736 ;; Defined at:
 10737 ;;		line 43 in file "settings.c"
 10738 ;; Parameters:    Size  Location     Type
 10739 ;;  module          1    wreg     unsigned char 
 10740 ;;  pwm             1    0[COMMON] unsigned char 
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;  module          1    3[COMMON] unsigned char 
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  1    wreg      void 
 10745 ;; Registers used:
 10746 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10752 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10753 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10755 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;Total ram usage:        6 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; This function calls:
 10759 ;;		Nothing
 10760 ;; This function is called by:
 10761 ;;		_setDrive
 10762 ;;		_setDrive2
 10763 ;;		i1_setMotors
 10764 ;; This function uses a non-reentrant model
 10765 ;;
 10766                           
 10767                           
 10768                           ;psect for function i1_setPWM
 10769  0B95                     i1_setPWM:	
 10770                           
 10771                           ;incstack = 0
 10772                           ; Regs used in i1_setPWM: [wreg-fsr0h+status,2+status,0]
 10773                           ;i1setPWM@module stored from wreg
 10774  0B95  00F3               	movwf	i1setPWM@module
 10775  0B96                     i1l3829:	
 10776                           
 10777                           ;settings.c: 44:     pwm = pwm<=250 ? pwm : 250;
 10778  0B96  30FB               	movlw	251
 10779  0B97  0270               	subwf	i1setPWM@pwm,w
 10780  0B98  1C03               	skipc
 10781  0B99  2B9B               	goto	u299_21
 10782  0B9A  2B9C               	goto	u299_20
 10783  0B9B                     u299_21:	
 10784  0B9B  2BA1               	goto	i1l3833
 10785  0B9C                     u299_20:	
 10786  0B9C                     i1l3831:	
 10787  0B9C  30FA               	movlw	250
 10788  0B9D  00F4               	movwf	i1_setPWM$1154
 10789  0B9E  3000               	movlw	0
 10790  0B9F  00F5               	movwf	i1_setPWM$1154+1
 10791  0BA0  2BA8               	goto	i1l462
 10792  0BA1                     i1l3833:	
 10793  0BA1  0870               	movf	i1setPWM@pwm,w
 10794  0BA2  00F1               	movwf	??i1_setPWM
 10795  0BA3  01F2               	clrf	??i1_setPWM+1
 10796  0BA4  0871               	movf	??i1_setPWM,w
 10797  0BA5  00F4               	movwf	i1_setPWM$1154
 10798  0BA6  0872               	movf	??i1_setPWM+1,w
 10799  0BA7  00F5               	movwf	i1_setPWM$1154+1
 10800  0BA8                     i1l462:	
 10801  0BA8  0874               	movf	i1_setPWM$1154,w
 10802  0BA9  00F1               	movwf	??i1_setPWM
 10803  0BAA  0871               	movf	??i1_setPWM,w
 10804  0BAB  00F0               	movwf	i1setPWM@pwm
 10805                           
 10806                           ;settings.c: 45:     switch(module){
 10807  0BAC  2BC9               	goto	i1l3851
 10808  0BAD                     i1l3835:	
 10809                           
 10810                           ;settings.c: 47:             CCPR1H = pwm;
 10811  0BAD  0870               	movf	i1setPWM@pwm,w
 10812  0BAE  0026               	movlb	6	; select bank6
 10813  0BAF  008D               	movwf	13	;volatile
 10814                           
 10815                           ;settings.c: 48:             break;
 10816  0BB0  2BE8               	goto	i1l472
 10817  0BB1                     i1l3837:	
 10818                           
 10819                           ;settings.c: 50:             CCPR2H = pwm;
 10820  0BB1  0870               	movf	i1setPWM@pwm,w
 10821  0BB2  0026               	movlb	6	; select bank6
 10822  0BB3  0091               	movwf	17	;volatile
 10823                           
 10824                           ;settings.c: 51:             break;
 10825  0BB4  2BE8               	goto	i1l472
 10826  0BB5                     i1l3839:	
 10827                           
 10828                           ;settings.c: 53:             CCPR3H = pwm;
 10829  0BB5  0870               	movf	i1setPWM@pwm,w
 10830  0BB6  0026               	movlb	6	; select bank6
 10831  0BB7  0095               	movwf	21	;volatile
 10832                           
 10833                           ;settings.c: 54:             break;
 10834  0BB8  2BE8               	goto	i1l472
 10835  0BB9                     i1l3841:	
 10836                           
 10837                           ;settings.c: 56:             CCPR4H = pwm;
 10838  0BB9  0870               	movf	i1setPWM@pwm,w
 10839  0BBA  0026               	movlb	6	; select bank6
 10840  0BBB  0099               	movwf	25	;volatile
 10841                           
 10842                           ;settings.c: 57:             break;
 10843  0BBC  2BE8               	goto	i1l472
 10844  0BBD                     i1l3843:	
 10845                           
 10846                           ;settings.c: 59:             CCPR5H = pwm;
 10847  0BBD  0870               	movf	i1setPWM@pwm,w
 10848  0BBE  0026               	movlb	6	; select bank6
 10849  0BBF  009D               	movwf	29	;volatile
 10850                           
 10851                           ;settings.c: 60:             break;
 10852  0BC0  2BE8               	goto	i1l472
 10853  0BC1                     i1l3845:	
 10854                           
 10855                           ;settings.c: 62:             PWM6DCH = pwm;
 10856  0BC1  0870               	movf	i1setPWM@pwm,w
 10857  0BC2  0027               	movlb	7	; select bank7
 10858  0BC3  008D               	movwf	13	;volatile
 10859                           
 10860                           ;settings.c: 63:             break;
 10861  0BC4  2BE8               	goto	i1l472
 10862  0BC5                     i1l3847:	
 10863                           
 10864                           ;settings.c: 65:             PWM7DCH = pwm;
 10865  0BC5  0870               	movf	i1setPWM@pwm,w
 10866  0BC6  0027               	movlb	7	; select bank7
 10867  0BC7  0091               	movwf	17	;volatile
 10868                           
 10869                           ;settings.c: 66:             break;
 10870  0BC8  2BE8               	goto	i1l472
 10871  0BC9                     i1l3851:	
 10872  0BC9  0873               	movf	i1setPWM@module,w
 10873  0BCA  00F1               	movwf	??i1_setPWM
 10874  0BCB  01F2               	clrf	??i1_setPWM+1
 10875                           
 10876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10877                           ; Switch size 1, requested type "simple"
 10878                           ; Number of cases is 1, Range of values is 0 to 0
 10879                           ; switch strategies available:
 10880                           ; Name         Instructions Cycles
 10881                           ; simple_byte            4     3 (average)
 10882                           ; direct_byte            8     6 (fixed)
 10883                           ; jumptable            260     6 (fixed)
 10884                           ;	Chosen strategy is simple_byte
 10885  0BCC  0872               	movf	??i1_setPWM+1,w
 10886  0BCD  3A00               	xorlw	0	; case 0
 10887  0BCE  1903               	skipnz
 10888  0BCF  2BD1               	goto	i1l5113
 10889  0BD0  2BE8               	goto	i1l472
 10890  0BD1                     i1l5113:	
 10891                           
 10892                           ; Switch size 1, requested type "simple"
 10893                           ; Number of cases is 7, Range of values is 1 to 7
 10894                           ; switch strategies available:
 10895                           ; Name         Instructions Cycles
 10896                           ; simple_byte           22    12 (average)
 10897                           ; direct_byte           23     9 (fixed)
 10898                           ; jumptable            263     9 (fixed)
 10899                           ;	Chosen strategy is simple_byte
 10900  0BD1  0871               	movf	??i1_setPWM,w
 10901  0BD2  3A01               	xorlw	1	; case 1
 10902  0BD3  1903               	skipnz
 10903  0BD4  2BAD               	goto	i1l3835
 10904  0BD5  3A03               	xorlw	3	; case 2
 10905  0BD6  1903               	skipnz
 10906  0BD7  2BB1               	goto	i1l3837
 10907  0BD8  3A01               	xorlw	1	; case 3
 10908  0BD9  1903               	skipnz
 10909  0BDA  2BB5               	goto	i1l3839
 10910  0BDB  3A07               	xorlw	7	; case 4
 10911  0BDC  1903               	skipnz
 10912  0BDD  2BB9               	goto	i1l3841
 10913  0BDE  3A01               	xorlw	1	; case 5
 10914  0BDF  1903               	skipnz
 10915  0BE0  2BBD               	goto	i1l3843
 10916  0BE1  3A03               	xorlw	3	; case 6
 10917  0BE2  1903               	skipnz
 10918  0BE3  2BC1               	goto	i1l3845
 10919  0BE4  3A01               	xorlw	1	; case 7
 10920  0BE5  1903               	skipnz
 10921  0BE6  2BC5               	goto	i1l3847
 10922  0BE7  2BE8               	goto	i1l472
 10923  0BE8                     i1l472:	
 10924  0BE8  0008               	return
 10925  0BE9                     __end_ofi1_setPWM:	
 10926                           
 10927                           	psect	text25
 10928  0A0B                     __ptext25:	
 10929 ;; *************** function i1___bmul *****************
 10930 ;; Defined at:
 10931 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
 10932 ;; Parameters:    Size  Location     Type
 10933 ;;  multiplier      1    wreg     unsigned char 
 10934 ;;  multiplicand    1    0[COMMON] unsigned char 
 10935 ;; Auto vars:     Size  Location     Type
 10936 ;;  multiplier      1    3[COMMON] unsigned char 
 10937 ;;  __bmul          1    2[COMMON] unsigned char 
 10938 ;; Return value:  Size  Location     Type
 10939 ;;                  1    wreg      unsigned char 
 10940 ;; Registers used:
 10941 ;;		wreg, status,2, status,0
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10947 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10951 ;;Total ram usage:        4 bytes
 10952 ;; Hardware stack levels used:    1
 10953 ;; This function calls:
 10954 ;;		Nothing
 10955 ;; This function is called by:
 10956 ;;		i1_setMotors
 10957 ;; This function uses a non-reentrant model
 10958 ;;
 10959                           
 10960                           
 10961                           ;psect for function i1___bmul
 10962  0A0B                     i1___bmul:	
 10963                           
 10964                           ;incstack = 0
 10965                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 10966                           ;i1___bmul@multiplier stored from wreg
 10967  0A0B  00F3               	movwf	i1___bmul@multiplier
 10968  0A0C                     i1l3857:	
 10969  0A0C  01F2               	clrf	i1___bmul@product
 10970  0A0D                     i1l3859:	
 10971  0A0D  1C73               	btfss	i1___bmul@multiplier,0
 10972  0A0E  2A10               	goto	u300_21
 10973  0A0F  2A11               	goto	u300_20
 10974  0A10                     u300_21:	
 10975  0A10  2A15               	goto	i1l3863
 10976  0A11                     u300_20:	
 10977  0A11                     i1l3861:	
 10978  0A11  0870               	movf	i1___bmul@multiplicand,w
 10979  0A12  00F1               	movwf	??i1___bmul
 10980  0A13  0871               	movf	??i1___bmul,w
 10981  0A14  07F2               	addwf	i1___bmul@product,f
 10982  0A15                     i1l3863:	
 10983  0A15  1003               	clrc
 10984  0A16  0DF0               	rlf	i1___bmul@multiplicand,f
 10985  0A17                     i1l3865:	
 10986  0A17  1003               	clrc
 10987  0A18  0CF3               	rrf	i1___bmul@multiplier,f
 10988  0A19  0873               	movf	i1___bmul@multiplier,w
 10989  0A1A  1D03               	btfss	3,2
 10990  0A1B  2A1D               	goto	u301_21
 10991  0A1C  2A1E               	goto	u301_20
 10992  0A1D                     u301_21:	
 10993  0A1D  2A0D               	goto	i1l3859
 10994  0A1E                     u301_20:	
 10995  0A1E                     i1l3867:	
 10996  0A1E  0872               	movf	i1___bmul@product,w
 10997  0A1F                     i1l873:	
 10998  0A1F  0008               	return
 10999  0A20                     __end_ofi1___bmul:	
 11000                           
 11001                           	psect	text26
 11002  0B0B                     __ptext26:	
 11003 ;; *************** function _handleRead *****************
 11004 ;; Defined at:
 11005 ;;		line 64 in file "i2c.c"
 11006 ;; Parameters:    Size  Location     Type
 11007 ;;		None
 11008 ;; Auto vars:     Size  Location     Type
 11009 ;;		None
 11010 ;; Return value:  Size  Location     Type
 11011 ;;                  1    wreg      void 
 11012 ;; Registers used:
 11013 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11014 ;; Tracked objects:
 11015 ;;		On entry : 0/0
 11016 ;;		On exit  : 0/0
 11017 ;;		Unchanged: 0/0
 11018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11023 ;;Total ram usage:        2 bytes
 11024 ;; Hardware stack levels used:    1
 11025 ;; This function calls:
 11026 ;;		Nothing
 11027 ;; This function is called by:
 11028 ;;		_i2cISR
 11029 ;; This function uses a non-reentrant model
 11030 ;;
 11031                           
 11032                           
 11033                           ;psect for function _handleRead
 11034  0B0B                     _handleRead:	
 11035  0B0B                     i1l3101:	
 11036                           ;incstack = 0
 11037                           ; Regs used in _handleRead: [wreg-fsr0h+status,2+status,0]
 11038                           
 11039                           
 11040                           ;i2c.c: 65:     switch(i2c_settings&0b1111){
 11041  0B0B  2B23               	goto	i1l3119
 11042  0B0C                     i1l3103:	
 11043                           
 11044                           ;i2c.c: 67:             SSP1BUF = props.claw1.height;
 11045  0B0C  085B               	movf	_props+2,w
 11046  0B0D  0023               	movlb	3	; select bank3
 11047  0B0E  008C               	movwf	12	;volatile
 11048                           
 11049                           ;i2c.c: 68:             break;
 11050  0B0F  2B41               	goto	i1l305
 11051  0B10                     i1l3105:	
 11052                           
 11053                           ;i2c.c: 70:             SSP1BUF = props.claw1.orientation;
 11054  0B10  085A               	movf	_props+1,w
 11055  0B11  0023               	movlb	3	; select bank3
 11056  0B12  008C               	movwf	12	;volatile
 11057                           
 11058                           ;i2c.c: 71:             break;
 11059  0B13  2B41               	goto	i1l305
 11060  0B14                     i1l3107:	
 11061                           
 11062                           ;i2c.c: 73:             SSP1BUF = props.claw1.clamped;
 11063  0B14  0859               	movf	_props,w
 11064  0B15  0023               	movlb	3	; select bank3
 11065  0B16  008C               	movwf	12	;volatile
 11066                           
 11067                           ;i2c.c: 74:             break;
 11068  0B17  2B41               	goto	i1l305
 11069  0B18                     i1l3109:	
 11070                           
 11071                           ;i2c.c: 76:             SSP1BUF = props.revolver.stat;
 11072  0B18  0861               	movf	_props+8,w
 11073  0B19  0023               	movlb	3	; select bank3
 11074  0B1A  008C               	movwf	12	;volatile
 11075                           
 11076                           ;i2c.c: 77:             break;
 11077  0B1B  2B41               	goto	i1l305
 11078  0B1C                     i1l3111:	
 11079                           
 11080                           ;i2c.c: 79:             SSP1BUF = props.claw1.routine;
 11081  0B1C  085C               	movf	_props+3,w
 11082  0B1D  0023               	movlb	3	; select bank3
 11083  0B1E  008C               	movwf	12	;volatile
 11084                           
 11085                           ;i2c.c: 80:             break;
 11086  0B1F  2B41               	goto	i1l305
 11087  0B20                     i1l3115:	
 11088                           
 11089                           ;i2c.c: 85:             SSP1BUF = 0;
 11090  0B20  0023               	movlb	3	; select bank3
 11091  0B21  018C               	clrf	12	;volatile
 11092                           
 11093                           ;i2c.c: 86:             break;
 11094  0B22  2B41               	goto	i1l305
 11095  0B23                     i1l3119:	
 11096  0B23  0020               	movlb	0	; select bank0
 11097  0B24  0857               	movf	_i2c_settings,w
 11098  0B25  390F               	andlw	15
 11099  0B26  00F0               	movwf	??_handleRead
 11100  0B27  01F1               	clrf	??_handleRead+1
 11101                           
 11102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11103                           ; Switch size 1, requested type "simple"
 11104                           ; Number of cases is 1, Range of values is 0 to 0
 11105                           ; switch strategies available:
 11106                           ; Name         Instructions Cycles
 11107                           ; simple_byte            4     3 (average)
 11108                           ; direct_byte            8     6 (fixed)
 11109                           ; jumptable            260     6 (fixed)
 11110                           ;	Chosen strategy is simple_byte
 11111  0B28  0871               	movf	??_handleRead+1,w
 11112  0B29  3A00               	xorlw	0	; case 0
 11113  0B2A  1903               	skipnz
 11114  0B2B  2B2D               	goto	i1l5115
 11115  0B2C  2B20               	goto	i1l3115
 11116  0B2D                     i1l5115:	
 11117                           
 11118                           ; Switch size 1, requested type "simple"
 11119                           ; Number of cases is 6, Range of values is 0 to 5
 11120                           ; switch strategies available:
 11121                           ; Name         Instructions Cycles
 11122                           ; direct_byte           18     6 (fixed)
 11123                           ; simple_byte           19    10 (average)
 11124                           ; jumptable            260     6 (fixed)
 11125                           ;	Chosen strategy is simple_byte
 11126  0B2D  0870               	movf	??_handleRead,w
 11127  0B2E  3A00               	xorlw	0	; case 0
 11128  0B2F  1903               	skipnz
 11129  0B30  2B0C               	goto	i1l3103
 11130  0B31  3A01               	xorlw	1	; case 1
 11131  0B32  1903               	skipnz
 11132  0B33  2B10               	goto	i1l3105
 11133  0B34  3A03               	xorlw	3	; case 2
 11134  0B35  1903               	skipnz
 11135  0B36  2B14               	goto	i1l3107
 11136  0B37  3A01               	xorlw	1	; case 3
 11137  0B38  1903               	skipnz
 11138  0B39  2B18               	goto	i1l3109
 11139  0B3A  3A07               	xorlw	7	; case 4
 11140  0B3B  1903               	skipnz
 11141  0B3C  2B1C               	goto	i1l3111
 11142  0B3D  3A01               	xorlw	1	; case 5
 11143  0B3E  1903               	skipnz
 11144  0B3F  2B18               	goto	i1l3109
 11145  0B40  2B20               	goto	i1l3115
 11146  0B41                     i1l305:	
 11147  0B41  0008               	return
 11148  0B42                     __end_of_handleRead:	
 11149  007E                     btemp	set	126	;btemp
 11150  007E                     int$flags	set	126
 11151  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         31
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      64
    BANK1            80      9       9
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    updateTime@p	PTR struct properties size(1) Largest target is 17
		 -> props(BANK0[17]), 

    testButtons@lift	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.height(BANK0[1]), 

    testButtons@rotate	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.orientation(BANK0[1]), 

    testButtons@p	PTR struct properties size(1) Largest target is 17
		 -> props(BANK0[17]), 

    testButtons@clamp	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.clamped(BANK0[1]), 

    updateMovement@lift	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.height(BANK0[1]), 

    updateMovement@rotate	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.orientation(BANK0[1]), 

    updateMovement@p	PTR struct properties size(1) Largest target is 17
		 -> props(BANK0[17]), 

    updateMovement@clamp	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.clamped(BANK0[1]), 

    updateMotors@lift	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.height(BANK0[1]), 

    updateMotors@rotate	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.orientation(BANK0[1]), 

    updateMotors@p	PTR struct properties size(1) Largest target is 17
		 -> props(BANK0[17]), 

    updateMotors@clamp	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.clamped(BANK0[1]), 

    updateSys@p	PTR struct properties size(1) Largest target is 17
		 -> props(BANK0[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _setStatus->_revRoutine
    _setRoutine->i1_setMotors
    _setDrive2->i1_setPWM
    _setDrive->i1_setPWM
    _revRoutine->i1_setMotors
    i1_setMotors->i1_setPWM

Critical Paths under _main in BANK0

    _updateSys->_updateMotors
    _updateSys->_updateTime
    _updateMovement->_setMotors
    _updateMotors->_setMotors
    _setMotors->_setPWM

Critical Paths under _ISR in BANK0

    _ISR->_i2cISR
    _i2cISR->_handleWrite
    _handleWrite->_setStatus
    _setStatus->_setRoutine

Critical Paths under _main in BANK1

    _main->_updateSys
    _updateSys->_updateMovement

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20004
                       _configureCPU
                       _configureI2C
                       _configureIOs
                       _configurePWM
                    _configureTimers
                          _updateSys
 ---------------------------------------------------------------------------------
 (1) _updateSys                                            1     1      0   20004
                                              8 BANK1      1     1      0
                        _testButtons
                       _updateMotors
                     _updateMovement
                         _updateTime
 ---------------------------------------------------------------------------------
 (2) _updateTime                                          17    17      0     546
                                             16 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 (2) _updateMovement                                      13    13      0   11970
                                             27 BANK0      5     5      0
                                              0 BANK1      8     8      0
                          _setMotors
                           _setProps
 ---------------------------------------------------------------------------------
 (3) _setProps                                             5     3      2    3606
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _updateMotors                                         6     6      0    6594
                                             27 BANK0      6     6      0
                          _setMotors
 ---------------------------------------------------------------------------------
 (3) _setMotors                                            5     3      2    6127
                                             22 BANK0      5     3      2
                             ___bmul
                             _setPWM
 ---------------------------------------------------------------------------------
 (4) _setPWM                                               6     5      1    1370
                                             16 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     856
                                             16 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _testButtons                                          5     5      0     622
                                             16 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _configureTimers                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurePWM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureIOs                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureI2C                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureCPU                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0   13856
                             _i2cISR
 ---------------------------------------------------------------------------------
 (6) _i2cISR                                               2     2      0   13856
                                             14 BANK0      2     2      0
                         _handleRead
                        _handleWrite
 ---------------------------------------------------------------------------------
 (7) _handleWrite                                          4     4      0   13819
                                             10 BANK0      4     4      0
                          _setStatus
 ---------------------------------------------------------------------------------
 (8) _setStatus                                            8     5      3   13695
                                              2 BANK0      8     5      3
                         _revRoutine
                           _setDrive
                          _setDrive2
                         _setRoutine
                        i1_setMotors
 ---------------------------------------------------------------------------------
 (9) _setRoutine                                           4     4      0    3368
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                        i1_setMotors
 ---------------------------------------------------------------------------------
 (9) _setDrive2                                            5     3      2    1431
                                              6 COMMON     5     3      2
                           i1_setPWM
 ---------------------------------------------------------------------------------
 (9) _setDrive                                             4     3      1    1403
                                              6 COMMON     4     3      1
                           i1_setPWM
 ---------------------------------------------------------------------------------
 (9) _revRoutine                                           4     4      0    3300
                                             11 COMMON     3     3      0
                                              0 BANK0      1     1      0
                        i1_setMotors
 ---------------------------------------------------------------------------------
 (9) i1_setMotors                                          5     3      2    3207
                                              6 COMMON     5     3      2
                           i1___bmul
                           i1_setPWM
 ---------------------------------------------------------------------------------
 (10) i1_setPWM                                            6     5      1     910
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (10) i1___bmul                                            4     3      1     416
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) _handleRead                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configureCPU
   _configureI2C
   _configureIOs
   _configurePWM
   _configureTimers
   _updateSys
     _testButtons
     _updateMotors
       _setMotors
         ___bmul
         _setPWM
     _updateMovement
       _setMotors
         ___bmul
         _setPWM
       _setProps
     _updateTime

 _ISR (ROOT)
   _i2cISR
     _handleRead
     _handleWrite
       _setStatus
         _revRoutine
           i1_setMotors
             i1___bmul
             i1_setPWM
         _setDrive
           i1_setPWM
         _setDrive2
           i1_setPWM
         _setRoutine
           i1_setMotors
             i1___bmul
             i1_setPWM
         i1_setMotors
           i1___bmul
           i1_setPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      9       9       7       11.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      57      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      57      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jan 28 20:50:30 2020

           ?_configureI2C 0070             ?_configureCPU 0070             ?_configureIOs 0070  
           ?_configurePWM 0070            ___bmul@product 0032               __CFG_CP$OFF 0000  
             __CFG_LVP$ON 0000                       l230 0AAF                       l227 09FA  
                     l236 0A0A                       l245 0C9E                       l239 0A35  
                     l600 02CF                       l505 0566                       l462 0BFD  
                     l472 0C3D                       l580 0A6B                       l670 03F3  
                     l592 0E20                       l673 07FA                       l690 0D92  
                     l695 0EB1                       l873 0A4B                       _PR2 028D  
            __CFG_CPD$OFF 0000                       _ISR 0004              __CFG_BORV$LO 0000  
                     wreg 0009                      ?_ISR 0070           updateTime@tPrev 003C  
            __CFG_ZCD$OFF 0000                      l4201 0BF6                      l4211 0C12  
                    l4203 0C02                      l5101 0C26                      l4213 0C16  
                    l4205 0C06                      l4301 0463                      l4231 0A41  
                    l4215 0C1A                      l4207 0C0A                      l4311 0486  
                    l4303 046B                      l4233 0A43                      l4225 0A38  
                    l4209 0C0E                      l4321 04B7                      l4313 0491  
                    l4305 0471                      l4401 0E2B                      l4411 0D12  
                    l4235 0A4A                      l4227 0A39                      l4219 0C1E  
                    l4331 04DD                      l4323 04BD                      l4315 049C  
                    l4307 0475                      l4403 0E32                      l4421 0D29  
                    l4413 0D16                      l4229 0A3D                      l4341 0509  
                    l4333 04E8                      l4325 04C1                      l4317 04A1  
                    l4309 0485                      l4501 0113                      l4405 0E3C  
                    l4431 0D44                      l4423 0D30                      l4415 0D1B  
                    l4351 0534                      l4343 050D                      l4335 04ED  
                    l4327 04D1                      l4319 04AF                      l4511 012F  
                    l4503 011B                      l4407 0E46                      l4441 0D60  
                    l4433 0D49                      l4425 0D34                      l4417 0D20  
                    l4353 0539                      l4345 051D                      l4337 04FB  
                    l4329 04D2                      l4361 0550                      l4281 0400  
                    l4601 036C                      l4521 0168                      l4513 0147  
                    l4505 0121                      l4409 0E74                      l4451 0D79  
                    l4443 0D64                      l4435 0D50                      l4427 0D39  
                    l4419 0D24                      l4355 0547                      l4347 051E  
                    l4339 0503                      l4291 0439                      l4283 040A  
                    l4611 0394                      l4603 0377                      l4531 0190  
                    l4523 0170                      l4515 014F                      l4507 0128  
                    l4701 09FB                      l4453 0D80                      l4445 0D69  
                    l4437 0D54                      l4429 0D40                      l4197 0BEB  
                    l4349 0529                      l4293 043A                      l4285 0414  
                    l4621 03BB                      l4613 039B                      l4605 037E  
                    l4541 01B6                      l4533 0197                      l4525 0176  
                    l4517 0155                      l5093 0139                      l4461 0026  
                    l4711 0C3E                      l4703 0A03                      l4455 0D84  
                    l4447 0D70                      l4439 0D59                      l4199 0BF1  
                    l4295 0445                      l4287 0425                      l4279 03F6  
                    l4367 07B5                      l4631 03E2                      l4623 03C2  
                    l4615 03A5                      l4607 0386                      l5095 0299  
                    l4551 0203                      l4543 01BD                      l4535 019E  
                    l4527 017D                      l4519 015C                      l4471 0045  
                    l4463 002D                      l4721 0C52                      l4713 0C4C  
                    l4705 0A04                      l4457 0D8A                      l4449 0D74  
                    l4297 0450                      l4289 0429                      l4633 03E9  
                    l4625 03CC                      l4617 03AD                      l4609 038D  
                    l5097 02BB                      l4561 0258                      l4553 020B  
                    l4545 01C3                      l4537 01A5                      l4529 0189  
                    l4481 0093                      l4473 004D                      l4465 0034  
                    l4731 0C58                      l4723 0C53                      l4715 0C4E  
                    l4707 0A08                      l5099 0558                      l4299 0455  
                    l4651 0D9E                      l4627 03D4                      l4619 03B4  
                    l4571 0281                      l4563 0260                      l4555 0213  
                    l4547 01CA                      l4539 01B1                      l4491 00E5  
                    l4483 009B                      l4475 0053                      l4467 003F  
                    l4459 0020                      l4709 0A20                      l4741 0C5E  
                    l4733 0C5A                      l4725 0C54                      l4717 0C4F  
                    l4661 0DCC                      l4653 0DA3                      l4629 03DB  
                    l4573 0288                      l4565 0267                      l4557 0245  
                    l4549 01D1                      l4493 00EC                      l4485 00A3  
                    l4477 005A                      l4581 02A7                      l4751 0C6B  
                    l4743 0C60                      l4735 0C5B                      l4727 0C55  
                    l4719 0C51                      l4671 0DFE                      l4663 0DD4  
                    l4655 0DAA                      l4647 0D95                      l4591 02F7  
                    l4567 0273                      l4559 024D                      l4495 00F8  
                    l4487 00D5                      l4479 0061                      l4583 02CF  
                    l4399 0E23                      l4823 0A4E                      l4681 0A8D  
                    l4761 0C77                      l4753 0C6D                      l4745 0C62  
                    l4737 0C5C                      l4729 0C57                      l4673 0E05  
                    l4665 0DDB                      l4657 0DB1                      l4649 0D99  
                    l4593 0302                      l4585 02D8                      l4577 028F  
                    l4569 027B                      l4497 0100                      l4489 00DD  
                    l4825 0A5C                      l4841 0A86                      l4833 0A6C  
                    l4691 0AA3                      l4683 0A97                      l4771 0C80  
                    l4763 0C78                      l4755 0C6E                      l4747 0C65  
                    l4739 0C5D                      l4675 0E1A                      l4667 0DF0  
                    l4659 0DC6                      l4595 030F                      l4587 02E2  
                    l4499 0107                      l4827 0A61                      l4835 0A7B  
                    l4677 09F1                      l4693 0AA5                      l4685 0A9A  
                    l4781 0C8D                      l4773 0C83                      l4765 0C7A  
                    l4757 0C6F                      l4749 0C6A                      l4669 0DF6  
                    l4597 0341                      l4589 02EA                      l4837 0A7D  
                    l4679 09F8                      l4695 0AA6                      l4687 0A9E  
                    l4791 0C99                      l4783 0C90                      l4775 0C85  
                    l4767 0C7B                      l4759 0C72                      l4599 034A  
                    l4839 0A7E                      l4697 0AA7                      l4689 0AA0  
                    l4793 0C9B                      l4785 0C92                      l4777 0C89  
                    l4769 0C7E                      l4699 0AAD                      l4795 0C9D  
                    l4787 0C96                      l4779 0C8B                      l4789 0C97  
                    _LATA 0016                      _LATB 0017                      _LATC 0018  
                    u4000 0100                      _LATD 0019                      u4001 00FF  
                    _LATE 001A                      u4010 011B                      u4011 011A  
                    u4100 0245                      u4020 014F                      u4101 0244  
                    u4021 014E                      u4110 0260                      u4030 0170  
                    u4111 025F                      u4031 016F                      u3400 0BF1  
                    u4200 034A                      u4120 027B                      u4040 0190  
                    u3401 0BF0                      u4201 0349                      u4121 027A  
                    u4041 018F                      u3410 0A3D                      u4210 0386  
                    u4050 0197                      u3411 0A3C                      u4211 0385  
                    u4051 0196                      u3420 0A4A                      u4300 03DB  
                    u4220 038D                      u4140 02D8                      u4060 019E  
                    u3421 0A49                      u4301 03DA                      u4221 038C  
                    u4141 02D7                      u4061 019D                      u4310 03E2  
                    u4230 0394                      u4150 02E2                      u4070 01B6  
                    u4311 03E1                      u4231 0393                      u4151 02E1  
                    u4135 02AF                      u4071 01B5                      u3600 0461  
                    u3520 03FC                      u4400 0DE4                      u4320 03E9  
                    u4240 039B                      u4160 02EA                      u4080 01BD  
                    u3601 045E                      u3521 03FA                      u4321 03E8  
                    u4241 039A                      u4161 02E9                      u4081 01BC  
                    u3530 03FD                      u4410 0DFE                      u4330 0DAA  
                    u4250 03AD                      u4170 030D                      u4090 0203  
                    u4411 0DFD                      u4331 0DA9                      u4251 03AC  
                    u4171 030A                      u4091 0202                      u3700 04E6  
                    u3620 047F                      u3540 040A                      u4420 0E05  
                    u4340 0DB1                      u4260 03B4                      u3701 04E3  
                    u3621 047D                      u3541 0409                      u4421 0E04  
                    u4341 0DB0                      u4261 03B3                      u3630 0480  
                    u3614 0463                      u3550 0414                      u4430 0E0D  
                    u4350 0DB9                      u4270 03BB                      u4190 0341  
                    u3551 0413                      u4431 0E0B                      u4351 0DB7  
                    u4271 03BA                      u4191 0340                      u3720 04F9  
                    u3640 049A                      u3560 0433                      u4440 0E0E  
                    u4360 0DBA                      u4280 03C2                      u4184 030F  
                    u3721 04F6                      u3641 0497                      u3561 0431  
                    u4281 03C1                      u3714 04E8                      u3570 0434  
                    u4370 0DD4                      u4290 03D4                      u4371 0DD3  
                    u4291 03D3                      u3900 0D44                      u3740 0517  
                    u3660 04AD                      u3580 044E                      u4380 0DDB  
                    u3901 0D43                      u3741 0515                      u3661 04AA  
                    u3581 044B                      u4381 0DDA                      u3805 07B8  
                    u3910 0D54                      u3750 0518                      u3734 04FB  
                    u3654 049C                      u4390 0DE3                      u3911 0D53  
                    u4391 0DE1                      u3815 07C3                      u3920 0D64  
                    u3760 0532                      u3680 04CB                      u3921 0D63  
                    u3761 052F                      u3681 04C9                      u3825 07CF  
                    u3930 0D74                      u3690 04CC                      u3674 04AF  
                    u3594 0450                      u3931 0D73                      u3835 07DA  
                    u3940 0D84                      u3780 0545                      u3941 0D83  
                    u3781 0542                      u3845 07E6                      u3774 0534  
                    u3950 0044                      u3870 0E46                      u3855 07F1  
                    u3951 0043                      u3871 0E45                      u3880 0D24  
                    u3960 004D                      u3881 0D23                      u3961 004C  
                    u3890 0D34                      u3794 0547                      u3970 0093  
                    u3891 0D33                      u3971 0092                      u3875 0E42  
                    u3980 00D5                      u3981 00D4                      u3990 00E5  
                    u3991 00E4                      _WPUA 0F39                      _WPUB 0F44  
                    _WPUC 0F4F                      _WPUD 0F5A                      _WPUE 0F65  
         updateMovement@p 003F           updateMovement@s 003B              __CFG_WRT$OFF 0000  
  __end_of_updateMovement 03F4          ?_configureTimers 0070                      _main 0A6C  
                    fsr0h 0005                      fsr1h 0007                      indf0 0000  
                    fsr0l 0004                      indf1 0001                      fsr1l 0006  
                    btemp 007E             __CFG_BOREN$ON 0000         testButtons@rotate 0032  
                    start 0010            ??_configureI2C 0030         ___bmul@multiplier 0033  
           __CFG_MCLRE$ON 0000            ??_configureCPU 0030            ??_configureIOs 0030  
          ??_configurePWM 0030            setMotors@motor 003A                     ??_ISR 007E  
                   _ADACQ 009D                     ?_main 0070                     _ADCLK 0098  
                   _ADCNT 010C                     _ADPCH 009E                     _ADREF 009A  
                   _ADPRE 009C             __CFG_WDTE$OFF 0000                     _T3CLK 0217  
                   _T2CON 028E                     _T3CON 0214                     i1l305 0B41  
                   i1l333 000E                     i1l505 06D4                     i1l442 0CC2  
                   i1l443 0D0F                     i1l283 0B0A                     i1l452 0CFA  
                   i1l292 0B7A                     i1l276 0AF6                     i1l517 07B2  
                   i1l293 0B94                     i1l462 0BA8                     i1l527 0F49  
                   i1l472 0BE8                     i1l288 0B4F                     i1l493 0ADA  
                   i1l488 0FFF                     i1l873 0A1F                     _TMR0H 001D  
                   _TMR0L 001C                     _TRISA 0011                     _TRISB 0012  
                   _TRISC 0013                     _TRISD 0014                     _TRISE 0015  
          __CFG_FCMEN$OFF 0000                     _props 0059          updateMotors@lift 003F  
             i1_setMotors 0567          __end_ofi1___bmul 0A20           ?_updateMovement 003A  
                   status 0003                     wtemp0 007E          __end_ofi1_setPWM 0BE9  
          __CFG_CSWEN$OFF 0000           __initialization 0012                _i2c_status 0058  
            __end_of_main 0A8D                    ??_main 0041      __size_of_handleWrite 0053  
                  _ADCON0 0093                    _ADCON1 0094                    _ADCON2 0095  
                  _ADCON3 0096                    _CCPR1H 030D                    _CCPR2H 0311  
                  _CCPR1L 030C                    _CCPR3H 0315                    _CCPR2L 0310  
                  _CCPR4H 0319                    _CCPR3L 0314                    _CCPR5H 031D  
                  _CCPR4L 0318                    _CCPR5L 031C                    _ANSELA 0F38  
                  _ANSELB 0F43                    _ANSELC 0F4E                    _ANSELD 0F59  
                  _ANSELE 0F64        __CFG_RSTOSC$HFINT1 0000                    _T0CON0 001E  
                  _T0CON1 001F                    _T3GCON 0215                    _RA0PPS 0F10  
                  _RA1PPS 0F11                    _RA2PPS 0F12                    _RA3PPS 0F13  
                  _RC0PPS 0F20                    _RA4PPS 0F14                    _RC1PPS 0F21  
                  _RA5PPS 0F15                    _RC2PPS 0F22                    _RD0PPS 0F28  
                  _RC3PPS 0F23                    _RD1PPS 0F29                    _RB6PPS 0F1E  
                  _RC4PPS 0F24                    _RD2PPS 0F2A                    _RB7PPS 0F1F  
                  _RC5PPS 0F25                    _RD3PPS 0F2B                    i1l3101 0B0B  
                  i1l3111 0B1C                    i1l3103 0B0C                    i1l3105 0B10  
                  i1l4001 0F16                    i1l3115 0B20                    i1l3107 0B14  
                  i1l4011 0F23                    i1l4003 0F18                    _RC6PPS 0F26  
                  _RD4PPS 0F2C                    i1l3109 0B18                    i1l4101 0701  
                  i1l4013 0F2B                    i1l4005 0F1A                    i1l3119 0B23  
                  i1l4111 0715                    i1l4103 0702                    i1l4007 0F1B  
                  i1l4031 0F66                    i1l4023 0F4C                    i1l4121 0732  
                  i1l4113 071D                    i1l4105 0704                    i1l4009 0F22  
                  i1l4017 0F39                    i1l4041 0F87                    i1l4033 0F6B  
                  i1l4025 0F52                    i1l4131 073D                    i1l4123 0735  
                  i1l4115 0725                    i1l4107 070A                    i1l4051 0FAC  
                  i1l4043 0F8D                    i1l4035 0F6D                    i1l4027 0F5E  
                  _RC7PPS 0F27                    _RD5PPS 0F2D                    i1l4141 075C  
                  i1l4133 073E                    i1l4125 0738                    i1l4117 072B  
                  i1l4109 070D                    i1l4053 0FBE                    i1l4045 0F97  
                  i1l4037 0F77                    i1l4029 0F62                    i1l5111 06C6  
                  i1l4151 0769                    i1l4143 0760                    i1l4135 0745  
                  i1l4127 0739                    i1l4119 072F                    i1l4063 0FCA  
                  i1l4055 0FC4                    i1l4047 0F9D                    i1l4039 0F7D  
                  i1l4071 0FDC                    i1l5103 0B89                    i1l5113 0BD1  
                  i1l4081 0AC6                    i1l4161 0773                    i1l4153 076A  
                  i1l4145 0763                    i1l4137 0746                    i1l4129 073B  
                  i1l5105 0FE5                    i1l4065 0FD0                    i1l4057 0FC9  
                  i1l4049 0FA6                    i1l4241 0CA6                    i1l5115 0B2D  
                  i1l4083 0AD1                    i1l4171 0786                    i1l4155 076B  
                  i1l4147 0765                    i1l4139 074E                    i1l4091 06E9  
                  i1l5107 0F41                    i1l4067 0FD5                    i1l4251 0CCA  
                  i1l4243 0CB1                    _RD6PPS 0F2E                    i1l4077 0AB2  
                  i1l5109 07A4                    i1l4181 078D                    i1l4173 0788  
                  i1l4165 077C                    i1l4157 076D                    i1l4149 0767  
                  i1l4093 06F6                    i1l4085 06D6                    i1l4261 0CE0  
                  i1l4253 0CCF                    i1l4245 0CB5                    i1l4079 0AC2  
                  i1l4183 0792                    i1l4175 0789                    i1l4167 0780  
                  i1l4159 0772                    i1l4095 06FA                    i1l4191 079C  
                  i1l4087 06DD                    i1l4271 0CF2                    i1l4263 0CE2  
                  i1l4255 0CD4                    i1l4239 0CA1                    i1l4185 0793  
                  i1l4177 078B                    i1l4169 0783                    i1l4097 06FD  
                  i1l4089 06E3                    i1l4273 0CF8                    i1l4265 0CE8  
                  i1l4257 0CDA                    i1l4249 0CC6                    i1l4179 078C  
                  i1l4099 06FF                    i1l4267 0CEA                    i1l4275 0CFA  
                  i1l4259 0CDB                    i1l4371 0B45                    _RD7PPS 0F2F  
                  i1l3901 05F7                    i1l4269 0CF0                    i1l4277 0D07  
                  i1l4381 0B62                    i1l4373 0B49                    i1l3831 0B9C  
                  i1l3911 061F                    i1l3903 05F8                    i1l4383 0B68  
                  i1l4375 0B4E                    i1l4391 0B81                    u300_20 0A11  
                  u300_21 0A10                    i1l3841 0BB9                    i1l3833 0BA1  
                  i1l3921 0643                    i1l3913 0627                    i1l3905 0602  
                  i1l4385 0B77                    i1l4377 0B52                    i1l4369 0B44  
                  i1l4801 0ADD            __CFG_WDTCCS$SC 0000                    i1l3843 0BBD  
                  i1l3835 0BAD                    i1l3851 0BC9                    i1l3931 0672  
                  i1l3923 064D                    i1l3915 062D                    i1l3907 060C  
                  i1l4387 0B7C                    i1l4379 0B56                    i1l4811 0AFA  
                  i1l4803 0AE3                    i1l3861 0A11                    i1l3845 0BC1  
                  i1l3837 0BB1                    i1l3829 0B96                    i1l3941 0698  
                  i1l3933 0678                    i1l3925 0657                    i1l3917 0632  
                  i1l3909 0611                    i1l4821 0B09                    i1l4813 0AFC  
                  i1l4805 0AE8                    i1l3863 0A15                    i1l3847 0BC5  
                  i1l3839 0BB5                    i1l3943 06A2                    i1l3935 067D  
                  i1l3927 065C                    i1l3919 0642                    i1l3871 0568  
                  i1l4815 0B01                    i1l4807 0AEC                    i1l4831 000B  
                  u301_20 0A1E                    u301_21 0A1D                    i1l3865 0A17  
                  i1l3857 0A0C                    i1l3945 06A7                    i1l3937 068D  
                  i1l3929 066A                    i1l3881 059C                    i1l3953 06BE  
                  i1l3873 0572                    i1l3961 0EBA                    i1l4817 0B04  
                  i1l4809 0AF0                    i1l3867 0A1E                    i1l3859 0A0D  
                  i1l3947 06B5                    i1l3939 068E                    i1l3891 05C6  
                  i1l3883 05AC                    i1l3875 057C                    i1l3971 0EDA  
                  i1l3963 0EC0                    i1l4819 0B07                    i1l3893 05D4  
                  i1l3885 05AD                    i1l3877 0586                    i1l3981 0EE7  
                  i1l3973 0EDC                    i1l3965 0EC6                    i1l4829 0006  
                  i1l3895 05DC                    i1l3887 05B7                    i1l3879 0597  
                  i1l3991 0F08                    i1l3983 0EEA                    i1l3975 0EDE  
                  i1l3967 0ED3                    i1l3959 0EB3                    u310_20 05D2  
                  u302_20 056E                    i1l3897 05E2                    u310_21 05CF  
                  i1l3889 05C1                    u302_21 056C                    i1l3993 0F0C  
                  i1l3985 0EF2                    i1l3977 0EDF                    i1l3969 0ED7  
                  i1l3899 05E7                    i1l3995 0F0F                    i1l3987 0EFA  
                  i1l3979 0EE1                    i1l3997 0F12                    i1l3989 0F02  
                  i1l4797 0ADB                    i1l3999 0F15                    i1l4799 0ADB  
                  u303_20 056F                    u311_24 05D4                    u320_20 0655  
                  u312_20 05F1                    u304_20 057C                    u320_21 0652  
                  u312_21 05EF                    u304_21 057B                    _INLVLA 0F3C  
                  _INLVLB 0F47                    _INLVLE 0F68                    u313_20 05F2  
                  u305_20 0586                    _INTCON 000B                    u305_21 0585  
                  u321_24 0657                    u322_20 0668                    u314_20 060A  
                  u306_20 05A6                    u330_20 0EBA                    u322_21 0665  
                  u314_21 0607                    u306_21 05A4                    u330_21 0EB9  
                  u307_20 05A7                    u331_20 0EC0                    _FVRCON 090C  
                  u331_21 0EBF                    u323_24 066A                    u315_24 060C  
                  u324_20 0687                    u316_20 061D                    u308_20 05BF  
                  u332_20 0EC6                    u324_21 0685                    u316_21 061A  
                  u308_21 05BC                    u332_21 0EC5                    u325_20 0688  
                  u333_20 0F52                    u333_21 0F51                    u317_24 061F  
                  u309_24 05C1                    u326_20 06A0                    u318_20 063C  
                  u334_20 0FDB                    u350_20 0CF0                    u326_21 069D  
                  u318_21 063A                    u334_21 0FDA                    u350_21 0CEF  
                  u319_20 063D                    u351_20 0CF8                    u351_21 0CF7  
                  u327_24 06A2                    u335_25 0AB8                    u343_25 0CA9  
                  u328_20 06B3                    u336_20 0AC6                    u344_20 0CB5  
                  u328_21 06B0                    u336_21 0AC5                    u344_21 0CB4  
                  u337_20 06DD                    u345_20 0CC6                    u337_21 06DC  
                  u345_21 0CC5                    u329_24 06B5                    u338_20 06E3  
                  u346_20 0CCA                    u450_20 000B                    u338_21 06E2  
                  u346_21 0CC9                    u450_21 000A                    u339_20 06E9  
                  u347_20 0CDA                    u339_21 06E8                    u347_21 0CD9  
                  u348_20 0CE0                    u348_21 0CDF                    u349_20 0CE8  
                  u445_20 0AE8                    u349_21 0CE7                    u445_21 0AE7  
                  u446_20 0AEC                    u446_21 0AEB                    u447_20 0AF0  
                  u447_21 0AEF                    u448_20 0AFA                    u448_21 0AF9  
                  u449_20 0B01                    u449_21 0B00                    u386_20 0B4E  
                  u386_21 0B4D                    u299_20 0B9C                    u299_21 0B9B  
                  _OSCFRQ 0893                    _SSP1IF 3878                    _i2cISR 0ADB  
          __CFG_PWRTE$OFF 0000                    ___bmul 0A36               i1setPWM@pwm 0070  
          __CFG_STVREN$ON 0000                    _setPWM 0BE9         updateMotors@clamp 003D  
        __end_of_setDrive 07B3          __end_of_setProps 07FB              ?_testButtons 002F  
          setStatus@motor 0028      __end_of_configureI2C 0A36      __end_of_configureCPU 09FB  
    __end_of_configureIOs 0AB0      __end_of_configurePWM 0C9F   __end_of__initialization 001A  
     ___bmul@multiplicand 0030             updateMotors@p 0040            __pcstackCOMMON 0070  
               ?i1___bmul 0070              _CWG1CON0bits 0610                 ?i1_setPWM 0070  
            _CWG3CON0bits 0690          i1___bmul@product 0072                __pbssBANK0 004B  
                 ?_i2cISR 0070               setDrive2@v2 0077                __pmaintext 0A6C  
             setDrive@dir 0079                   ?___bmul 0030        __size_of_setDrive2 0098  
              __pintentry 0004                   _CCP1CON 030E                   _CCP2CON 0312  
                 _CCP3CON 0316                _handleRead 0B0B                   _CCP4CON 031A  
                 _CCP5CON 031E        __size_of_setMotors 0173                   _CLC1CON 0E10  
                 _CLC2CON 0E1A                   _CLC1POL 0E11                   _CLC2POL 0E1B  
                 ?_setPWM 0030        __size_of_setStatus 0071                ??i1___bmul 0071  
                 _CWG1DBF 060F                   _CWG1DBR 060E                   _CWG3DBF 068F  
                 _CWG3DBR 068E                   _CWG1ISM 060D                   _CWG3ISM 068D  
              ??i1_setPWM 0071                   _OSCCON1 088D          i1setMotors@motor 007A  
                 i2cISR@d 002F                   _PWM6DCH 038D                   _PWM6DCL 038C  
                 _PWM7DCH 0391                   _PWM7DCL 0390                   _PWM6CON 038E  
      __size_of_updateSys 0020                   _PWM7CON 0392                   _SSP1ADD 018D  
        ??_updateMovement 00A0                   _SSP1BUF 018C             i1_setPWM$1154 0074  
            ?i1_setMotors 0076        updateMovement@lift 003E               revRoutine@s 0020  
                 _i2c_val 0056                 ?_setDrive 0076           __size_of_i2cISR 0030  
               ?_setProps 0030               setStatus@v2 0023  __size_of_configureTimers 0010  
    __CFG_SCANE$available 0000           __size_of___bmul 0016               setRoutine@i 0021  
             setRoutine@s 0020           __size_of_setPWM 0055                   __ptext1 0A4C  
                 __ptext2 0E21                   __ptext3 001E                   __ptext4 07B3  
                 __ptext5 0D93                   __ptext6 03F4                   __ptext7 0BE9  
                 __ptext8 0A36                   __ptext9 0D10     __size_of_configureI2C 0016  
   __size_of_configureCPU 000A              __size_of_ISR 000C     __size_of_configureIOs 0023  
   __size_of_configurePWM 0061                 _T2CONbits 028E       i1___bmul@multiplier 0073  
    __size_of_testButtons 0083                   clrloop0 09EC         __end_of_setDrive2 0F4A  
    end_of_initialization 001A         __end_of_setMotors 0567        updateMotors@rotate 003E  
       __end_of_setStatus 0D10                _revRoutine 0AB0                _setRoutine 0F4A  
            i1setMotors@v 0077                ??_setDrive 0077                ??_setProps 0032  
       __end_of_updateSys 0A6C              _configureI2C 0A20              _configureCPU 09F1  
            _configureIOs 0A8D              _configurePWM 0C3E               ?_handleRead 0070  
   __CFG_WDTCPS$WDTCPS_31 0000                 _PORTAbits 000C                 _PORTBbits 000D  
               _PORTEbits 0010             ??_handleWrite 002A                _updateTime 0E21  
        __CFG_FEXTOSC$OFF 0000            updateTime@tNow 003E          testButtons@clamp 0031  
           ?_updateMotors 003A            __end_of_i2cISR 0B0B               _CLC1CONbits 0E10  
          __end_of___bmul 0A4C               _CLC2CONbits 0E1A              _i2c_settings 0057  
    updateMovement@rotate 003D            __end_of_setPWM 0C3E         ??_configureTimers 0030  
            setPWM@module 0033         __size_ofi1___bmul 0015       start_initialization 0012  
             updateTime@p 0040               __end_of_ISR 0010         __size_ofi1_setPWM 0054  
     __end_of_handleWrite 0B95       __size_of_handleRead 0037      __size_ofi1_setMotors 016E  
             ?_revRoutine 0070                  ??_i2cISR 002E               ?_setRoutine 0070  
          ??_updateMotors 003B          __CFG_LPBOREN$OFF 0000                  ??___bmul 0031  
                ??_setPWM 0031                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0               ?_updateTime 002F            i1setPWM@module 0073  
            setDrive2@dir 007A                setDrive2@v 0076         __size_of_setDrive 00DE  
       __size_of_setProps 0048          __CFG_PPS1WAY$OFF 0000                 _drivePWM1 0054  
               _drivePWM2 0053                setMotors@v 0037                  _CLC1GLS0 0E16  
                _CLC1GLS1 0E17                  _CLC1GLS2 0E18                  _CLC1GLS3 0E19  
                _CLC2GLS0 0E20                  _CLC2GLS1 0E21                  _CLC2GLS2 0E22  
                _CLC2GLS3 0E23                  _CLC1SEL0 0E12                  _CLC1SEL1 0E13  
                _CLC2SEL0 0E1C                  _CLC2SEL1 0E1D       __size_of_revRoutine 002B  
             _handleWrite 0B42       __size_of_setRoutine 00B6                setStatus@s 0029  
              setStatus@v 0022                  _CWG1CON0 0610                  _CWG1CON1 0611  
                _CWG3CON0 0690                  _CWG3CON1 0691                  _T2CLKCON 0290  
               _setDrive2 0EB2                  _LATCbits 0018                  _LATDbits 0019  
                _LATEbits 001A                 clear_ram0 09EB                  _PIE3bits 0719  
               _setMotors 03F4     i1___bmul@multiplicand 0070                 _setStatus 0C9F  
                _PIR3bits 070F                  _PIR4bits 0710       __size_of_updateTime 0091  
                _SSP1CON1 0190                  _SSP1CON2 0191                  _SSP1CON3 0192  
                _SSP1STAT 018F              ??_handleRead 0070                 _updateSys 0A4C  
                i1___bmul 0A0B             ??_testButtons 0030                  i1_setPWM 0B95  
         testButtons@lift 0033      __end_of_updateMotors 0E21              setMotors@dir 0036  
     updateMovement@clamp 003C                updateSys@p 00A8        __end_of_handleRead 0B42  
              ?_setDrive2 0076                ?_setMotors 0036   __size_of_updateMovement 03D6  
              ?_setStatus 0022           _configureTimers 09FB              setStatus@dir 0027  
              ?_updateSys 004B                 setPWM@pwm 0030                _CWG1CLKCON 060C  
              _CWG3CLKCON 068C               _setPWM$1154 0034                 setDrive@v 0076  
                __ptext10 09FB                  __ptext11 0C3E                  __ptext20 0EB2  
                __ptext12 0A8D                  __ptext21 06D5                  __ptext13 0A20  
                __ptext22 0AB0                  __ptext14 09F1                  __ptext23 0567  
                __ptext24 0B95                  __ptext16 0ADB                  __ptext25 0A0B  
                __ptext17 0B42                  __ptext26 0B0B                  __ptext18 0C9F  
                __ptext19 0F4A              _SSP1CON1bits 0190              _SSP1CON2bits 0191  
            _SSP1CON3bits 0192            i1setMotors@dir 0076       __end_of_testButtons 0D93  
                _driveDir 0055                 setProps@c 0031                 setProps@l 0034  
               setProps@r 0030             __size_of_main 0021              ??_revRoutine 007B  
            ??_setRoutine 007B      __CFG_WDTCWS$WDTCWS_7 0000                  _setDrive 06D5  
                _setProps 07B3                  int$flags 007E              _SSP1STATbits 018F  
      __end_of_revRoutine 0ADB              ??_updateTime 0030        __end_of_setRoutine 1000  
             _PWM6CONbits 038E             ??i1_setMotors 0078               _PWM7CONbits 0392  
                intlevel1 0000              handleWrite@d 002D   __end_of_configureTimers 0A0B  
             ??_setDrive2 0078         __CFG_CLKOUTEN$OFF 0000               ??_setMotors 0038  
             ??_setStatus 0025               _motorPWMArr 004B               _motorDirArr 004F  
      __end_of_updateTime 0EB2     __size_of_updateMotors 008E               ??_updateSys 0041  
              _SSP1DATPPS 0EC6               _testButtons 0D10                _SSP1CLKPPS 0EC5  
            ?_handleWrite 0070              testButtons@p 0034            _updateMovement 001E  
     __end_ofi1_setMotors 06D5              _updateMotors 0D93  
