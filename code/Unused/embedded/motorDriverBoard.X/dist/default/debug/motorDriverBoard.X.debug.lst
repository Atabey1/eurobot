

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Jan 28 18:53:22 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.10
    40                           ; Generated 31/07/2019 GMT
    41                           ; 
    42                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F18875 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001C                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  008C                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0110                     	;# 
   133  0110                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0119                     	;# 
   145  0119                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011A                     	;# 
   149  011A                     	;# 
   150  011B                     	;# 
   151  011B                     	;# 
   152  011B                     	;# 
   153  011B                     	;# 
   154  011B                     	;# 
   155  011C                     	;# 
   156  011C                     	;# 
   157  011C                     	;# 
   158  011D                     	;# 
   159  011D                     	;# 
   160  011D                     	;# 
   161  011E                     	;# 
   162  011E                     	;# 
   163  011E                     	;# 
   164  011F                     	;# 
   165  011F                     	;# 
   166  011F                     	;# 
   167  011F                     	;# 
   168  011F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  018E                     	;# 
   172  018F                     	;# 
   173  0190                     	;# 
   174  0191                     	;# 
   175  0192                     	;# 
   176  0196                     	;# 
   177  0197                     	;# 
   178  0198                     	;# 
   179  0199                     	;# 
   180  019A                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  020C                     	;# 
   184  020C                     	;# 
   185  020D                     	;# 
   186  020E                     	;# 
   187  020F                     	;# 
   188  020F                     	;# 
   189  0210                     	;# 
   190  0210                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0216                     	;# 
   201  0217                     	;# 
   202  0217                     	;# 
   203  0218                     	;# 
   204  0218                     	;# 
   205  0219                     	;# 
   206  021A                     	;# 
   207  021B                     	;# 
   208  021B                     	;# 
   209  021C                     	;# 
   210  021C                     	;# 
   211  021D                     	;# 
   212  021D                     	;# 
   213  021E                     	;# 
   214  021F                     	;# 
   215  028C                     	;# 
   216  028C                     	;# 
   217  028D                     	;# 
   218  028D                     	;# 
   219  028E                     	;# 
   220  028F                     	;# 
   221  0290                     	;# 
   222  0290                     	;# 
   223  0291                     	;# 
   224  0292                     	;# 
   225  0292                     	;# 
   226  0293                     	;# 
   227  0293                     	;# 
   228  0294                     	;# 
   229  0295                     	;# 
   230  0296                     	;# 
   231  0296                     	;# 
   232  0297                     	;# 
   233  0298                     	;# 
   234  0298                     	;# 
   235  0299                     	;# 
   236  0299                     	;# 
   237  029A                     	;# 
   238  029B                     	;# 
   239  029C                     	;# 
   240  029C                     	;# 
   241  029D                     	;# 
   242  030C                     	;# 
   243  030C                     	;# 
   244  030D                     	;# 
   245  030E                     	;# 
   246  030F                     	;# 
   247  0310                     	;# 
   248  0310                     	;# 
   249  0311                     	;# 
   250  0312                     	;# 
   251  0313                     	;# 
   252  0314                     	;# 
   253  0314                     	;# 
   254  0315                     	;# 
   255  0316                     	;# 
   256  0317                     	;# 
   257  0318                     	;# 
   258  0318                     	;# 
   259  0319                     	;# 
   260  031A                     	;# 
   261  031B                     	;# 
   262  031C                     	;# 
   263  031C                     	;# 
   264  031D                     	;# 
   265  031E                     	;# 
   266  031F                     	;# 
   267  038C                     	;# 
   268  038C                     	;# 
   269  038D                     	;# 
   270  038E                     	;# 
   271  0390                     	;# 
   272  0390                     	;# 
   273  0391                     	;# 
   274  0392                     	;# 
   275  040C                     	;# 
   276  040D                     	;# 
   277  040E                     	;# 
   278  040F                     	;# 
   279  0410                     	;# 
   280  0411                     	;# 
   281  0416                     	;# 
   282  0416                     	;# 
   283  0417                     	;# 
   284  0418                     	;# 
   285  0418                     	;# 
   286  0419                     	;# 
   287  041A                     	;# 
   288  041A                     	;# 
   289  041B                     	;# 
   290  041C                     	;# 
   291  041C                     	;# 
   292  041D                     	;# 
   293  041E                     	;# 
   294  041F                     	;# 
   295  048C                     	;# 
   296  048C                     	;# 
   297  048D                     	;# 
   298  048E                     	;# 
   299  048F                     	;# 
   300  048F                     	;# 
   301  0490                     	;# 
   302  0491                     	;# 
   303  0492                     	;# 
   304  0492                     	;# 
   305  0493                     	;# 
   306  0494                     	;# 
   307  0495                     	;# 
   308  0495                     	;# 
   309  0496                     	;# 
   310  0497                     	;# 
   311  0498                     	;# 
   312  0499                     	;# 
   313  049A                     	;# 
   314  049B                     	;# 
   315  049C                     	;# 
   316  049D                     	;# 
   317  050C                     	;# 
   318  050C                     	;# 
   319  050D                     	;# 
   320  050E                     	;# 
   321  050F                     	;# 
   322  050F                     	;# 
   323  0510                     	;# 
   324  0511                     	;# 
   325  0512                     	;# 
   326  0512                     	;# 
   327  0513                     	;# 
   328  0514                     	;# 
   329  0515                     	;# 
   330  0515                     	;# 
   331  0516                     	;# 
   332  0517                     	;# 
   333  0518                     	;# 
   334  0519                     	;# 
   335  051A                     	;# 
   336  051B                     	;# 
   337  051C                     	;# 
   338  051D                     	;# 
   339  058C                     	;# 
   340  058C                     	;# 
   341  058D                     	;# 
   342  058E                     	;# 
   343  058F                     	;# 
   344  058F                     	;# 
   345  0590                     	;# 
   346  0591                     	;# 
   347  0592                     	;# 
   348  0593                     	;# 
   349  060C                     	;# 
   350  060D                     	;# 
   351  060E                     	;# 
   352  060F                     	;# 
   353  0610                     	;# 
   354  0611                     	;# 
   355  0612                     	;# 
   356  0613                     	;# 
   357  0614                     	;# 
   358  0616                     	;# 
   359  0617                     	;# 
   360  0618                     	;# 
   361  0619                     	;# 
   362  061A                     	;# 
   363  061B                     	;# 
   364  061C                     	;# 
   365  061D                     	;# 
   366  061E                     	;# 
   367  068C                     	;# 
   368  068D                     	;# 
   369  068E                     	;# 
   370  068F                     	;# 
   371  0690                     	;# 
   372  0691                     	;# 
   373  0692                     	;# 
   374  0693                     	;# 
   375  0694                     	;# 
   376  070C                     	;# 
   377  070D                     	;# 
   378  070E                     	;# 
   379  070F                     	;# 
   380  0710                     	;# 
   381  0711                     	;# 
   382  0712                     	;# 
   383  0713                     	;# 
   384  0714                     	;# 
   385  0716                     	;# 
   386  0717                     	;# 
   387  0718                     	;# 
   388  0719                     	;# 
   389  071A                     	;# 
   390  071B                     	;# 
   391  071C                     	;# 
   392  071D                     	;# 
   393  071E                     	;# 
   394  0796                     	;# 
   395  0797                     	;# 
   396  0798                     	;# 
   397  0799                     	;# 
   398  079A                     	;# 
   399  079B                     	;# 
   400  080C                     	;# 
   401  080D                     	;# 
   402  080E                     	;# 
   403  080F                     	;# 
   404  0810                     	;# 
   405  0811                     	;# 
   406  0812                     	;# 
   407  0813                     	;# 
   408  0814                     	;# 
   409  081A                     	;# 
   410  081B                     	;# 
   411  081C                     	;# 
   412  081D                     	;# 
   413  081E                     	;# 
   414  081F                     	;# 
   415  088C                     	;# 
   416  088D                     	;# 
   417  088E                     	;# 
   418  088F                     	;# 
   419  0890                     	;# 
   420  0891                     	;# 
   421  0892                     	;# 
   422  0893                     	;# 
   423  0895                     	;# 
   424  0896                     	;# 
   425  0897                     	;# 
   426  0898                     	;# 
   427  0899                     	;# 
   428  089A                     	;# 
   429  089B                     	;# 
   430  090C                     	;# 
   431  090E                     	;# 
   432  090F                     	;# 
   433  091F                     	;# 
   434  091F                     	;# 
   435  098F                     	;# 
   436  098F                     	;# 
   437  0990                     	;# 
   438  0991                     	;# 
   439  0992                     	;# 
   440  0993                     	;# 
   441  0994                     	;# 
   442  0995                     	;# 
   443  0996                     	;# 
   444  0997                     	;# 
   445  0E0F                     	;# 
   446  0E10                     	;# 
   447  0E11                     	;# 
   448  0E12                     	;# 
   449  0E13                     	;# 
   450  0E14                     	;# 
   451  0E15                     	;# 
   452  0E16                     	;# 
   453  0E17                     	;# 
   454  0E18                     	;# 
   455  0E19                     	;# 
   456  0E1A                     	;# 
   457  0E1B                     	;# 
   458  0E1C                     	;# 
   459  0E1D                     	;# 
   460  0E1E                     	;# 
   461  0E1F                     	;# 
   462  0E20                     	;# 
   463  0E21                     	;# 
   464  0E22                     	;# 
   465  0E23                     	;# 
   466  0E24                     	;# 
   467  0E25                     	;# 
   468  0E26                     	;# 
   469  0E27                     	;# 
   470  0E28                     	;# 
   471  0E29                     	;# 
   472  0E2A                     	;# 
   473  0E2B                     	;# 
   474  0E2C                     	;# 
   475  0E2D                     	;# 
   476  0E2E                     	;# 
   477  0E2F                     	;# 
   478  0E30                     	;# 
   479  0E31                     	;# 
   480  0E32                     	;# 
   481  0E33                     	;# 
   482  0E34                     	;# 
   483  0E35                     	;# 
   484  0E36                     	;# 
   485  0E37                     	;# 
   486  0E8F                     	;# 
   487  0E90                     	;# 
   488  0E91                     	;# 
   489  0E92                     	;# 
   490  0E93                     	;# 
   491  0E94                     	;# 
   492  0E95                     	;# 
   493  0E96                     	;# 
   494  0E97                     	;# 
   495  0E9C                     	;# 
   496  0E9D                     	;# 
   497  0E9E                     	;# 
   498  0EA1                     	;# 
   499  0EA2                     	;# 
   500  0EA3                     	;# 
   501  0EA4                     	;# 
   502  0EA5                     	;# 
   503  0EA9                     	;# 
   504  0EAA                     	;# 
   505  0EAB                     	;# 
   506  0EAC                     	;# 
   507  0EB1                     	;# 
   508  0EB2                     	;# 
   509  0EB3                     	;# 
   510  0EB8                     	;# 
   511  0EB9                     	;# 
   512  0EBA                     	;# 
   513  0EBB                     	;# 
   514  0EBC                     	;# 
   515  0EBD                     	;# 
   516  0EBE                     	;# 
   517  0EC3                     	;# 
   518  0EC5                     	;# 
   519  0EC6                     	;# 
   520  0EC7                     	;# 
   521  0EC8                     	;# 
   522  0EC9                     	;# 
   523  0ECA                     	;# 
   524  0ECB                     	;# 
   525  0ECC                     	;# 
   526  0F10                     	;# 
   527  0F11                     	;# 
   528  0F12                     	;# 
   529  0F13                     	;# 
   530  0F14                     	;# 
   531  0F15                     	;# 
   532  0F16                     	;# 
   533  0F17                     	;# 
   534  0F18                     	;# 
   535  0F19                     	;# 
   536  0F1A                     	;# 
   537  0F1B                     	;# 
   538  0F1C                     	;# 
   539  0F1D                     	;# 
   540  0F1E                     	;# 
   541  0F1F                     	;# 
   542  0F20                     	;# 
   543  0F21                     	;# 
   544  0F22                     	;# 
   545  0F23                     	;# 
   546  0F24                     	;# 
   547  0F25                     	;# 
   548  0F26                     	;# 
   549  0F27                     	;# 
   550  0F28                     	;# 
   551  0F29                     	;# 
   552  0F2A                     	;# 
   553  0F2B                     	;# 
   554  0F2C                     	;# 
   555  0F2D                     	;# 
   556  0F2E                     	;# 
   557  0F2F                     	;# 
   558  0F30                     	;# 
   559  0F31                     	;# 
   560  0F32                     	;# 
   561  0F38                     	;# 
   562  0F39                     	;# 
   563  0F3A                     	;# 
   564  0F3B                     	;# 
   565  0F3C                     	;# 
   566  0F3D                     	;# 
   567  0F3E                     	;# 
   568  0F3F                     	;# 
   569  0F40                     	;# 
   570  0F41                     	;# 
   571  0F43                     	;# 
   572  0F44                     	;# 
   573  0F45                     	;# 
   574  0F46                     	;# 
   575  0F47                     	;# 
   576  0F48                     	;# 
   577  0F49                     	;# 
   578  0F4A                     	;# 
   579  0F4B                     	;# 
   580  0F4C                     	;# 
   581  0F4E                     	;# 
   582  0F4F                     	;# 
   583  0F50                     	;# 
   584  0F51                     	;# 
   585  0F52                     	;# 
   586  0F53                     	;# 
   587  0F54                     	;# 
   588  0F55                     	;# 
   589  0F56                     	;# 
   590  0F57                     	;# 
   591  0F59                     	;# 
   592  0F5A                     	;# 
   593  0F5B                     	;# 
   594  0F5C                     	;# 
   595  0F5D                     	;# 
   596  0F61                     	;# 
   597  0F62                     	;# 
   598  0F64                     	;# 
   599  0F65                     	;# 
   600  0F66                     	;# 
   601  0F67                     	;# 
   602  0F68                     	;# 
   603  0F69                     	;# 
   604  0F6A                     	;# 
   605  0F6B                     	;# 
   606  0F6C                     	;# 
   607  0F6D                     	;# 
   608  0FE4                     	;# 
   609  0FE5                     	;# 
   610  0FE6                     	;# 
   611  0FE7                     	;# 
   612  0FE8                     	;# 
   613  0FE9                     	;# 
   614  0FEA                     	;# 
   615  0FEB                     	;# 
   616  0FED                     	;# 
   617  0FEE                     	;# 
   618  0FEF                     	;# 
   619  0000                     	;# 
   620  0001                     	;# 
   621  0002                     	;# 
   622  0003                     	;# 
   623  0004                     	;# 
   624  0005                     	;# 
   625  0006                     	;# 
   626  0007                     	;# 
   627  0008                     	;# 
   628  0009                     	;# 
   629  000A                     	;# 
   630  000B                     	;# 
   631  000C                     	;# 
   632  000D                     	;# 
   633  000E                     	;# 
   634  000F                     	;# 
   635  0010                     	;# 
   636  0011                     	;# 
   637  0012                     	;# 
   638  0013                     	;# 
   639  0014                     	;# 
   640  0015                     	;# 
   641  0016                     	;# 
   642  0017                     	;# 
   643  0018                     	;# 
   644  0019                     	;# 
   645  001A                     	;# 
   646  001C                     	;# 
   647  001C                     	;# 
   648  001D                     	;# 
   649  001D                     	;# 
   650  001E                     	;# 
   651  001F                     	;# 
   652  008C                     	;# 
   653  008C                     	;# 
   654  008D                     	;# 
   655  008E                     	;# 
   656  008E                     	;# 
   657  008F                     	;# 
   658  0090                     	;# 
   659  0090                     	;# 
   660  0091                     	;# 
   661  0093                     	;# 
   662  0094                     	;# 
   663  0095                     	;# 
   664  0096                     	;# 
   665  0097                     	;# 
   666  0098                     	;# 
   667  0099                     	;# 
   668  009A                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  010C                     	;# 
   674  010D                     	;# 
   675  010E                     	;# 
   676  010E                     	;# 
   677  010F                     	;# 
   678  0110                     	;# 
   679  0110                     	;# 
   680  0111                     	;# 
   681  0112                     	;# 
   682  0112                     	;# 
   683  0113                     	;# 
   684  0114                     	;# 
   685  0114                     	;# 
   686  0115                     	;# 
   687  0116                     	;# 
   688  0116                     	;# 
   689  0117                     	;# 
   690  0119                     	;# 
   691  0119                     	;# 
   692  0119                     	;# 
   693  011A                     	;# 
   694  011A                     	;# 
   695  011A                     	;# 
   696  011B                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011C                     	;# 
   702  011C                     	;# 
   703  011C                     	;# 
   704  011D                     	;# 
   705  011D                     	;# 
   706  011D                     	;# 
   707  011E                     	;# 
   708  011E                     	;# 
   709  011E                     	;# 
   710  011F                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  018C                     	;# 
   716  018D                     	;# 
   717  018E                     	;# 
   718  018F                     	;# 
   719  0190                     	;# 
   720  0191                     	;# 
   721  0192                     	;# 
   722  0196                     	;# 
   723  0197                     	;# 
   724  0198                     	;# 
   725  0199                     	;# 
   726  019A                     	;# 
   727  019B                     	;# 
   728  019C                     	;# 
   729  020C                     	;# 
   730  020C                     	;# 
   731  020D                     	;# 
   732  020E                     	;# 
   733  020F                     	;# 
   734  020F                     	;# 
   735  0210                     	;# 
   736  0210                     	;# 
   737  0211                     	;# 
   738  0211                     	;# 
   739  0212                     	;# 
   740  0212                     	;# 
   741  0213                     	;# 
   742  0214                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0216                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0217                     	;# 
   749  0218                     	;# 
   750  0218                     	;# 
   751  0219                     	;# 
   752  021A                     	;# 
   753  021B                     	;# 
   754  021B                     	;# 
   755  021C                     	;# 
   756  021C                     	;# 
   757  021D                     	;# 
   758  021D                     	;# 
   759  021E                     	;# 
   760  021F                     	;# 
   761  028C                     	;# 
   762  028C                     	;# 
   763  028D                     	;# 
   764  028D                     	;# 
   765  028E                     	;# 
   766  028F                     	;# 
   767  0290                     	;# 
   768  0290                     	;# 
   769  0291                     	;# 
   770  0292                     	;# 
   771  0292                     	;# 
   772  0293                     	;# 
   773  0293                     	;# 
   774  0294                     	;# 
   775  0295                     	;# 
   776  0296                     	;# 
   777  0296                     	;# 
   778  0297                     	;# 
   779  0298                     	;# 
   780  0298                     	;# 
   781  0299                     	;# 
   782  0299                     	;# 
   783  029A                     	;# 
   784  029B                     	;# 
   785  029C                     	;# 
   786  029C                     	;# 
   787  029D                     	;# 
   788  030C                     	;# 
   789  030C                     	;# 
   790  030D                     	;# 
   791  030E                     	;# 
   792  030F                     	;# 
   793  0310                     	;# 
   794  0310                     	;# 
   795  0311                     	;# 
   796  0312                     	;# 
   797  0313                     	;# 
   798  0314                     	;# 
   799  0314                     	;# 
   800  0315                     	;# 
   801  0316                     	;# 
   802  0317                     	;# 
   803  0318                     	;# 
   804  0318                     	;# 
   805  0319                     	;# 
   806  031A                     	;# 
   807  031B                     	;# 
   808  031C                     	;# 
   809  031C                     	;# 
   810  031D                     	;# 
   811  031E                     	;# 
   812  031F                     	;# 
   813  038C                     	;# 
   814  038C                     	;# 
   815  038D                     	;# 
   816  038E                     	;# 
   817  0390                     	;# 
   818  0390                     	;# 
   819  0391                     	;# 
   820  0392                     	;# 
   821  040C                     	;# 
   822  040D                     	;# 
   823  040E                     	;# 
   824  040F                     	;# 
   825  0410                     	;# 
   826  0411                     	;# 
   827  0416                     	;# 
   828  0416                     	;# 
   829  0417                     	;# 
   830  0418                     	;# 
   831  0418                     	;# 
   832  0419                     	;# 
   833  041A                     	;# 
   834  041A                     	;# 
   835  041B                     	;# 
   836  041C                     	;# 
   837  041C                     	;# 
   838  041D                     	;# 
   839  041E                     	;# 
   840  041F                     	;# 
   841  048C                     	;# 
   842  048C                     	;# 
   843  048D                     	;# 
   844  048E                     	;# 
   845  048F                     	;# 
   846  048F                     	;# 
   847  0490                     	;# 
   848  0491                     	;# 
   849  0492                     	;# 
   850  0492                     	;# 
   851  0493                     	;# 
   852  0494                     	;# 
   853  0495                     	;# 
   854  0495                     	;# 
   855  0496                     	;# 
   856  0497                     	;# 
   857  0498                     	;# 
   858  0499                     	;# 
   859  049A                     	;# 
   860  049B                     	;# 
   861  049C                     	;# 
   862  049D                     	;# 
   863  050C                     	;# 
   864  050C                     	;# 
   865  050D                     	;# 
   866  050E                     	;# 
   867  050F                     	;# 
   868  050F                     	;# 
   869  0510                     	;# 
   870  0511                     	;# 
   871  0512                     	;# 
   872  0512                     	;# 
   873  0513                     	;# 
   874  0514                     	;# 
   875  0515                     	;# 
   876  0515                     	;# 
   877  0516                     	;# 
   878  0517                     	;# 
   879  0518                     	;# 
   880  0519                     	;# 
   881  051A                     	;# 
   882  051B                     	;# 
   883  051C                     	;# 
   884  051D                     	;# 
   885  058C                     	;# 
   886  058C                     	;# 
   887  058D                     	;# 
   888  058E                     	;# 
   889  058F                     	;# 
   890  058F                     	;# 
   891  0590                     	;# 
   892  0591                     	;# 
   893  0592                     	;# 
   894  0593                     	;# 
   895  060C                     	;# 
   896  060D                     	;# 
   897  060E                     	;# 
   898  060F                     	;# 
   899  0610                     	;# 
   900  0611                     	;# 
   901  0612                     	;# 
   902  0613                     	;# 
   903  0614                     	;# 
   904  0616                     	;# 
   905  0617                     	;# 
   906  0618                     	;# 
   907  0619                     	;# 
   908  061A                     	;# 
   909  061B                     	;# 
   910  061C                     	;# 
   911  061D                     	;# 
   912  061E                     	;# 
   913  068C                     	;# 
   914  068D                     	;# 
   915  068E                     	;# 
   916  068F                     	;# 
   917  0690                     	;# 
   918  0691                     	;# 
   919  0692                     	;# 
   920  0693                     	;# 
   921  0694                     	;# 
   922  070C                     	;# 
   923  070D                     	;# 
   924  070E                     	;# 
   925  070F                     	;# 
   926  0710                     	;# 
   927  0711                     	;# 
   928  0712                     	;# 
   929  0713                     	;# 
   930  0714                     	;# 
   931  0716                     	;# 
   932  0717                     	;# 
   933  0718                     	;# 
   934  0719                     	;# 
   935  071A                     	;# 
   936  071B                     	;# 
   937  071C                     	;# 
   938  071D                     	;# 
   939  071E                     	;# 
   940  0796                     	;# 
   941  0797                     	;# 
   942  0798                     	;# 
   943  0799                     	;# 
   944  079A                     	;# 
   945  079B                     	;# 
   946  080C                     	;# 
   947  080D                     	;# 
   948  080E                     	;# 
   949  080F                     	;# 
   950  0810                     	;# 
   951  0811                     	;# 
   952  0812                     	;# 
   953  0813                     	;# 
   954  0814                     	;# 
   955  081A                     	;# 
   956  081B                     	;# 
   957  081C                     	;# 
   958  081D                     	;# 
   959  081E                     	;# 
   960  081F                     	;# 
   961  088C                     	;# 
   962  088D                     	;# 
   963  088E                     	;# 
   964  088F                     	;# 
   965  0890                     	;# 
   966  0891                     	;# 
   967  0892                     	;# 
   968  0893                     	;# 
   969  0895                     	;# 
   970  0896                     	;# 
   971  0897                     	;# 
   972  0898                     	;# 
   973  0899                     	;# 
   974  089A                     	;# 
   975  089B                     	;# 
   976  090C                     	;# 
   977  090E                     	;# 
   978  090F                     	;# 
   979  091F                     	;# 
   980  091F                     	;# 
   981  098F                     	;# 
   982  098F                     	;# 
   983  0990                     	;# 
   984  0991                     	;# 
   985  0992                     	;# 
   986  0993                     	;# 
   987  0994                     	;# 
   988  0995                     	;# 
   989  0996                     	;# 
   990  0997                     	;# 
   991  0E0F                     	;# 
   992  0E10                     	;# 
   993  0E11                     	;# 
   994  0E12                     	;# 
   995  0E13                     	;# 
   996  0E14                     	;# 
   997  0E15                     	;# 
   998  0E16                     	;# 
   999  0E17                     	;# 
  1000  0E18                     	;# 
  1001  0E19                     	;# 
  1002  0E1A                     	;# 
  1003  0E1B                     	;# 
  1004  0E1C                     	;# 
  1005  0E1D                     	;# 
  1006  0E1E                     	;# 
  1007  0E1F                     	;# 
  1008  0E20                     	;# 
  1009  0E21                     	;# 
  1010  0E22                     	;# 
  1011  0E23                     	;# 
  1012  0E24                     	;# 
  1013  0E25                     	;# 
  1014  0E26                     	;# 
  1015  0E27                     	;# 
  1016  0E28                     	;# 
  1017  0E29                     	;# 
  1018  0E2A                     	;# 
  1019  0E2B                     	;# 
  1020  0E2C                     	;# 
  1021  0E2D                     	;# 
  1022  0E2E                     	;# 
  1023  0E2F                     	;# 
  1024  0E30                     	;# 
  1025  0E31                     	;# 
  1026  0E32                     	;# 
  1027  0E33                     	;# 
  1028  0E34                     	;# 
  1029  0E35                     	;# 
  1030  0E36                     	;# 
  1031  0E37                     	;# 
  1032  0E8F                     	;# 
  1033  0E90                     	;# 
  1034  0E91                     	;# 
  1035  0E92                     	;# 
  1036  0E93                     	;# 
  1037  0E94                     	;# 
  1038  0E95                     	;# 
  1039  0E96                     	;# 
  1040  0E97                     	;# 
  1041  0E9C                     	;# 
  1042  0E9D                     	;# 
  1043  0E9E                     	;# 
  1044  0EA1                     	;# 
  1045  0EA2                     	;# 
  1046  0EA3                     	;# 
  1047  0EA4                     	;# 
  1048  0EA5                     	;# 
  1049  0EA9                     	;# 
  1050  0EAA                     	;# 
  1051  0EAB                     	;# 
  1052  0EAC                     	;# 
  1053  0EB1                     	;# 
  1054  0EB2                     	;# 
  1055  0EB3                     	;# 
  1056  0EB8                     	;# 
  1057  0EB9                     	;# 
  1058  0EBA                     	;# 
  1059  0EBB                     	;# 
  1060  0EBC                     	;# 
  1061  0EBD                     	;# 
  1062  0EBE                     	;# 
  1063  0EC3                     	;# 
  1064  0EC5                     	;# 
  1065  0EC6                     	;# 
  1066  0EC7                     	;# 
  1067  0EC8                     	;# 
  1068  0EC9                     	;# 
  1069  0ECA                     	;# 
  1070  0ECB                     	;# 
  1071  0ECC                     	;# 
  1072  0F10                     	;# 
  1073  0F11                     	;# 
  1074  0F12                     	;# 
  1075  0F13                     	;# 
  1076  0F14                     	;# 
  1077  0F15                     	;# 
  1078  0F16                     	;# 
  1079  0F17                     	;# 
  1080  0F18                     	;# 
  1081  0F19                     	;# 
  1082  0F1A                     	;# 
  1083  0F1B                     	;# 
  1084  0F1C                     	;# 
  1085  0F1D                     	;# 
  1086  0F1E                     	;# 
  1087  0F1F                     	;# 
  1088  0F20                     	;# 
  1089  0F21                     	;# 
  1090  0F22                     	;# 
  1091  0F23                     	;# 
  1092  0F24                     	;# 
  1093  0F25                     	;# 
  1094  0F26                     	;# 
  1095  0F27                     	;# 
  1096  0F28                     	;# 
  1097  0F29                     	;# 
  1098  0F2A                     	;# 
  1099  0F2B                     	;# 
  1100  0F2C                     	;# 
  1101  0F2D                     	;# 
  1102  0F2E                     	;# 
  1103  0F2F                     	;# 
  1104  0F30                     	;# 
  1105  0F31                     	;# 
  1106  0F32                     	;# 
  1107  0F38                     	;# 
  1108  0F39                     	;# 
  1109  0F3A                     	;# 
  1110  0F3B                     	;# 
  1111  0F3C                     	;# 
  1112  0F3D                     	;# 
  1113  0F3E                     	;# 
  1114  0F3F                     	;# 
  1115  0F40                     	;# 
  1116  0F41                     	;# 
  1117  0F43                     	;# 
  1118  0F44                     	;# 
  1119  0F45                     	;# 
  1120  0F46                     	;# 
  1121  0F47                     	;# 
  1122  0F48                     	;# 
  1123  0F49                     	;# 
  1124  0F4A                     	;# 
  1125  0F4B                     	;# 
  1126  0F4C                     	;# 
  1127  0F4E                     	;# 
  1128  0F4F                     	;# 
  1129  0F50                     	;# 
  1130  0F51                     	;# 
  1131  0F52                     	;# 
  1132  0F53                     	;# 
  1133  0F54                     	;# 
  1134  0F55                     	;# 
  1135  0F56                     	;# 
  1136  0F57                     	;# 
  1137  0F59                     	;# 
  1138  0F5A                     	;# 
  1139  0F5B                     	;# 
  1140  0F5C                     	;# 
  1141  0F5D                     	;# 
  1142  0F61                     	;# 
  1143  0F62                     	;# 
  1144  0F64                     	;# 
  1145  0F65                     	;# 
  1146  0F66                     	;# 
  1147  0F67                     	;# 
  1148  0F68                     	;# 
  1149  0F69                     	;# 
  1150  0F6A                     	;# 
  1151  0F6B                     	;# 
  1152  0F6C                     	;# 
  1153  0F6D                     	;# 
  1154  0FE4                     	;# 
  1155  0FE5                     	;# 
  1156  0FE6                     	;# 
  1157  0FE7                     	;# 
  1158  0FE8                     	;# 
  1159  0FE9                     	;# 
  1160  0FEA                     	;# 
  1161  0FEB                     	;# 
  1162  0FED                     	;# 
  1163  0FEE                     	;# 
  1164  0FEF                     	;# 
  1165  0000                     	;# 
  1166  0001                     	;# 
  1167  0002                     	;# 
  1168  0003                     	;# 
  1169  0004                     	;# 
  1170  0005                     	;# 
  1171  0006                     	;# 
  1172  0007                     	;# 
  1173  0008                     	;# 
  1174  0009                     	;# 
  1175  000A                     	;# 
  1176  000B                     	;# 
  1177  000C                     	;# 
  1178  000D                     	;# 
  1179  000E                     	;# 
  1180  000F                     	;# 
  1181  0010                     	;# 
  1182  0011                     	;# 
  1183  0012                     	;# 
  1184  0013                     	;# 
  1185  0014                     	;# 
  1186  0015                     	;# 
  1187  0016                     	;# 
  1188  0017                     	;# 
  1189  0018                     	;# 
  1190  0019                     	;# 
  1191  001A                     	;# 
  1192  001C                     	;# 
  1193  001C                     	;# 
  1194  001D                     	;# 
  1195  001D                     	;# 
  1196  001E                     	;# 
  1197  001F                     	;# 
  1198  008C                     	;# 
  1199  008C                     	;# 
  1200  008D                     	;# 
  1201  008E                     	;# 
  1202  008E                     	;# 
  1203  008F                     	;# 
  1204  0090                     	;# 
  1205  0090                     	;# 
  1206  0091                     	;# 
  1207  0093                     	;# 
  1208  0094                     	;# 
  1209  0095                     	;# 
  1210  0096                     	;# 
  1211  0097                     	;# 
  1212  0098                     	;# 
  1213  0099                     	;# 
  1214  009A                     	;# 
  1215  009B                     	;# 
  1216  009C                     	;# 
  1217  009D                     	;# 
  1218  009E                     	;# 
  1219  010C                     	;# 
  1220  010D                     	;# 
  1221  010E                     	;# 
  1222  010E                     	;# 
  1223  010F                     	;# 
  1224  0110                     	;# 
  1225  0110                     	;# 
  1226  0111                     	;# 
  1227  0112                     	;# 
  1228  0112                     	;# 
  1229  0113                     	;# 
  1230  0114                     	;# 
  1231  0114                     	;# 
  1232  0115                     	;# 
  1233  0116                     	;# 
  1234  0116                     	;# 
  1235  0117                     	;# 
  1236  0119                     	;# 
  1237  0119                     	;# 
  1238  0119                     	;# 
  1239  011A                     	;# 
  1240  011A                     	;# 
  1241  011A                     	;# 
  1242  011B                     	;# 
  1243  011B                     	;# 
  1244  011B                     	;# 
  1245  011B                     	;# 
  1246  011B                     	;# 
  1247  011C                     	;# 
  1248  011C                     	;# 
  1249  011C                     	;# 
  1250  011D                     	;# 
  1251  011D                     	;# 
  1252  011D                     	;# 
  1253  011E                     	;# 
  1254  011E                     	;# 
  1255  011E                     	;# 
  1256  011F                     	;# 
  1257  011F                     	;# 
  1258  011F                     	;# 
  1259  011F                     	;# 
  1260  011F                     	;# 
  1261  018C                     	;# 
  1262  018D                     	;# 
  1263  018E                     	;# 
  1264  018F                     	;# 
  1265  0190                     	;# 
  1266  0191                     	;# 
  1267  0192                     	;# 
  1268  0196                     	;# 
  1269  0197                     	;# 
  1270  0198                     	;# 
  1271  0199                     	;# 
  1272  019A                     	;# 
  1273  019B                     	;# 
  1274  019C                     	;# 
  1275  020C                     	;# 
  1276  020C                     	;# 
  1277  020D                     	;# 
  1278  020E                     	;# 
  1279  020F                     	;# 
  1280  020F                     	;# 
  1281  0210                     	;# 
  1282  0210                     	;# 
  1283  0211                     	;# 
  1284  0211                     	;# 
  1285  0212                     	;# 
  1286  0212                     	;# 
  1287  0213                     	;# 
  1288  0214                     	;# 
  1289  0215                     	;# 
  1290  0215                     	;# 
  1291  0216                     	;# 
  1292  0216                     	;# 
  1293  0217                     	;# 
  1294  0217                     	;# 
  1295  0218                     	;# 
  1296  0218                     	;# 
  1297  0219                     	;# 
  1298  021A                     	;# 
  1299  021B                     	;# 
  1300  021B                     	;# 
  1301  021C                     	;# 
  1302  021C                     	;# 
  1303  021D                     	;# 
  1304  021D                     	;# 
  1305  021E                     	;# 
  1306  021F                     	;# 
  1307  028C                     	;# 
  1308  028C                     	;# 
  1309  028D                     	;# 
  1310  028D                     	;# 
  1311  028E                     	;# 
  1312  028F                     	;# 
  1313  0290                     	;# 
  1314  0290                     	;# 
  1315  0291                     	;# 
  1316  0292                     	;# 
  1317  0292                     	;# 
  1318  0293                     	;# 
  1319  0293                     	;# 
  1320  0294                     	;# 
  1321  0295                     	;# 
  1322  0296                     	;# 
  1323  0296                     	;# 
  1324  0297                     	;# 
  1325  0298                     	;# 
  1326  0298                     	;# 
  1327  0299                     	;# 
  1328  0299                     	;# 
  1329  029A                     	;# 
  1330  029B                     	;# 
  1331  029C                     	;# 
  1332  029C                     	;# 
  1333  029D                     	;# 
  1334  030C                     	;# 
  1335  030C                     	;# 
  1336  030D                     	;# 
  1337  030E                     	;# 
  1338  030F                     	;# 
  1339  0310                     	;# 
  1340  0310                     	;# 
  1341  0311                     	;# 
  1342  0312                     	;# 
  1343  0313                     	;# 
  1344  0314                     	;# 
  1345  0314                     	;# 
  1346  0315                     	;# 
  1347  0316                     	;# 
  1348  0317                     	;# 
  1349  0318                     	;# 
  1350  0318                     	;# 
  1351  0319                     	;# 
  1352  031A                     	;# 
  1353  031B                     	;# 
  1354  031C                     	;# 
  1355  031C                     	;# 
  1356  031D                     	;# 
  1357  031E                     	;# 
  1358  031F                     	;# 
  1359  038C                     	;# 
  1360  038C                     	;# 
  1361  038D                     	;# 
  1362  038E                     	;# 
  1363  0390                     	;# 
  1364  0390                     	;# 
  1365  0391                     	;# 
  1366  0392                     	;# 
  1367  040C                     	;# 
  1368  040D                     	;# 
  1369  040E                     	;# 
  1370  040F                     	;# 
  1371  0410                     	;# 
  1372  0411                     	;# 
  1373  0416                     	;# 
  1374  0416                     	;# 
  1375  0417                     	;# 
  1376  0418                     	;# 
  1377  0418                     	;# 
  1378  0419                     	;# 
  1379  041A                     	;# 
  1380  041A                     	;# 
  1381  041B                     	;# 
  1382  041C                     	;# 
  1383  041C                     	;# 
  1384  041D                     	;# 
  1385  041E                     	;# 
  1386  041F                     	;# 
  1387  048C                     	;# 
  1388  048C                     	;# 
  1389  048D                     	;# 
  1390  048E                     	;# 
  1391  048F                     	;# 
  1392  048F                     	;# 
  1393  0490                     	;# 
  1394  0491                     	;# 
  1395  0492                     	;# 
  1396  0492                     	;# 
  1397  0493                     	;# 
  1398  0494                     	;# 
  1399  0495                     	;# 
  1400  0495                     	;# 
  1401  0496                     	;# 
  1402  0497                     	;# 
  1403  0498                     	;# 
  1404  0499                     	;# 
  1405  049A                     	;# 
  1406  049B                     	;# 
  1407  049C                     	;# 
  1408  049D                     	;# 
  1409  050C                     	;# 
  1410  050C                     	;# 
  1411  050D                     	;# 
  1412  050E                     	;# 
  1413  050F                     	;# 
  1414  050F                     	;# 
  1415  0510                     	;# 
  1416  0511                     	;# 
  1417  0512                     	;# 
  1418  0512                     	;# 
  1419  0513                     	;# 
  1420  0514                     	;# 
  1421  0515                     	;# 
  1422  0515                     	;# 
  1423  0516                     	;# 
  1424  0517                     	;# 
  1425  0518                     	;# 
  1426  0519                     	;# 
  1427  051A                     	;# 
  1428  051B                     	;# 
  1429  051C                     	;# 
  1430  051D                     	;# 
  1431  058C                     	;# 
  1432  058C                     	;# 
  1433  058D                     	;# 
  1434  058E                     	;# 
  1435  058F                     	;# 
  1436  058F                     	;# 
  1437  0590                     	;# 
  1438  0591                     	;# 
  1439  0592                     	;# 
  1440  0593                     	;# 
  1441  060C                     	;# 
  1442  060D                     	;# 
  1443  060E                     	;# 
  1444  060F                     	;# 
  1445  0610                     	;# 
  1446  0611                     	;# 
  1447  0612                     	;# 
  1448  0613                     	;# 
  1449  0614                     	;# 
  1450  0616                     	;# 
  1451  0617                     	;# 
  1452  0618                     	;# 
  1453  0619                     	;# 
  1454  061A                     	;# 
  1455  061B                     	;# 
  1456  061C                     	;# 
  1457  061D                     	;# 
  1458  061E                     	;# 
  1459  068C                     	;# 
  1460  068D                     	;# 
  1461  068E                     	;# 
  1462  068F                     	;# 
  1463  0690                     	;# 
  1464  0691                     	;# 
  1465  0692                     	;# 
  1466  0693                     	;# 
  1467  0694                     	;# 
  1468  070C                     	;# 
  1469  070D                     	;# 
  1470  070E                     	;# 
  1471  070F                     	;# 
  1472  0710                     	;# 
  1473  0711                     	;# 
  1474  0712                     	;# 
  1475  0713                     	;# 
  1476  0714                     	;# 
  1477  0716                     	;# 
  1478  0717                     	;# 
  1479  0718                     	;# 
  1480  0719                     	;# 
  1481  071A                     	;# 
  1482  071B                     	;# 
  1483  071C                     	;# 
  1484  071D                     	;# 
  1485  071E                     	;# 
  1486  0796                     	;# 
  1487  0797                     	;# 
  1488  0798                     	;# 
  1489  0799                     	;# 
  1490  079A                     	;# 
  1491  079B                     	;# 
  1492  080C                     	;# 
  1493  080D                     	;# 
  1494  080E                     	;# 
  1495  080F                     	;# 
  1496  0810                     	;# 
  1497  0811                     	;# 
  1498  0812                     	;# 
  1499  0813                     	;# 
  1500  0814                     	;# 
  1501  081A                     	;# 
  1502  081B                     	;# 
  1503  081C                     	;# 
  1504  081D                     	;# 
  1505  081E                     	;# 
  1506  081F                     	;# 
  1507  088C                     	;# 
  1508  088D                     	;# 
  1509  088E                     	;# 
  1510  088F                     	;# 
  1511  0890                     	;# 
  1512  0891                     	;# 
  1513  0892                     	;# 
  1514  0893                     	;# 
  1515  0895                     	;# 
  1516  0896                     	;# 
  1517  0897                     	;# 
  1518  0898                     	;# 
  1519  0899                     	;# 
  1520  089A                     	;# 
  1521  089B                     	;# 
  1522  090C                     	;# 
  1523  090E                     	;# 
  1524  090F                     	;# 
  1525  091F                     	;# 
  1526  091F                     	;# 
  1527  098F                     	;# 
  1528  098F                     	;# 
  1529  0990                     	;# 
  1530  0991                     	;# 
  1531  0992                     	;# 
  1532  0993                     	;# 
  1533  0994                     	;# 
  1534  0995                     	;# 
  1535  0996                     	;# 
  1536  0997                     	;# 
  1537  0E0F                     	;# 
  1538  0E10                     	;# 
  1539  0E11                     	;# 
  1540  0E12                     	;# 
  1541  0E13                     	;# 
  1542  0E14                     	;# 
  1543  0E15                     	;# 
  1544  0E16                     	;# 
  1545  0E17                     	;# 
  1546  0E18                     	;# 
  1547  0E19                     	;# 
  1548  0E1A                     	;# 
  1549  0E1B                     	;# 
  1550  0E1C                     	;# 
  1551  0E1D                     	;# 
  1552  0E1E                     	;# 
  1553  0E1F                     	;# 
  1554  0E20                     	;# 
  1555  0E21                     	;# 
  1556  0E22                     	;# 
  1557  0E23                     	;# 
  1558  0E24                     	;# 
  1559  0E25                     	;# 
  1560  0E26                     	;# 
  1561  0E27                     	;# 
  1562  0E28                     	;# 
  1563  0E29                     	;# 
  1564  0E2A                     	;# 
  1565  0E2B                     	;# 
  1566  0E2C                     	;# 
  1567  0E2D                     	;# 
  1568  0E2E                     	;# 
  1569  0E2F                     	;# 
  1570  0E30                     	;# 
  1571  0E31                     	;# 
  1572  0E32                     	;# 
  1573  0E33                     	;# 
  1574  0E34                     	;# 
  1575  0E35                     	;# 
  1576  0E36                     	;# 
  1577  0E37                     	;# 
  1578  0E8F                     	;# 
  1579  0E90                     	;# 
  1580  0E91                     	;# 
  1581  0E92                     	;# 
  1582  0E93                     	;# 
  1583  0E94                     	;# 
  1584  0E95                     	;# 
  1585  0E96                     	;# 
  1586  0E97                     	;# 
  1587  0E9C                     	;# 
  1588  0E9D                     	;# 
  1589  0E9E                     	;# 
  1590  0EA1                     	;# 
  1591  0EA2                     	;# 
  1592  0EA3                     	;# 
  1593  0EA4                     	;# 
  1594  0EA5                     	;# 
  1595  0EA9                     	;# 
  1596  0EAA                     	;# 
  1597  0EAB                     	;# 
  1598  0EAC                     	;# 
  1599  0EB1                     	;# 
  1600  0EB2                     	;# 
  1601  0EB3                     	;# 
  1602  0EB8                     	;# 
  1603  0EB9                     	;# 
  1604  0EBA                     	;# 
  1605  0EBB                     	;# 
  1606  0EBC                     	;# 
  1607  0EBD                     	;# 
  1608  0EBE                     	;# 
  1609  0EC3                     	;# 
  1610  0EC5                     	;# 
  1611  0EC6                     	;# 
  1612  0EC7                     	;# 
  1613  0EC8                     	;# 
  1614  0EC9                     	;# 
  1615  0ECA                     	;# 
  1616  0ECB                     	;# 
  1617  0ECC                     	;# 
  1618  0F10                     	;# 
  1619  0F11                     	;# 
  1620  0F12                     	;# 
  1621  0F13                     	;# 
  1622  0F14                     	;# 
  1623  0F15                     	;# 
  1624  0F16                     	;# 
  1625  0F17                     	;# 
  1626  0F18                     	;# 
  1627  0F19                     	;# 
  1628  0F1A                     	;# 
  1629  0F1B                     	;# 
  1630  0F1C                     	;# 
  1631  0F1D                     	;# 
  1632  0F1E                     	;# 
  1633  0F1F                     	;# 
  1634  0F20                     	;# 
  1635  0F21                     	;# 
  1636  0F22                     	;# 
  1637  0F23                     	;# 
  1638  0F24                     	;# 
  1639  0F25                     	;# 
  1640  0F26                     	;# 
  1641  0F27                     	;# 
  1642  0F28                     	;# 
  1643  0F29                     	;# 
  1644  0F2A                     	;# 
  1645  0F2B                     	;# 
  1646  0F2C                     	;# 
  1647  0F2D                     	;# 
  1648  0F2E                     	;# 
  1649  0F2F                     	;# 
  1650  0F30                     	;# 
  1651  0F31                     	;# 
  1652  0F32                     	;# 
  1653  0F38                     	;# 
  1654  0F39                     	;# 
  1655  0F3A                     	;# 
  1656  0F3B                     	;# 
  1657  0F3C                     	;# 
  1658  0F3D                     	;# 
  1659  0F3E                     	;# 
  1660  0F3F                     	;# 
  1661  0F40                     	;# 
  1662  0F41                     	;# 
  1663  0F43                     	;# 
  1664  0F44                     	;# 
  1665  0F45                     	;# 
  1666  0F46                     	;# 
  1667  0F47                     	;# 
  1668  0F48                     	;# 
  1669  0F49                     	;# 
  1670  0F4A                     	;# 
  1671  0F4B                     	;# 
  1672  0F4C                     	;# 
  1673  0F4E                     	;# 
  1674  0F4F                     	;# 
  1675  0F50                     	;# 
  1676  0F51                     	;# 
  1677  0F52                     	;# 
  1678  0F53                     	;# 
  1679  0F54                     	;# 
  1680  0F55                     	;# 
  1681  0F56                     	;# 
  1682  0F57                     	;# 
  1683  0F59                     	;# 
  1684  0F5A                     	;# 
  1685  0F5B                     	;# 
  1686  0F5C                     	;# 
  1687  0F5D                     	;# 
  1688  0F61                     	;# 
  1689  0F62                     	;# 
  1690  0F64                     	;# 
  1691  0F65                     	;# 
  1692  0F66                     	;# 
  1693  0F67                     	;# 
  1694  0F68                     	;# 
  1695  0F69                     	;# 
  1696  0F6A                     	;# 
  1697  0F6B                     	;# 
  1698  0F6C                     	;# 
  1699  0F6D                     	;# 
  1700  0FE4                     	;# 
  1701  0FE5                     	;# 
  1702  0FE6                     	;# 
  1703  0FE7                     	;# 
  1704  0FE8                     	;# 
  1705  0FE9                     	;# 
  1706  0FEA                     	;# 
  1707  0FEB                     	;# 
  1708  0FED                     	;# 
  1709  0FEE                     	;# 
  1710  0FEF                     	;# 
  1711  0000                     	;# 
  1712  0001                     	;# 
  1713  0002                     	;# 
  1714  0003                     	;# 
  1715  0004                     	;# 
  1716  0005                     	;# 
  1717  0006                     	;# 
  1718  0007                     	;# 
  1719  0008                     	;# 
  1720  0009                     	;# 
  1721  000A                     	;# 
  1722  000B                     	;# 
  1723  000C                     	;# 
  1724  000D                     	;# 
  1725  000E                     	;# 
  1726  000F                     	;# 
  1727  0010                     	;# 
  1728  0011                     	;# 
  1729  0012                     	;# 
  1730  0013                     	;# 
  1731  0014                     	;# 
  1732  0015                     	;# 
  1733  0016                     	;# 
  1734  0017                     	;# 
  1735  0018                     	;# 
  1736  0019                     	;# 
  1737  001A                     	;# 
  1738  001C                     	;# 
  1739  001C                     	;# 
  1740  001D                     	;# 
  1741  001D                     	;# 
  1742  001E                     	;# 
  1743  001F                     	;# 
  1744  008C                     	;# 
  1745  008C                     	;# 
  1746  008D                     	;# 
  1747  008E                     	;# 
  1748  008E                     	;# 
  1749  008F                     	;# 
  1750  0090                     	;# 
  1751  0090                     	;# 
  1752  0091                     	;# 
  1753  0093                     	;# 
  1754  0094                     	;# 
  1755  0095                     	;# 
  1756  0096                     	;# 
  1757  0097                     	;# 
  1758  0098                     	;# 
  1759  0099                     	;# 
  1760  009A                     	;# 
  1761  009B                     	;# 
  1762  009C                     	;# 
  1763  009D                     	;# 
  1764  009E                     	;# 
  1765  010C                     	;# 
  1766  010D                     	;# 
  1767  010E                     	;# 
  1768  010E                     	;# 
  1769  010F                     	;# 
  1770  0110                     	;# 
  1771  0110                     	;# 
  1772  0111                     	;# 
  1773  0112                     	;# 
  1774  0112                     	;# 
  1775  0113                     	;# 
  1776  0114                     	;# 
  1777  0114                     	;# 
  1778  0115                     	;# 
  1779  0116                     	;# 
  1780  0116                     	;# 
  1781  0117                     	;# 
  1782  0119                     	;# 
  1783  0119                     	;# 
  1784  0119                     	;# 
  1785  011A                     	;# 
  1786  011A                     	;# 
  1787  011A                     	;# 
  1788  011B                     	;# 
  1789  011B                     	;# 
  1790  011B                     	;# 
  1791  011B                     	;# 
  1792  011B                     	;# 
  1793  011C                     	;# 
  1794  011C                     	;# 
  1795  011C                     	;# 
  1796  011D                     	;# 
  1797  011D                     	;# 
  1798  011D                     	;# 
  1799  011E                     	;# 
  1800  011E                     	;# 
  1801  011E                     	;# 
  1802  011F                     	;# 
  1803  011F                     	;# 
  1804  011F                     	;# 
  1805  011F                     	;# 
  1806  011F                     	;# 
  1807  018C                     	;# 
  1808  018D                     	;# 
  1809  018E                     	;# 
  1810  018F                     	;# 
  1811  0190                     	;# 
  1812  0191                     	;# 
  1813  0192                     	;# 
  1814  0196                     	;# 
  1815  0197                     	;# 
  1816  0198                     	;# 
  1817  0199                     	;# 
  1818  019A                     	;# 
  1819  019B                     	;# 
  1820  019C                     	;# 
  1821  020C                     	;# 
  1822  020C                     	;# 
  1823  020D                     	;# 
  1824  020E                     	;# 
  1825  020F                     	;# 
  1826  020F                     	;# 
  1827  0210                     	;# 
  1828  0210                     	;# 
  1829  0211                     	;# 
  1830  0211                     	;# 
  1831  0212                     	;# 
  1832  0212                     	;# 
  1833  0213                     	;# 
  1834  0214                     	;# 
  1835  0215                     	;# 
  1836  0215                     	;# 
  1837  0216                     	;# 
  1838  0216                     	;# 
  1839  0217                     	;# 
  1840  0217                     	;# 
  1841  0218                     	;# 
  1842  0218                     	;# 
  1843  0219                     	;# 
  1844  021A                     	;# 
  1845  021B                     	;# 
  1846  021B                     	;# 
  1847  021C                     	;# 
  1848  021C                     	;# 
  1849  021D                     	;# 
  1850  021D                     	;# 
  1851  021E                     	;# 
  1852  021F                     	;# 
  1853  028C                     	;# 
  1854  028C                     	;# 
  1855  028D                     	;# 
  1856  028D                     	;# 
  1857  028E                     	;# 
  1858  028F                     	;# 
  1859  0290                     	;# 
  1860  0290                     	;# 
  1861  0291                     	;# 
  1862  0292                     	;# 
  1863  0292                     	;# 
  1864  0293                     	;# 
  1865  0293                     	;# 
  1866  0294                     	;# 
  1867  0295                     	;# 
  1868  0296                     	;# 
  1869  0296                     	;# 
  1870  0297                     	;# 
  1871  0298                     	;# 
  1872  0298                     	;# 
  1873  0299                     	;# 
  1874  0299                     	;# 
  1875  029A                     	;# 
  1876  029B                     	;# 
  1877  029C                     	;# 
  1878  029C                     	;# 
  1879  029D                     	;# 
  1880  030C                     	;# 
  1881  030C                     	;# 
  1882  030D                     	;# 
  1883  030E                     	;# 
  1884  030F                     	;# 
  1885  0310                     	;# 
  1886  0310                     	;# 
  1887  0311                     	;# 
  1888  0312                     	;# 
  1889  0313                     	;# 
  1890  0314                     	;# 
  1891  0314                     	;# 
  1892  0315                     	;# 
  1893  0316                     	;# 
  1894  0317                     	;# 
  1895  0318                     	;# 
  1896  0318                     	;# 
  1897  0319                     	;# 
  1898  031A                     	;# 
  1899  031B                     	;# 
  1900  031C                     	;# 
  1901  031C                     	;# 
  1902  031D                     	;# 
  1903  031E                     	;# 
  1904  031F                     	;# 
  1905  038C                     	;# 
  1906  038C                     	;# 
  1907  038D                     	;# 
  1908  038E                     	;# 
  1909  0390                     	;# 
  1910  0390                     	;# 
  1911  0391                     	;# 
  1912  0392                     	;# 
  1913  040C                     	;# 
  1914  040D                     	;# 
  1915  040E                     	;# 
  1916  040F                     	;# 
  1917  0410                     	;# 
  1918  0411                     	;# 
  1919  0416                     	;# 
  1920  0416                     	;# 
  1921  0417                     	;# 
  1922  0418                     	;# 
  1923  0418                     	;# 
  1924  0419                     	;# 
  1925  041A                     	;# 
  1926  041A                     	;# 
  1927  041B                     	;# 
  1928  041C                     	;# 
  1929  041C                     	;# 
  1930  041D                     	;# 
  1931  041E                     	;# 
  1932  041F                     	;# 
  1933  048C                     	;# 
  1934  048C                     	;# 
  1935  048D                     	;# 
  1936  048E                     	;# 
  1937  048F                     	;# 
  1938  048F                     	;# 
  1939  0490                     	;# 
  1940  0491                     	;# 
  1941  0492                     	;# 
  1942  0492                     	;# 
  1943  0493                     	;# 
  1944  0494                     	;# 
  1945  0495                     	;# 
  1946  0495                     	;# 
  1947  0496                     	;# 
  1948  0497                     	;# 
  1949  0498                     	;# 
  1950  0499                     	;# 
  1951  049A                     	;# 
  1952  049B                     	;# 
  1953  049C                     	;# 
  1954  049D                     	;# 
  1955  050C                     	;# 
  1956  050C                     	;# 
  1957  050D                     	;# 
  1958  050E                     	;# 
  1959  050F                     	;# 
  1960  050F                     	;# 
  1961  0510                     	;# 
  1962  0511                     	;# 
  1963  0512                     	;# 
  1964  0512                     	;# 
  1965  0513                     	;# 
  1966  0514                     	;# 
  1967  0515                     	;# 
  1968  0515                     	;# 
  1969  0516                     	;# 
  1970  0517                     	;# 
  1971  0518                     	;# 
  1972  0519                     	;# 
  1973  051A                     	;# 
  1974  051B                     	;# 
  1975  051C                     	;# 
  1976  051D                     	;# 
  1977  058C                     	;# 
  1978  058C                     	;# 
  1979  058D                     	;# 
  1980  058E                     	;# 
  1981  058F                     	;# 
  1982  058F                     	;# 
  1983  0590                     	;# 
  1984  0591                     	;# 
  1985  0592                     	;# 
  1986  0593                     	;# 
  1987  060C                     	;# 
  1988  060D                     	;# 
  1989  060E                     	;# 
  1990  060F                     	;# 
  1991  0610                     	;# 
  1992  0611                     	;# 
  1993  0612                     	;# 
  1994  0613                     	;# 
  1995  0614                     	;# 
  1996  0616                     	;# 
  1997  0617                     	;# 
  1998  0618                     	;# 
  1999  0619                     	;# 
  2000  061A                     	;# 
  2001  061B                     	;# 
  2002  061C                     	;# 
  2003  061D                     	;# 
  2004  061E                     	;# 
  2005  068C                     	;# 
  2006  068D                     	;# 
  2007  068E                     	;# 
  2008  068F                     	;# 
  2009  0690                     	;# 
  2010  0691                     	;# 
  2011  0692                     	;# 
  2012  0693                     	;# 
  2013  0694                     	;# 
  2014  070C                     	;# 
  2015  070D                     	;# 
  2016  070E                     	;# 
  2017  070F                     	;# 
  2018  0710                     	;# 
  2019  0711                     	;# 
  2020  0712                     	;# 
  2021  0713                     	;# 
  2022  0714                     	;# 
  2023  0716                     	;# 
  2024  0717                     	;# 
  2025  0718                     	;# 
  2026  0719                     	;# 
  2027  071A                     	;# 
  2028  071B                     	;# 
  2029  071C                     	;# 
  2030  071D                     	;# 
  2031  071E                     	;# 
  2032  0796                     	;# 
  2033  0797                     	;# 
  2034  0798                     	;# 
  2035  0799                     	;# 
  2036  079A                     	;# 
  2037  079B                     	;# 
  2038  080C                     	;# 
  2039  080D                     	;# 
  2040  080E                     	;# 
  2041  080F                     	;# 
  2042  0810                     	;# 
  2043  0811                     	;# 
  2044  0812                     	;# 
  2045  0813                     	;# 
  2046  0814                     	;# 
  2047  081A                     	;# 
  2048  081B                     	;# 
  2049  081C                     	;# 
  2050  081D                     	;# 
  2051  081E                     	;# 
  2052  081F                     	;# 
  2053  088C                     	;# 
  2054  088D                     	;# 
  2055  088E                     	;# 
  2056  088F                     	;# 
  2057  0890                     	;# 
  2058  0891                     	;# 
  2059  0892                     	;# 
  2060  0893                     	;# 
  2061  0895                     	;# 
  2062  0896                     	;# 
  2063  0897                     	;# 
  2064  0898                     	;# 
  2065  0899                     	;# 
  2066  089A                     	;# 
  2067  089B                     	;# 
  2068  090C                     	;# 
  2069  090E                     	;# 
  2070  090F                     	;# 
  2071  091F                     	;# 
  2072  091F                     	;# 
  2073  098F                     	;# 
  2074  098F                     	;# 
  2075  0990                     	;# 
  2076  0991                     	;# 
  2077  0992                     	;# 
  2078  0993                     	;# 
  2079  0994                     	;# 
  2080  0995                     	;# 
  2081  0996                     	;# 
  2082  0997                     	;# 
  2083  0E0F                     	;# 
  2084  0E10                     	;# 
  2085  0E11                     	;# 
  2086  0E12                     	;# 
  2087  0E13                     	;# 
  2088  0E14                     	;# 
  2089  0E15                     	;# 
  2090  0E16                     	;# 
  2091  0E17                     	;# 
  2092  0E18                     	;# 
  2093  0E19                     	;# 
  2094  0E1A                     	;# 
  2095  0E1B                     	;# 
  2096  0E1C                     	;# 
  2097  0E1D                     	;# 
  2098  0E1E                     	;# 
  2099  0E1F                     	;# 
  2100  0E20                     	;# 
  2101  0E21                     	;# 
  2102  0E22                     	;# 
  2103  0E23                     	;# 
  2104  0E24                     	;# 
  2105  0E25                     	;# 
  2106  0E26                     	;# 
  2107  0E27                     	;# 
  2108  0E28                     	;# 
  2109  0E29                     	;# 
  2110  0E2A                     	;# 
  2111  0E2B                     	;# 
  2112  0E2C                     	;# 
  2113  0E2D                     	;# 
  2114  0E2E                     	;# 
  2115  0E2F                     	;# 
  2116  0E30                     	;# 
  2117  0E31                     	;# 
  2118  0E32                     	;# 
  2119  0E33                     	;# 
  2120  0E34                     	;# 
  2121  0E35                     	;# 
  2122  0E36                     	;# 
  2123  0E37                     	;# 
  2124  0E8F                     	;# 
  2125  0E90                     	;# 
  2126  0E91                     	;# 
  2127  0E92                     	;# 
  2128  0E93                     	;# 
  2129  0E94                     	;# 
  2130  0E95                     	;# 
  2131  0E96                     	;# 
  2132  0E97                     	;# 
  2133  0E9C                     	;# 
  2134  0E9D                     	;# 
  2135  0E9E                     	;# 
  2136  0EA1                     	;# 
  2137  0EA2                     	;# 
  2138  0EA3                     	;# 
  2139  0EA4                     	;# 
  2140  0EA5                     	;# 
  2141  0EA9                     	;# 
  2142  0EAA                     	;# 
  2143  0EAB                     	;# 
  2144  0EAC                     	;# 
  2145  0EB1                     	;# 
  2146  0EB2                     	;# 
  2147  0EB3                     	;# 
  2148  0EB8                     	;# 
  2149  0EB9                     	;# 
  2150  0EBA                     	;# 
  2151  0EBB                     	;# 
  2152  0EBC                     	;# 
  2153  0EBD                     	;# 
  2154  0EBE                     	;# 
  2155  0EC3                     	;# 
  2156  0EC5                     	;# 
  2157  0EC6                     	;# 
  2158  0EC7                     	;# 
  2159  0EC8                     	;# 
  2160  0EC9                     	;# 
  2161  0ECA                     	;# 
  2162  0ECB                     	;# 
  2163  0ECC                     	;# 
  2164  0F10                     	;# 
  2165  0F11                     	;# 
  2166  0F12                     	;# 
  2167  0F13                     	;# 
  2168  0F14                     	;# 
  2169  0F15                     	;# 
  2170  0F16                     	;# 
  2171  0F17                     	;# 
  2172  0F18                     	;# 
  2173  0F19                     	;# 
  2174  0F1A                     	;# 
  2175  0F1B                     	;# 
  2176  0F1C                     	;# 
  2177  0F1D                     	;# 
  2178  0F1E                     	;# 
  2179  0F1F                     	;# 
  2180  0F20                     	;# 
  2181  0F21                     	;# 
  2182  0F22                     	;# 
  2183  0F23                     	;# 
  2184  0F24                     	;# 
  2185  0F25                     	;# 
  2186  0F26                     	;# 
  2187  0F27                     	;# 
  2188  0F28                     	;# 
  2189  0F29                     	;# 
  2190  0F2A                     	;# 
  2191  0F2B                     	;# 
  2192  0F2C                     	;# 
  2193  0F2D                     	;# 
  2194  0F2E                     	;# 
  2195  0F2F                     	;# 
  2196  0F30                     	;# 
  2197  0F31                     	;# 
  2198  0F32                     	;# 
  2199  0F38                     	;# 
  2200  0F39                     	;# 
  2201  0F3A                     	;# 
  2202  0F3B                     	;# 
  2203  0F3C                     	;# 
  2204  0F3D                     	;# 
  2205  0F3E                     	;# 
  2206  0F3F                     	;# 
  2207  0F40                     	;# 
  2208  0F41                     	;# 
  2209  0F43                     	;# 
  2210  0F44                     	;# 
  2211  0F45                     	;# 
  2212  0F46                     	;# 
  2213  0F47                     	;# 
  2214  0F48                     	;# 
  2215  0F49                     	;# 
  2216  0F4A                     	;# 
  2217  0F4B                     	;# 
  2218  0F4C                     	;# 
  2219  0F4E                     	;# 
  2220  0F4F                     	;# 
  2221  0F50                     	;# 
  2222  0F51                     	;# 
  2223  0F52                     	;# 
  2224  0F53                     	;# 
  2225  0F54                     	;# 
  2226  0F55                     	;# 
  2227  0F56                     	;# 
  2228  0F57                     	;# 
  2229  0F59                     	;# 
  2230  0F5A                     	;# 
  2231  0F5B                     	;# 
  2232  0F5C                     	;# 
  2233  0F5D                     	;# 
  2234  0F61                     	;# 
  2235  0F62                     	;# 
  2236  0F64                     	;# 
  2237  0F65                     	;# 
  2238  0F66                     	;# 
  2239  0F67                     	;# 
  2240  0F68                     	;# 
  2241  0F69                     	;# 
  2242  0F6A                     	;# 
  2243  0F6B                     	;# 
  2244  0F6C                     	;# 
  2245  0F6D                     	;# 
  2246  0FE4                     	;# 
  2247  0FE5                     	;# 
  2248  0FE6                     	;# 
  2249  0FE7                     	;# 
  2250  0FE8                     	;# 
  2251  0FE9                     	;# 
  2252  0FEA                     	;# 
  2253  0FEB                     	;# 
  2254  0FED                     	;# 
  2255  0FEE                     	;# 
  2256  0FEF                     	;# 
  2257  0000                     	;# 
  2258  0001                     	;# 
  2259  0002                     	;# 
  2260  0003                     	;# 
  2261  0004                     	;# 
  2262  0005                     	;# 
  2263  0006                     	;# 
  2264  0007                     	;# 
  2265  0008                     	;# 
  2266  0009                     	;# 
  2267  000A                     	;# 
  2268  000B                     	;# 
  2269  000C                     	;# 
  2270  000D                     	;# 
  2271  000E                     	;# 
  2272  000F                     	;# 
  2273  0010                     	;# 
  2274  0011                     	;# 
  2275  0012                     	;# 
  2276  0013                     	;# 
  2277  0014                     	;# 
  2278  0015                     	;# 
  2279  0016                     	;# 
  2280  0017                     	;# 
  2281  0018                     	;# 
  2282  0019                     	;# 
  2283  001A                     	;# 
  2284  001C                     	;# 
  2285  001C                     	;# 
  2286  001D                     	;# 
  2287  001D                     	;# 
  2288  001E                     	;# 
  2289  001F                     	;# 
  2290  008C                     	;# 
  2291  008C                     	;# 
  2292  008D                     	;# 
  2293  008E                     	;# 
  2294  008E                     	;# 
  2295  008F                     	;# 
  2296  0090                     	;# 
  2297  0090                     	;# 
  2298  0091                     	;# 
  2299  0093                     	;# 
  2300  0094                     	;# 
  2301  0095                     	;# 
  2302  0096                     	;# 
  2303  0097                     	;# 
  2304  0098                     	;# 
  2305  0099                     	;# 
  2306  009A                     	;# 
  2307  009B                     	;# 
  2308  009C                     	;# 
  2309  009D                     	;# 
  2310  009E                     	;# 
  2311  010C                     	;# 
  2312  010D                     	;# 
  2313  010E                     	;# 
  2314  010E                     	;# 
  2315  010F                     	;# 
  2316  0110                     	;# 
  2317  0110                     	;# 
  2318  0111                     	;# 
  2319  0112                     	;# 
  2320  0112                     	;# 
  2321  0113                     	;# 
  2322  0114                     	;# 
  2323  0114                     	;# 
  2324  0115                     	;# 
  2325  0116                     	;# 
  2326  0116                     	;# 
  2327  0117                     	;# 
  2328  0119                     	;# 
  2329  0119                     	;# 
  2330  0119                     	;# 
  2331  011A                     	;# 
  2332  011A                     	;# 
  2333  011A                     	;# 
  2334  011B                     	;# 
  2335  011B                     	;# 
  2336  011B                     	;# 
  2337  011B                     	;# 
  2338  011B                     	;# 
  2339  011C                     	;# 
  2340  011C                     	;# 
  2341  011C                     	;# 
  2342  011D                     	;# 
  2343  011D                     	;# 
  2344  011D                     	;# 
  2345  011E                     	;# 
  2346  011E                     	;# 
  2347  011E                     	;# 
  2348  011F                     	;# 
  2349  011F                     	;# 
  2350  011F                     	;# 
  2351  011F                     	;# 
  2352  011F                     	;# 
  2353  018C                     	;# 
  2354  018D                     	;# 
  2355  018E                     	;# 
  2356  018F                     	;# 
  2357  0190                     	;# 
  2358  0191                     	;# 
  2359  0192                     	;# 
  2360  0196                     	;# 
  2361  0197                     	;# 
  2362  0198                     	;# 
  2363  0199                     	;# 
  2364  019A                     	;# 
  2365  019B                     	;# 
  2366  019C                     	;# 
  2367  020C                     	;# 
  2368  020C                     	;# 
  2369  020D                     	;# 
  2370  020E                     	;# 
  2371  020F                     	;# 
  2372  020F                     	;# 
  2373  0210                     	;# 
  2374  0210                     	;# 
  2375  0211                     	;# 
  2376  0211                     	;# 
  2377  0212                     	;# 
  2378  0212                     	;# 
  2379  0213                     	;# 
  2380  0214                     	;# 
  2381  0215                     	;# 
  2382  0215                     	;# 
  2383  0216                     	;# 
  2384  0216                     	;# 
  2385  0217                     	;# 
  2386  0217                     	;# 
  2387  0218                     	;# 
  2388  0218                     	;# 
  2389  0219                     	;# 
  2390  021A                     	;# 
  2391  021B                     	;# 
  2392  021B                     	;# 
  2393  021C                     	;# 
  2394  021C                     	;# 
  2395  021D                     	;# 
  2396  021D                     	;# 
  2397  021E                     	;# 
  2398  021F                     	;# 
  2399  028C                     	;# 
  2400  028C                     	;# 
  2401  028D                     	;# 
  2402  028D                     	;# 
  2403  028E                     	;# 
  2404  028F                     	;# 
  2405  0290                     	;# 
  2406  0290                     	;# 
  2407  0291                     	;# 
  2408  0292                     	;# 
  2409  0292                     	;# 
  2410  0293                     	;# 
  2411  0293                     	;# 
  2412  0294                     	;# 
  2413  0295                     	;# 
  2414  0296                     	;# 
  2415  0296                     	;# 
  2416  0297                     	;# 
  2417  0298                     	;# 
  2418  0298                     	;# 
  2419  0299                     	;# 
  2420  0299                     	;# 
  2421  029A                     	;# 
  2422  029B                     	;# 
  2423  029C                     	;# 
  2424  029C                     	;# 
  2425  029D                     	;# 
  2426  030C                     	;# 
  2427  030C                     	;# 
  2428  030D                     	;# 
  2429  030E                     	;# 
  2430  030F                     	;# 
  2431  0310                     	;# 
  2432  0310                     	;# 
  2433  0311                     	;# 
  2434  0312                     	;# 
  2435  0313                     	;# 
  2436  0314                     	;# 
  2437  0314                     	;# 
  2438  0315                     	;# 
  2439  0316                     	;# 
  2440  0317                     	;# 
  2441  0318                     	;# 
  2442  0318                     	;# 
  2443  0319                     	;# 
  2444  031A                     	;# 
  2445  031B                     	;# 
  2446  031C                     	;# 
  2447  031C                     	;# 
  2448  031D                     	;# 
  2449  031E                     	;# 
  2450  031F                     	;# 
  2451  038C                     	;# 
  2452  038C                     	;# 
  2453  038D                     	;# 
  2454  038E                     	;# 
  2455  0390                     	;# 
  2456  0390                     	;# 
  2457  0391                     	;# 
  2458  0392                     	;# 
  2459  040C                     	;# 
  2460  040D                     	;# 
  2461  040E                     	;# 
  2462  040F                     	;# 
  2463  0410                     	;# 
  2464  0411                     	;# 
  2465  0416                     	;# 
  2466  0416                     	;# 
  2467  0417                     	;# 
  2468  0418                     	;# 
  2469  0418                     	;# 
  2470  0419                     	;# 
  2471  041A                     	;# 
  2472  041A                     	;# 
  2473  041B                     	;# 
  2474  041C                     	;# 
  2475  041C                     	;# 
  2476  041D                     	;# 
  2477  041E                     	;# 
  2478  041F                     	;# 
  2479  048C                     	;# 
  2480  048C                     	;# 
  2481  048D                     	;# 
  2482  048E                     	;# 
  2483  048F                     	;# 
  2484  048F                     	;# 
  2485  0490                     	;# 
  2486  0491                     	;# 
  2487  0492                     	;# 
  2488  0492                     	;# 
  2489  0493                     	;# 
  2490  0494                     	;# 
  2491  0495                     	;# 
  2492  0495                     	;# 
  2493  0496                     	;# 
  2494  0497                     	;# 
  2495  0498                     	;# 
  2496  0499                     	;# 
  2497  049A                     	;# 
  2498  049B                     	;# 
  2499  049C                     	;# 
  2500  049D                     	;# 
  2501  050C                     	;# 
  2502  050C                     	;# 
  2503  050D                     	;# 
  2504  050E                     	;# 
  2505  050F                     	;# 
  2506  050F                     	;# 
  2507  0510                     	;# 
  2508  0511                     	;# 
  2509  0512                     	;# 
  2510  0512                     	;# 
  2511  0513                     	;# 
  2512  0514                     	;# 
  2513  0515                     	;# 
  2514  0515                     	;# 
  2515  0516                     	;# 
  2516  0517                     	;# 
  2517  0518                     	;# 
  2518  0519                     	;# 
  2519  051A                     	;# 
  2520  051B                     	;# 
  2521  051C                     	;# 
  2522  051D                     	;# 
  2523  058C                     	;# 
  2524  058C                     	;# 
  2525  058D                     	;# 
  2526  058E                     	;# 
  2527  058F                     	;# 
  2528  058F                     	;# 
  2529  0590                     	;# 
  2530  0591                     	;# 
  2531  0592                     	;# 
  2532  0593                     	;# 
  2533  060C                     	;# 
  2534  060D                     	;# 
  2535  060E                     	;# 
  2536  060F                     	;# 
  2537  0610                     	;# 
  2538  0611                     	;# 
  2539  0612                     	;# 
  2540  0613                     	;# 
  2541  0614                     	;# 
  2542  0616                     	;# 
  2543  0617                     	;# 
  2544  0618                     	;# 
  2545  0619                     	;# 
  2546  061A                     	;# 
  2547  061B                     	;# 
  2548  061C                     	;# 
  2549  061D                     	;# 
  2550  061E                     	;# 
  2551  068C                     	;# 
  2552  068D                     	;# 
  2553  068E                     	;# 
  2554  068F                     	;# 
  2555  0690                     	;# 
  2556  0691                     	;# 
  2557  0692                     	;# 
  2558  0693                     	;# 
  2559  0694                     	;# 
  2560  070C                     	;# 
  2561  070D                     	;# 
  2562  070E                     	;# 
  2563  070F                     	;# 
  2564  0710                     	;# 
  2565  0711                     	;# 
  2566  0712                     	;# 
  2567  0713                     	;# 
  2568  0714                     	;# 
  2569  0716                     	;# 
  2570  0717                     	;# 
  2571  0718                     	;# 
  2572  0719                     	;# 
  2573  071A                     	;# 
  2574  071B                     	;# 
  2575  071C                     	;# 
  2576  071D                     	;# 
  2577  071E                     	;# 
  2578  0796                     	;# 
  2579  0797                     	;# 
  2580  0798                     	;# 
  2581  0799                     	;# 
  2582  079A                     	;# 
  2583  079B                     	;# 
  2584  080C                     	;# 
  2585  080D                     	;# 
  2586  080E                     	;# 
  2587  080F                     	;# 
  2588  0810                     	;# 
  2589  0811                     	;# 
  2590  0812                     	;# 
  2591  0813                     	;# 
  2592  0814                     	;# 
  2593  081A                     	;# 
  2594  081B                     	;# 
  2595  081C                     	;# 
  2596  081D                     	;# 
  2597  081E                     	;# 
  2598  081F                     	;# 
  2599  088C                     	;# 
  2600  088D                     	;# 
  2601  088E                     	;# 
  2602  088F                     	;# 
  2603  0890                     	;# 
  2604  0891                     	;# 
  2605  0892                     	;# 
  2606  0893                     	;# 
  2607  0895                     	;# 
  2608  0896                     	;# 
  2609  0897                     	;# 
  2610  0898                     	;# 
  2611  0899                     	;# 
  2612  089A                     	;# 
  2613  089B                     	;# 
  2614  090C                     	;# 
  2615  090E                     	;# 
  2616  090F                     	;# 
  2617  091F                     	;# 
  2618  091F                     	;# 
  2619  098F                     	;# 
  2620  098F                     	;# 
  2621  0990                     	;# 
  2622  0991                     	;# 
  2623  0992                     	;# 
  2624  0993                     	;# 
  2625  0994                     	;# 
  2626  0995                     	;# 
  2627  0996                     	;# 
  2628  0997                     	;# 
  2629  0E0F                     	;# 
  2630  0E10                     	;# 
  2631  0E11                     	;# 
  2632  0E12                     	;# 
  2633  0E13                     	;# 
  2634  0E14                     	;# 
  2635  0E15                     	;# 
  2636  0E16                     	;# 
  2637  0E17                     	;# 
  2638  0E18                     	;# 
  2639  0E19                     	;# 
  2640  0E1A                     	;# 
  2641  0E1B                     	;# 
  2642  0E1C                     	;# 
  2643  0E1D                     	;# 
  2644  0E1E                     	;# 
  2645  0E1F                     	;# 
  2646  0E20                     	;# 
  2647  0E21                     	;# 
  2648  0E22                     	;# 
  2649  0E23                     	;# 
  2650  0E24                     	;# 
  2651  0E25                     	;# 
  2652  0E26                     	;# 
  2653  0E27                     	;# 
  2654  0E28                     	;# 
  2655  0E29                     	;# 
  2656  0E2A                     	;# 
  2657  0E2B                     	;# 
  2658  0E2C                     	;# 
  2659  0E2D                     	;# 
  2660  0E2E                     	;# 
  2661  0E2F                     	;# 
  2662  0E30                     	;# 
  2663  0E31                     	;# 
  2664  0E32                     	;# 
  2665  0E33                     	;# 
  2666  0E34                     	;# 
  2667  0E35                     	;# 
  2668  0E36                     	;# 
  2669  0E37                     	;# 
  2670  0E8F                     	;# 
  2671  0E90                     	;# 
  2672  0E91                     	;# 
  2673  0E92                     	;# 
  2674  0E93                     	;# 
  2675  0E94                     	;# 
  2676  0E95                     	;# 
  2677  0E96                     	;# 
  2678  0E97                     	;# 
  2679  0E9C                     	;# 
  2680  0E9D                     	;# 
  2681  0E9E                     	;# 
  2682  0EA1                     	;# 
  2683  0EA2                     	;# 
  2684  0EA3                     	;# 
  2685  0EA4                     	;# 
  2686  0EA5                     	;# 
  2687  0EA9                     	;# 
  2688  0EAA                     	;# 
  2689  0EAB                     	;# 
  2690  0EAC                     	;# 
  2691  0EB1                     	;# 
  2692  0EB2                     	;# 
  2693  0EB3                     	;# 
  2694  0EB8                     	;# 
  2695  0EB9                     	;# 
  2696  0EBA                     	;# 
  2697  0EBB                     	;# 
  2698  0EBC                     	;# 
  2699  0EBD                     	;# 
  2700  0EBE                     	;# 
  2701  0EC3                     	;# 
  2702  0EC5                     	;# 
  2703  0EC6                     	;# 
  2704  0EC7                     	;# 
  2705  0EC8                     	;# 
  2706  0EC9                     	;# 
  2707  0ECA                     	;# 
  2708  0ECB                     	;# 
  2709  0ECC                     	;# 
  2710  0F10                     	;# 
  2711  0F11                     	;# 
  2712  0F12                     	;# 
  2713  0F13                     	;# 
  2714  0F14                     	;# 
  2715  0F15                     	;# 
  2716  0F16                     	;# 
  2717  0F17                     	;# 
  2718  0F18                     	;# 
  2719  0F19                     	;# 
  2720  0F1A                     	;# 
  2721  0F1B                     	;# 
  2722  0F1C                     	;# 
  2723  0F1D                     	;# 
  2724  0F1E                     	;# 
  2725  0F1F                     	;# 
  2726  0F20                     	;# 
  2727  0F21                     	;# 
  2728  0F22                     	;# 
  2729  0F23                     	;# 
  2730  0F24                     	;# 
  2731  0F25                     	;# 
  2732  0F26                     	;# 
  2733  0F27                     	;# 
  2734  0F28                     	;# 
  2735  0F29                     	;# 
  2736  0F2A                     	;# 
  2737  0F2B                     	;# 
  2738  0F2C                     	;# 
  2739  0F2D                     	;# 
  2740  0F2E                     	;# 
  2741  0F2F                     	;# 
  2742  0F30                     	;# 
  2743  0F31                     	;# 
  2744  0F32                     	;# 
  2745  0F38                     	;# 
  2746  0F39                     	;# 
  2747  0F3A                     	;# 
  2748  0F3B                     	;# 
  2749  0F3C                     	;# 
  2750  0F3D                     	;# 
  2751  0F3E                     	;# 
  2752  0F3F                     	;# 
  2753  0F40                     	;# 
  2754  0F41                     	;# 
  2755  0F43                     	;# 
  2756  0F44                     	;# 
  2757  0F45                     	;# 
  2758  0F46                     	;# 
  2759  0F47                     	;# 
  2760  0F48                     	;# 
  2761  0F49                     	;# 
  2762  0F4A                     	;# 
  2763  0F4B                     	;# 
  2764  0F4C                     	;# 
  2765  0F4E                     	;# 
  2766  0F4F                     	;# 
  2767  0F50                     	;# 
  2768  0F51                     	;# 
  2769  0F52                     	;# 
  2770  0F53                     	;# 
  2771  0F54                     	;# 
  2772  0F55                     	;# 
  2773  0F56                     	;# 
  2774  0F57                     	;# 
  2775  0F59                     	;# 
  2776  0F5A                     	;# 
  2777  0F5B                     	;# 
  2778  0F5C                     	;# 
  2779  0F5D                     	;# 
  2780  0F61                     	;# 
  2781  0F62                     	;# 
  2782  0F64                     	;# 
  2783  0F65                     	;# 
  2784  0F66                     	;# 
  2785  0F67                     	;# 
  2786  0F68                     	;# 
  2787  0F69                     	;# 
  2788  0F6A                     	;# 
  2789  0F6B                     	;# 
  2790  0F6C                     	;# 
  2791  0F6D                     	;# 
  2792  0FE4                     	;# 
  2793  0FE5                     	;# 
  2794  0FE6                     	;# 
  2795  0FE7                     	;# 
  2796  0FE8                     	;# 
  2797  0FE9                     	;# 
  2798  0FEA                     	;# 
  2799  0FEB                     	;# 
  2800  0FED                     	;# 
  2801  0FEE                     	;# 
  2802  0FEF                     	;# 
  2803  0000                     	;# 
  2804  0001                     	;# 
  2805  0002                     	;# 
  2806  0003                     	;# 
  2807  0004                     	;# 
  2808  0005                     	;# 
  2809  0006                     	;# 
  2810  0007                     	;# 
  2811  0008                     	;# 
  2812  0009                     	;# 
  2813  000A                     	;# 
  2814  000B                     	;# 
  2815  000C                     	;# 
  2816  000D                     	;# 
  2817  000E                     	;# 
  2818  000F                     	;# 
  2819  0010                     	;# 
  2820  0011                     	;# 
  2821  0012                     	;# 
  2822  0013                     	;# 
  2823  0014                     	;# 
  2824  0015                     	;# 
  2825  0016                     	;# 
  2826  0017                     	;# 
  2827  0018                     	;# 
  2828  0019                     	;# 
  2829  001A                     	;# 
  2830  001C                     	;# 
  2831  001C                     	;# 
  2832  001D                     	;# 
  2833  001D                     	;# 
  2834  001E                     	;# 
  2835  001F                     	;# 
  2836  008C                     	;# 
  2837  008C                     	;# 
  2838  008D                     	;# 
  2839  008E                     	;# 
  2840  008E                     	;# 
  2841  008F                     	;# 
  2842  0090                     	;# 
  2843  0090                     	;# 
  2844  0091                     	;# 
  2845  0093                     	;# 
  2846  0094                     	;# 
  2847  0095                     	;# 
  2848  0096                     	;# 
  2849  0097                     	;# 
  2850  0098                     	;# 
  2851  0099                     	;# 
  2852  009A                     	;# 
  2853  009B                     	;# 
  2854  009C                     	;# 
  2855  009D                     	;# 
  2856  009E                     	;# 
  2857  010C                     	;# 
  2858  010D                     	;# 
  2859  010E                     	;# 
  2860  010E                     	;# 
  2861  010F                     	;# 
  2862  0110                     	;# 
  2863  0110                     	;# 
  2864  0111                     	;# 
  2865  0112                     	;# 
  2866  0112                     	;# 
  2867  0113                     	;# 
  2868  0114                     	;# 
  2869  0114                     	;# 
  2870  0115                     	;# 
  2871  0116                     	;# 
  2872  0116                     	;# 
  2873  0117                     	;# 
  2874  0119                     	;# 
  2875  0119                     	;# 
  2876  0119                     	;# 
  2877  011A                     	;# 
  2878  011A                     	;# 
  2879  011A                     	;# 
  2880  011B                     	;# 
  2881  011B                     	;# 
  2882  011B                     	;# 
  2883  011B                     	;# 
  2884  011B                     	;# 
  2885  011C                     	;# 
  2886  011C                     	;# 
  2887  011C                     	;# 
  2888  011D                     	;# 
  2889  011D                     	;# 
  2890  011D                     	;# 
  2891  011E                     	;# 
  2892  011E                     	;# 
  2893  011E                     	;# 
  2894  011F                     	;# 
  2895  011F                     	;# 
  2896  011F                     	;# 
  2897  011F                     	;# 
  2898  011F                     	;# 
  2899  018C                     	;# 
  2900  018D                     	;# 
  2901  018E                     	;# 
  2902  018F                     	;# 
  2903  0190                     	;# 
  2904  0191                     	;# 
  2905  0192                     	;# 
  2906  0196                     	;# 
  2907  0197                     	;# 
  2908  0198                     	;# 
  2909  0199                     	;# 
  2910  019A                     	;# 
  2911  019B                     	;# 
  2912  019C                     	;# 
  2913  020C                     	;# 
  2914  020C                     	;# 
  2915  020D                     	;# 
  2916  020E                     	;# 
  2917  020F                     	;# 
  2918  020F                     	;# 
  2919  0210                     	;# 
  2920  0210                     	;# 
  2921  0211                     	;# 
  2922  0211                     	;# 
  2923  0212                     	;# 
  2924  0212                     	;# 
  2925  0213                     	;# 
  2926  0214                     	;# 
  2927  0215                     	;# 
  2928  0215                     	;# 
  2929  0216                     	;# 
  2930  0216                     	;# 
  2931  0217                     	;# 
  2932  0217                     	;# 
  2933  0218                     	;# 
  2934  0218                     	;# 
  2935  0219                     	;# 
  2936  021A                     	;# 
  2937  021B                     	;# 
  2938  021B                     	;# 
  2939  021C                     	;# 
  2940  021C                     	;# 
  2941  021D                     	;# 
  2942  021D                     	;# 
  2943  021E                     	;# 
  2944  021F                     	;# 
  2945  028C                     	;# 
  2946  028C                     	;# 
  2947  028D                     	;# 
  2948  028D                     	;# 
  2949  028E                     	;# 
  2950  028F                     	;# 
  2951  0290                     	;# 
  2952  0290                     	;# 
  2953  0291                     	;# 
  2954  0292                     	;# 
  2955  0292                     	;# 
  2956  0293                     	;# 
  2957  0293                     	;# 
  2958  0294                     	;# 
  2959  0295                     	;# 
  2960  0296                     	;# 
  2961  0296                     	;# 
  2962  0297                     	;# 
  2963  0298                     	;# 
  2964  0298                     	;# 
  2965  0299                     	;# 
  2966  0299                     	;# 
  2967  029A                     	;# 
  2968  029B                     	;# 
  2969  029C                     	;# 
  2970  029C                     	;# 
  2971  029D                     	;# 
  2972  030C                     	;# 
  2973  030C                     	;# 
  2974  030D                     	;# 
  2975  030E                     	;# 
  2976  030F                     	;# 
  2977  0310                     	;# 
  2978  0310                     	;# 
  2979  0311                     	;# 
  2980  0312                     	;# 
  2981  0313                     	;# 
  2982  0314                     	;# 
  2983  0314                     	;# 
  2984  0315                     	;# 
  2985  0316                     	;# 
  2986  0317                     	;# 
  2987  0318                     	;# 
  2988  0318                     	;# 
  2989  0319                     	;# 
  2990  031A                     	;# 
  2991  031B                     	;# 
  2992  031C                     	;# 
  2993  031C                     	;# 
  2994  031D                     	;# 
  2995  031E                     	;# 
  2996  031F                     	;# 
  2997  038C                     	;# 
  2998  038C                     	;# 
  2999  038D                     	;# 
  3000  038E                     	;# 
  3001  0390                     	;# 
  3002  0390                     	;# 
  3003  0391                     	;# 
  3004  0392                     	;# 
  3005  040C                     	;# 
  3006  040D                     	;# 
  3007  040E                     	;# 
  3008  040F                     	;# 
  3009  0410                     	;# 
  3010  0411                     	;# 
  3011  0416                     	;# 
  3012  0416                     	;# 
  3013  0417                     	;# 
  3014  0418                     	;# 
  3015  0418                     	;# 
  3016  0419                     	;# 
  3017  041A                     	;# 
  3018  041A                     	;# 
  3019  041B                     	;# 
  3020  041C                     	;# 
  3021  041C                     	;# 
  3022  041D                     	;# 
  3023  041E                     	;# 
  3024  041F                     	;# 
  3025  048C                     	;# 
  3026  048C                     	;# 
  3027  048D                     	;# 
  3028  048E                     	;# 
  3029  048F                     	;# 
  3030  048F                     	;# 
  3031  0490                     	;# 
  3032  0491                     	;# 
  3033  0492                     	;# 
  3034  0492                     	;# 
  3035  0493                     	;# 
  3036  0494                     	;# 
  3037  0495                     	;# 
  3038  0495                     	;# 
  3039  0496                     	;# 
  3040  0497                     	;# 
  3041  0498                     	;# 
  3042  0499                     	;# 
  3043  049A                     	;# 
  3044  049B                     	;# 
  3045  049C                     	;# 
  3046  049D                     	;# 
  3047  050C                     	;# 
  3048  050C                     	;# 
  3049  050D                     	;# 
  3050  050E                     	;# 
  3051  050F                     	;# 
  3052  050F                     	;# 
  3053  0510                     	;# 
  3054  0511                     	;# 
  3055  0512                     	;# 
  3056  0512                     	;# 
  3057  0513                     	;# 
  3058  0514                     	;# 
  3059  0515                     	;# 
  3060  0515                     	;# 
  3061  0516                     	;# 
  3062  0517                     	;# 
  3063  0518                     	;# 
  3064  0519                     	;# 
  3065  051A                     	;# 
  3066  051B                     	;# 
  3067  051C                     	;# 
  3068  051D                     	;# 
  3069  058C                     	;# 
  3070  058C                     	;# 
  3071  058D                     	;# 
  3072  058E                     	;# 
  3073  058F                     	;# 
  3074  058F                     	;# 
  3075  0590                     	;# 
  3076  0591                     	;# 
  3077  0592                     	;# 
  3078  0593                     	;# 
  3079  060C                     	;# 
  3080  060D                     	;# 
  3081  060E                     	;# 
  3082  060F                     	;# 
  3083  0610                     	;# 
  3084  0611                     	;# 
  3085  0612                     	;# 
  3086  0613                     	;# 
  3087  0614                     	;# 
  3088  0616                     	;# 
  3089  0617                     	;# 
  3090  0618                     	;# 
  3091  0619                     	;# 
  3092  061A                     	;# 
  3093  061B                     	;# 
  3094  061C                     	;# 
  3095  061D                     	;# 
  3096  061E                     	;# 
  3097  068C                     	;# 
  3098  068D                     	;# 
  3099  068E                     	;# 
  3100  068F                     	;# 
  3101  0690                     	;# 
  3102  0691                     	;# 
  3103  0692                     	;# 
  3104  0693                     	;# 
  3105  0694                     	;# 
  3106  070C                     	;# 
  3107  070D                     	;# 
  3108  070E                     	;# 
  3109  070F                     	;# 
  3110  0710                     	;# 
  3111  0711                     	;# 
  3112  0712                     	;# 
  3113  0713                     	;# 
  3114  0714                     	;# 
  3115  0716                     	;# 
  3116  0717                     	;# 
  3117  0718                     	;# 
  3118  0719                     	;# 
  3119  071A                     	;# 
  3120  071B                     	;# 
  3121  071C                     	;# 
  3122  071D                     	;# 
  3123  071E                     	;# 
  3124  0796                     	;# 
  3125  0797                     	;# 
  3126  0798                     	;# 
  3127  0799                     	;# 
  3128  079A                     	;# 
  3129  079B                     	;# 
  3130  080C                     	;# 
  3131  080D                     	;# 
  3132  080E                     	;# 
  3133  080F                     	;# 
  3134  0810                     	;# 
  3135  0811                     	;# 
  3136  0812                     	;# 
  3137  0813                     	;# 
  3138  0814                     	;# 
  3139  081A                     	;# 
  3140  081B                     	;# 
  3141  081C                     	;# 
  3142  081D                     	;# 
  3143  081E                     	;# 
  3144  081F                     	;# 
  3145  088C                     	;# 
  3146  088D                     	;# 
  3147  088E                     	;# 
  3148  088F                     	;# 
  3149  0890                     	;# 
  3150  0891                     	;# 
  3151  0892                     	;# 
  3152  0893                     	;# 
  3153  0895                     	;# 
  3154  0896                     	;# 
  3155  0897                     	;# 
  3156  0898                     	;# 
  3157  0899                     	;# 
  3158  089A                     	;# 
  3159  089B                     	;# 
  3160  090C                     	;# 
  3161  090E                     	;# 
  3162  090F                     	;# 
  3163  091F                     	;# 
  3164  091F                     	;# 
  3165  098F                     	;# 
  3166  098F                     	;# 
  3167  0990                     	;# 
  3168  0991                     	;# 
  3169  0992                     	;# 
  3170  0993                     	;# 
  3171  0994                     	;# 
  3172  0995                     	;# 
  3173  0996                     	;# 
  3174  0997                     	;# 
  3175  0E0F                     	;# 
  3176  0E10                     	;# 
  3177  0E11                     	;# 
  3178  0E12                     	;# 
  3179  0E13                     	;# 
  3180  0E14                     	;# 
  3181  0E15                     	;# 
  3182  0E16                     	;# 
  3183  0E17                     	;# 
  3184  0E18                     	;# 
  3185  0E19                     	;# 
  3186  0E1A                     	;# 
  3187  0E1B                     	;# 
  3188  0E1C                     	;# 
  3189  0E1D                     	;# 
  3190  0E1E                     	;# 
  3191  0E1F                     	;# 
  3192  0E20                     	;# 
  3193  0E21                     	;# 
  3194  0E22                     	;# 
  3195  0E23                     	;# 
  3196  0E24                     	;# 
  3197  0E25                     	;# 
  3198  0E26                     	;# 
  3199  0E27                     	;# 
  3200  0E28                     	;# 
  3201  0E29                     	;# 
  3202  0E2A                     	;# 
  3203  0E2B                     	;# 
  3204  0E2C                     	;# 
  3205  0E2D                     	;# 
  3206  0E2E                     	;# 
  3207  0E2F                     	;# 
  3208  0E30                     	;# 
  3209  0E31                     	;# 
  3210  0E32                     	;# 
  3211  0E33                     	;# 
  3212  0E34                     	;# 
  3213  0E35                     	;# 
  3214  0E36                     	;# 
  3215  0E37                     	;# 
  3216  0E8F                     	;# 
  3217  0E90                     	;# 
  3218  0E91                     	;# 
  3219  0E92                     	;# 
  3220  0E93                     	;# 
  3221  0E94                     	;# 
  3222  0E95                     	;# 
  3223  0E96                     	;# 
  3224  0E97                     	;# 
  3225  0E9C                     	;# 
  3226  0E9D                     	;# 
  3227  0E9E                     	;# 
  3228  0EA1                     	;# 
  3229  0EA2                     	;# 
  3230  0EA3                     	;# 
  3231  0EA4                     	;# 
  3232  0EA5                     	;# 
  3233  0EA9                     	;# 
  3234  0EAA                     	;# 
  3235  0EAB                     	;# 
  3236  0EAC                     	;# 
  3237  0EB1                     	;# 
  3238  0EB2                     	;# 
  3239  0EB3                     	;# 
  3240  0EB8                     	;# 
  3241  0EB9                     	;# 
  3242  0EBA                     	;# 
  3243  0EBB                     	;# 
  3244  0EBC                     	;# 
  3245  0EBD                     	;# 
  3246  0EBE                     	;# 
  3247  0EC3                     	;# 
  3248  0EC5                     	;# 
  3249  0EC6                     	;# 
  3250  0EC7                     	;# 
  3251  0EC8                     	;# 
  3252  0EC9                     	;# 
  3253  0ECA                     	;# 
  3254  0ECB                     	;# 
  3255  0ECC                     	;# 
  3256  0F10                     	;# 
  3257  0F11                     	;# 
  3258  0F12                     	;# 
  3259  0F13                     	;# 
  3260  0F14                     	;# 
  3261  0F15                     	;# 
  3262  0F16                     	;# 
  3263  0F17                     	;# 
  3264  0F18                     	;# 
  3265  0F19                     	;# 
  3266  0F1A                     	;# 
  3267  0F1B                     	;# 
  3268  0F1C                     	;# 
  3269  0F1D                     	;# 
  3270  0F1E                     	;# 
  3271  0F1F                     	;# 
  3272  0F20                     	;# 
  3273  0F21                     	;# 
  3274  0F22                     	;# 
  3275  0F23                     	;# 
  3276  0F24                     	;# 
  3277  0F25                     	;# 
  3278  0F26                     	;# 
  3279  0F27                     	;# 
  3280  0F28                     	;# 
  3281  0F29                     	;# 
  3282  0F2A                     	;# 
  3283  0F2B                     	;# 
  3284  0F2C                     	;# 
  3285  0F2D                     	;# 
  3286  0F2E                     	;# 
  3287  0F2F                     	;# 
  3288  0F30                     	;# 
  3289  0F31                     	;# 
  3290  0F32                     	;# 
  3291  0F38                     	;# 
  3292  0F39                     	;# 
  3293  0F3A                     	;# 
  3294  0F3B                     	;# 
  3295  0F3C                     	;# 
  3296  0F3D                     	;# 
  3297  0F3E                     	;# 
  3298  0F3F                     	;# 
  3299  0F40                     	;# 
  3300  0F41                     	;# 
  3301  0F43                     	;# 
  3302  0F44                     	;# 
  3303  0F45                     	;# 
  3304  0F46                     	;# 
  3305  0F47                     	;# 
  3306  0F48                     	;# 
  3307  0F49                     	;# 
  3308  0F4A                     	;# 
  3309  0F4B                     	;# 
  3310  0F4C                     	;# 
  3311  0F4E                     	;# 
  3312  0F4F                     	;# 
  3313  0F50                     	;# 
  3314  0F51                     	;# 
  3315  0F52                     	;# 
  3316  0F53                     	;# 
  3317  0F54                     	;# 
  3318  0F55                     	;# 
  3319  0F56                     	;# 
  3320  0F57                     	;# 
  3321  0F59                     	;# 
  3322  0F5A                     	;# 
  3323  0F5B                     	;# 
  3324  0F5C                     	;# 
  3325  0F5D                     	;# 
  3326  0F61                     	;# 
  3327  0F62                     	;# 
  3328  0F64                     	;# 
  3329  0F65                     	;# 
  3330  0F66                     	;# 
  3331  0F67                     	;# 
  3332  0F68                     	;# 
  3333  0F69                     	;# 
  3334  0F6A                     	;# 
  3335  0F6B                     	;# 
  3336  0F6C                     	;# 
  3337  0F6D                     	;# 
  3338  0FE4                     	;# 
  3339  0FE5                     	;# 
  3340  0FE6                     	;# 
  3341  0FE7                     	;# 
  3342  0FE8                     	;# 
  3343  0FE9                     	;# 
  3344  0FEA                     	;# 
  3345  0FEB                     	;# 
  3346  0FED                     	;# 
  3347  0FEE                     	;# 
  3348  0FEF                     	;# 
  3349  0000                     	;# 
  3350  0001                     	;# 
  3351  0002                     	;# 
  3352  0003                     	;# 
  3353  0004                     	;# 
  3354  0005                     	;# 
  3355  0006                     	;# 
  3356  0007                     	;# 
  3357  0008                     	;# 
  3358  0009                     	;# 
  3359  000A                     	;# 
  3360  000B                     	;# 
  3361  000C                     	;# 
  3362  000D                     	;# 
  3363  000E                     	;# 
  3364  000F                     	;# 
  3365  0010                     	;# 
  3366  0011                     	;# 
  3367  0012                     	;# 
  3368  0013                     	;# 
  3369  0014                     	;# 
  3370  0015                     	;# 
  3371  0016                     	;# 
  3372  0017                     	;# 
  3373  0018                     	;# 
  3374  0019                     	;# 
  3375  001A                     	;# 
  3376  001C                     	;# 
  3377  001C                     	;# 
  3378  001D                     	;# 
  3379  001D                     	;# 
  3380  001E                     	;# 
  3381  001F                     	;# 
  3382  008C                     	;# 
  3383  008C                     	;# 
  3384  008D                     	;# 
  3385  008E                     	;# 
  3386  008E                     	;# 
  3387  008F                     	;# 
  3388  0090                     	;# 
  3389  0090                     	;# 
  3390  0091                     	;# 
  3391  0093                     	;# 
  3392  0094                     	;# 
  3393  0095                     	;# 
  3394  0096                     	;# 
  3395  0097                     	;# 
  3396  0098                     	;# 
  3397  0099                     	;# 
  3398  009A                     	;# 
  3399  009B                     	;# 
  3400  009C                     	;# 
  3401  009D                     	;# 
  3402  009E                     	;# 
  3403  010C                     	;# 
  3404  010D                     	;# 
  3405  010E                     	;# 
  3406  010E                     	;# 
  3407  010F                     	;# 
  3408  0110                     	;# 
  3409  0110                     	;# 
  3410  0111                     	;# 
  3411  0112                     	;# 
  3412  0112                     	;# 
  3413  0113                     	;# 
  3414  0114                     	;# 
  3415  0114                     	;# 
  3416  0115                     	;# 
  3417  0116                     	;# 
  3418  0116                     	;# 
  3419  0117                     	;# 
  3420  0119                     	;# 
  3421  0119                     	;# 
  3422  0119                     	;# 
  3423  011A                     	;# 
  3424  011A                     	;# 
  3425  011A                     	;# 
  3426  011B                     	;# 
  3427  011B                     	;# 
  3428  011B                     	;# 
  3429  011B                     	;# 
  3430  011B                     	;# 
  3431  011C                     	;# 
  3432  011C                     	;# 
  3433  011C                     	;# 
  3434  011D                     	;# 
  3435  011D                     	;# 
  3436  011D                     	;# 
  3437  011E                     	;# 
  3438  011E                     	;# 
  3439  011E                     	;# 
  3440  011F                     	;# 
  3441  011F                     	;# 
  3442  011F                     	;# 
  3443  011F                     	;# 
  3444  011F                     	;# 
  3445  018C                     	;# 
  3446  018D                     	;# 
  3447  018E                     	;# 
  3448  018F                     	;# 
  3449  0190                     	;# 
  3450  0191                     	;# 
  3451  0192                     	;# 
  3452  0196                     	;# 
  3453  0197                     	;# 
  3454  0198                     	;# 
  3455  0199                     	;# 
  3456  019A                     	;# 
  3457  019B                     	;# 
  3458  019C                     	;# 
  3459  020C                     	;# 
  3460  020C                     	;# 
  3461  020D                     	;# 
  3462  020E                     	;# 
  3463  020F                     	;# 
  3464  020F                     	;# 
  3465  0210                     	;# 
  3466  0210                     	;# 
  3467  0211                     	;# 
  3468  0211                     	;# 
  3469  0212                     	;# 
  3470  0212                     	;# 
  3471  0213                     	;# 
  3472  0214                     	;# 
  3473  0215                     	;# 
  3474  0215                     	;# 
  3475  0216                     	;# 
  3476  0216                     	;# 
  3477  0217                     	;# 
  3478  0217                     	;# 
  3479  0218                     	;# 
  3480  0218                     	;# 
  3481  0219                     	;# 
  3482  021A                     	;# 
  3483  021B                     	;# 
  3484  021B                     	;# 
  3485  021C                     	;# 
  3486  021C                     	;# 
  3487  021D                     	;# 
  3488  021D                     	;# 
  3489  021E                     	;# 
  3490  021F                     	;# 
  3491  028C                     	;# 
  3492  028C                     	;# 
  3493  028D                     	;# 
  3494  028D                     	;# 
  3495  028E                     	;# 
  3496  028F                     	;# 
  3497  0290                     	;# 
  3498  0290                     	;# 
  3499  0291                     	;# 
  3500  0292                     	;# 
  3501  0292                     	;# 
  3502  0293                     	;# 
  3503  0293                     	;# 
  3504  0294                     	;# 
  3505  0295                     	;# 
  3506  0296                     	;# 
  3507  0296                     	;# 
  3508  0297                     	;# 
  3509  0298                     	;# 
  3510  0298                     	;# 
  3511  0299                     	;# 
  3512  0299                     	;# 
  3513  029A                     	;# 
  3514  029B                     	;# 
  3515  029C                     	;# 
  3516  029C                     	;# 
  3517  029D                     	;# 
  3518  030C                     	;# 
  3519  030C                     	;# 
  3520  030D                     	;# 
  3521  030E                     	;# 
  3522  030F                     	;# 
  3523  0310                     	;# 
  3524  0310                     	;# 
  3525  0311                     	;# 
  3526  0312                     	;# 
  3527  0313                     	;# 
  3528  0314                     	;# 
  3529  0314                     	;# 
  3530  0315                     	;# 
  3531  0316                     	;# 
  3532  0317                     	;# 
  3533  0318                     	;# 
  3534  0318                     	;# 
  3535  0319                     	;# 
  3536  031A                     	;# 
  3537  031B                     	;# 
  3538  031C                     	;# 
  3539  031C                     	;# 
  3540  031D                     	;# 
  3541  031E                     	;# 
  3542  031F                     	;# 
  3543  038C                     	;# 
  3544  038C                     	;# 
  3545  038D                     	;# 
  3546  038E                     	;# 
  3547  0390                     	;# 
  3548  0390                     	;# 
  3549  0391                     	;# 
  3550  0392                     	;# 
  3551  040C                     	;# 
  3552  040D                     	;# 
  3553  040E                     	;# 
  3554  040F                     	;# 
  3555  0410                     	;# 
  3556  0411                     	;# 
  3557  0416                     	;# 
  3558  0416                     	;# 
  3559  0417                     	;# 
  3560  0418                     	;# 
  3561  0418                     	;# 
  3562  0419                     	;# 
  3563  041A                     	;# 
  3564  041A                     	;# 
  3565  041B                     	;# 
  3566  041C                     	;# 
  3567  041C                     	;# 
  3568  041D                     	;# 
  3569  041E                     	;# 
  3570  041F                     	;# 
  3571  048C                     	;# 
  3572  048C                     	;# 
  3573  048D                     	;# 
  3574  048E                     	;# 
  3575  048F                     	;# 
  3576  048F                     	;# 
  3577  0490                     	;# 
  3578  0491                     	;# 
  3579  0492                     	;# 
  3580  0492                     	;# 
  3581  0493                     	;# 
  3582  0494                     	;# 
  3583  0495                     	;# 
  3584  0495                     	;# 
  3585  0496                     	;# 
  3586  0497                     	;# 
  3587  0498                     	;# 
  3588  0499                     	;# 
  3589  049A                     	;# 
  3590  049B                     	;# 
  3591  049C                     	;# 
  3592  049D                     	;# 
  3593  050C                     	;# 
  3594  050C                     	;# 
  3595  050D                     	;# 
  3596  050E                     	;# 
  3597  050F                     	;# 
  3598  050F                     	;# 
  3599  0510                     	;# 
  3600  0511                     	;# 
  3601  0512                     	;# 
  3602  0512                     	;# 
  3603  0513                     	;# 
  3604  0514                     	;# 
  3605  0515                     	;# 
  3606  0515                     	;# 
  3607  0516                     	;# 
  3608  0517                     	;# 
  3609  0518                     	;# 
  3610  0519                     	;# 
  3611  051A                     	;# 
  3612  051B                     	;# 
  3613  051C                     	;# 
  3614  051D                     	;# 
  3615  058C                     	;# 
  3616  058C                     	;# 
  3617  058D                     	;# 
  3618  058E                     	;# 
  3619  058F                     	;# 
  3620  058F                     	;# 
  3621  0590                     	;# 
  3622  0591                     	;# 
  3623  0592                     	;# 
  3624  0593                     	;# 
  3625  060C                     	;# 
  3626  060D                     	;# 
  3627  060E                     	;# 
  3628  060F                     	;# 
  3629  0610                     	;# 
  3630  0611                     	;# 
  3631  0612                     	;# 
  3632  0613                     	;# 
  3633  0614                     	;# 
  3634  0616                     	;# 
  3635  0617                     	;# 
  3636  0618                     	;# 
  3637  0619                     	;# 
  3638  061A                     	;# 
  3639  061B                     	;# 
  3640  061C                     	;# 
  3641  061D                     	;# 
  3642  061E                     	;# 
  3643  068C                     	;# 
  3644  068D                     	;# 
  3645  068E                     	;# 
  3646  068F                     	;# 
  3647  0690                     	;# 
  3648  0691                     	;# 
  3649  0692                     	;# 
  3650  0693                     	;# 
  3651  0694                     	;# 
  3652  070C                     	;# 
  3653  070D                     	;# 
  3654  070E                     	;# 
  3655  070F                     	;# 
  3656  0710                     	;# 
  3657  0711                     	;# 
  3658  0712                     	;# 
  3659  0713                     	;# 
  3660  0714                     	;# 
  3661  0716                     	;# 
  3662  0717                     	;# 
  3663  0718                     	;# 
  3664  0719                     	;# 
  3665  071A                     	;# 
  3666  071B                     	;# 
  3667  071C                     	;# 
  3668  071D                     	;# 
  3669  071E                     	;# 
  3670  0796                     	;# 
  3671  0797                     	;# 
  3672  0798                     	;# 
  3673  0799                     	;# 
  3674  079A                     	;# 
  3675  079B                     	;# 
  3676  080C                     	;# 
  3677  080D                     	;# 
  3678  080E                     	;# 
  3679  080F                     	;# 
  3680  0810                     	;# 
  3681  0811                     	;# 
  3682  0812                     	;# 
  3683  0813                     	;# 
  3684  0814                     	;# 
  3685  081A                     	;# 
  3686  081B                     	;# 
  3687  081C                     	;# 
  3688  081D                     	;# 
  3689  081E                     	;# 
  3690  081F                     	;# 
  3691  088C                     	;# 
  3692  088D                     	;# 
  3693  088E                     	;# 
  3694  088F                     	;# 
  3695  0890                     	;# 
  3696  0891                     	;# 
  3697  0892                     	;# 
  3698  0893                     	;# 
  3699  0895                     	;# 
  3700  0896                     	;# 
  3701  0897                     	;# 
  3702  0898                     	;# 
  3703  0899                     	;# 
  3704  089A                     	;# 
  3705  089B                     	;# 
  3706  090C                     	;# 
  3707  090E                     	;# 
  3708  090F                     	;# 
  3709  091F                     	;# 
  3710  091F                     	;# 
  3711  098F                     	;# 
  3712  098F                     	;# 
  3713  0990                     	;# 
  3714  0991                     	;# 
  3715  0992                     	;# 
  3716  0993                     	;# 
  3717  0994                     	;# 
  3718  0995                     	;# 
  3719  0996                     	;# 
  3720  0997                     	;# 
  3721  0E0F                     	;# 
  3722  0E10                     	;# 
  3723  0E11                     	;# 
  3724  0E12                     	;# 
  3725  0E13                     	;# 
  3726  0E14                     	;# 
  3727  0E15                     	;# 
  3728  0E16                     	;# 
  3729  0E17                     	;# 
  3730  0E18                     	;# 
  3731  0E19                     	;# 
  3732  0E1A                     	;# 
  3733  0E1B                     	;# 
  3734  0E1C                     	;# 
  3735  0E1D                     	;# 
  3736  0E1E                     	;# 
  3737  0E1F                     	;# 
  3738  0E20                     	;# 
  3739  0E21                     	;# 
  3740  0E22                     	;# 
  3741  0E23                     	;# 
  3742  0E24                     	;# 
  3743  0E25                     	;# 
  3744  0E26                     	;# 
  3745  0E27                     	;# 
  3746  0E28                     	;# 
  3747  0E29                     	;# 
  3748  0E2A                     	;# 
  3749  0E2B                     	;# 
  3750  0E2C                     	;# 
  3751  0E2D                     	;# 
  3752  0E2E                     	;# 
  3753  0E2F                     	;# 
  3754  0E30                     	;# 
  3755  0E31                     	;# 
  3756  0E32                     	;# 
  3757  0E33                     	;# 
  3758  0E34                     	;# 
  3759  0E35                     	;# 
  3760  0E36                     	;# 
  3761  0E37                     	;# 
  3762  0E8F                     	;# 
  3763  0E90                     	;# 
  3764  0E91                     	;# 
  3765  0E92                     	;# 
  3766  0E93                     	;# 
  3767  0E94                     	;# 
  3768  0E95                     	;# 
  3769  0E96                     	;# 
  3770  0E97                     	;# 
  3771  0E9C                     	;# 
  3772  0E9D                     	;# 
  3773  0E9E                     	;# 
  3774  0EA1                     	;# 
  3775  0EA2                     	;# 
  3776  0EA3                     	;# 
  3777  0EA4                     	;# 
  3778  0EA5                     	;# 
  3779  0EA9                     	;# 
  3780  0EAA                     	;# 
  3781  0EAB                     	;# 
  3782  0EAC                     	;# 
  3783  0EB1                     	;# 
  3784  0EB2                     	;# 
  3785  0EB3                     	;# 
  3786  0EB8                     	;# 
  3787  0EB9                     	;# 
  3788  0EBA                     	;# 
  3789  0EBB                     	;# 
  3790  0EBC                     	;# 
  3791  0EBD                     	;# 
  3792  0EBE                     	;# 
  3793  0EC3                     	;# 
  3794  0EC5                     	;# 
  3795  0EC6                     	;# 
  3796  0EC7                     	;# 
  3797  0EC8                     	;# 
  3798  0EC9                     	;# 
  3799  0ECA                     	;# 
  3800  0ECB                     	;# 
  3801  0ECC                     	;# 
  3802  0F10                     	;# 
  3803  0F11                     	;# 
  3804  0F12                     	;# 
  3805  0F13                     	;# 
  3806  0F14                     	;# 
  3807  0F15                     	;# 
  3808  0F16                     	;# 
  3809  0F17                     	;# 
  3810  0F18                     	;# 
  3811  0F19                     	;# 
  3812  0F1A                     	;# 
  3813  0F1B                     	;# 
  3814  0F1C                     	;# 
  3815  0F1D                     	;# 
  3816  0F1E                     	;# 
  3817  0F1F                     	;# 
  3818  0F20                     	;# 
  3819  0F21                     	;# 
  3820  0F22                     	;# 
  3821  0F23                     	;# 
  3822  0F24                     	;# 
  3823  0F25                     	;# 
  3824  0F26                     	;# 
  3825  0F27                     	;# 
  3826  0F28                     	;# 
  3827  0F29                     	;# 
  3828  0F2A                     	;# 
  3829  0F2B                     	;# 
  3830  0F2C                     	;# 
  3831  0F2D                     	;# 
  3832  0F2E                     	;# 
  3833  0F2F                     	;# 
  3834  0F30                     	;# 
  3835  0F31                     	;# 
  3836  0F32                     	;# 
  3837  0F38                     	;# 
  3838  0F39                     	;# 
  3839  0F3A                     	;# 
  3840  0F3B                     	;# 
  3841  0F3C                     	;# 
  3842  0F3D                     	;# 
  3843  0F3E                     	;# 
  3844  0F3F                     	;# 
  3845  0F40                     	;# 
  3846  0F41                     	;# 
  3847  0F43                     	;# 
  3848  0F44                     	;# 
  3849  0F45                     	;# 
  3850  0F46                     	;# 
  3851  0F47                     	;# 
  3852  0F48                     	;# 
  3853  0F49                     	;# 
  3854  0F4A                     	;# 
  3855  0F4B                     	;# 
  3856  0F4C                     	;# 
  3857  0F4E                     	;# 
  3858  0F4F                     	;# 
  3859  0F50                     	;# 
  3860  0F51                     	;# 
  3861  0F52                     	;# 
  3862  0F53                     	;# 
  3863  0F54                     	;# 
  3864  0F55                     	;# 
  3865  0F56                     	;# 
  3866  0F57                     	;# 
  3867  0F59                     	;# 
  3868  0F5A                     	;# 
  3869  0F5B                     	;# 
  3870  0F5C                     	;# 
  3871  0F5D                     	;# 
  3872  0F61                     	;# 
  3873  0F62                     	;# 
  3874  0F64                     	;# 
  3875  0F65                     	;# 
  3876  0F66                     	;# 
  3877  0F67                     	;# 
  3878  0F68                     	;# 
  3879  0F69                     	;# 
  3880  0F6A                     	;# 
  3881  0F6B                     	;# 
  3882  0F6C                     	;# 
  3883  0F6D                     	;# 
  3884  0FE4                     	;# 
  3885  0FE5                     	;# 
  3886  0FE6                     	;# 
  3887  0FE7                     	;# 
  3888  0FE8                     	;# 
  3889  0FE9                     	;# 
  3890  0FEA                     	;# 
  3891  0FEB                     	;# 
  3892  0FED                     	;# 
  3893  0FEE                     	;# 
  3894  0FEF                     	;# 
  3895  0010                     _PORTEbits	set	16
  3896  000C                     _PORTAbits	set	12
  3897  000D                     _PORTBbits	set	13
  3898  0019                     _LATDbits	set	25
  3899  0018                     _LATCbits	set	24
  3900  001C                     _TMR0L	set	28
  3901  001D                     _TMR0H	set	29
  3902  001A                     _LATEbits	set	26
  3903  001F                     _T0CON1	set	31
  3904  001E                     _T0CON0	set	30
  3905  0015                     _TRISE	set	21
  3906  0014                     _TRISD	set	20
  3907  0013                     _TRISC	set	19
  3908  0012                     _TRISB	set	18
  3909  0011                     _TRISA	set	17
  3910  001A                     _LATE	set	26
  3911  0019                     _LATD	set	25
  3912  0018                     _LATC	set	24
  3913  0017                     _LATB	set	23
  3914  0016                     _LATA	set	22
  3915  000B                     _INTCON	set	11
  3916  009D                     _ADACQ	set	157
  3917  009C                     _ADPRE	set	156
  3918  009E                     _ADPCH	set	158
  3919  009A                     _ADREF	set	154
  3920  0098                     _ADCLK	set	152
  3921  0096                     _ADCON3	set	150
  3922  0095                     _ADCON2	set	149
  3923  0094                     _ADCON1	set	148
  3924  0093                     _ADCON0	set	147
  3925  010C                     _ADCNT	set	268
  3926  0190                     _SSP1CON1bits	set	400
  3927  0191                     _SSP1CON2bits	set	401
  3928  018F                     _SSP1STATbits	set	399
  3929  0192                     _SSP1CON3bits	set	402
  3930  018C                     _SSP1BUF	set	396
  3931  018D                     _SSP1ADD	set	397
  3932  0192                     _SSP1CON3	set	402
  3933  0191                     _SSP1CON2	set	401
  3934  0190                     _SSP1CON1	set	400
  3935  018F                     _SSP1STAT	set	399
  3936  0217                     _T3CLK	set	535
  3937  0215                     _T3GCON	set	533
  3938  0214                     _T3CON	set	532
  3939  028E                     _T2CONbits	set	654
  3940  028D                     _PR2	set	653
  3941  028E                     _T2CON	set	654
  3942  0290                     _T2CLKCON	set	656
  3943  031D                     _CCPR5H	set	797
  3944  0319                     _CCPR4H	set	793
  3945  0315                     _CCPR3H	set	789
  3946  0311                     _CCPR2H	set	785
  3947  030D                     _CCPR1H	set	781
  3948  031C                     _CCPR5L	set	796
  3949  0318                     _CCPR4L	set	792
  3950  0314                     _CCPR3L	set	788
  3951  0310                     _CCPR2L	set	784
  3952  030C                     _CCPR1L	set	780
  3953  031E                     _CCP5CON	set	798
  3954  031A                     _CCP4CON	set	794
  3955  0316                     _CCP3CON	set	790
  3956  0312                     _CCP2CON	set	786
  3957  030E                     _CCP1CON	set	782
  3958  0392                     _PWM7CONbits	set	914
  3959  038E                     _PWM6CONbits	set	910
  3960  0391                     _PWM7DCH	set	913
  3961  038D                     _PWM6DCH	set	909
  3962  0390                     _PWM7DCL	set	912
  3963  038C                     _PWM6DCL	set	908
  3964  0392                     _PWM7CON	set	914
  3965  038E                     _PWM6CON	set	910
  3966  0610                     _CWG1CON0bits	set	1552
  3967  060D                     _CWG1ISM	set	1549
  3968  060C                     _CWG1CLKCON	set	1548
  3969  060F                     _CWG1DBF	set	1551
  3970  060E                     _CWG1DBR	set	1550
  3971  0611                     _CWG1CON1	set	1553
  3972  0610                     _CWG1CON0	set	1552
  3973  0690                     _CWG3CON0bits	set	1680
  3974  068D                     _CWG3ISM	set	1677
  3975  068C                     _CWG3CLKCON	set	1676
  3976  068F                     _CWG3DBF	set	1679
  3977  068E                     _CWG3DBR	set	1678
  3978  0691                     _CWG3CON1	set	1681
  3979  0690                     _CWG3CON0	set	1680
  3980  070F                     _PIR3bits	set	1807
  3981  0710                     _PIR4bits	set	1808
  3982  0719                     _PIE3bits	set	1817
  3983  3878                     _SSP1IF	set	14456
  3984  0893                     _OSCFRQ	set	2195
  3985  088D                     _OSCCON1	set	2189
  3986  090C                     _FVRCON	set	2316
  3987  0E1A                     _CLC2CONbits	set	3610
  3988  0E23                     _CLC2GLS3	set	3619
  3989  0E22                     _CLC2GLS2	set	3618
  3990  0E21                     _CLC2GLS1	set	3617
  3991  0E20                     _CLC2GLS0	set	3616
  3992  0E1B                     _CLC2POL	set	3611
  3993  0E1D                     _CLC2SEL1	set	3613
  3994  0E1C                     _CLC2SEL0	set	3612
  3995  0E1A                     _CLC2CON	set	3610
  3996  0E10                     _CLC1CONbits	set	3600
  3997  0E19                     _CLC1GLS3	set	3609
  3998  0E18                     _CLC1GLS2	set	3608
  3999  0E17                     _CLC1GLS1	set	3607
  4000  0E16                     _CLC1GLS0	set	3606
  4001  0E11                     _CLC1POL	set	3601
  4002  0E13                     _CLC1SEL1	set	3603
  4003  0E12                     _CLC1SEL0	set	3602
  4004  0E10                     _CLC1CON	set	3600
  4005  0EC6                     _SSP1DATPPS	set	3782
  4006  0EC5                     _SSP1CLKPPS	set	3781
  4007  0F15                     _RA5PPS	set	3861
  4008  0F14                     _RA4PPS	set	3860
  4009  0F13                     _RA3PPS	set	3859
  4010  0F12                     _RA2PPS	set	3858
  4011  0F11                     _RA1PPS	set	3857
  4012  0F10                     _RA0PPS	set	3856
  4013  0F2B                     _RD3PPS	set	3883
  4014  0F2F                     _RD7PPS	set	3887
  4015  0F29                     _RD1PPS	set	3881
  4016  0F2D                     _RD5PPS	set	3885
  4017  0F2A                     _RD2PPS	set	3882
  4018  0F2E                     _RD6PPS	set	3886
  4019  0F28                     _RD0PPS	set	3880
  4020  0F2C                     _RD4PPS	set	3884
  4021  0F21                     _RC1PPS	set	3873
  4022  0F25                     _RC5PPS	set	3877
  4023  0F23                     _RC3PPS	set	3875
  4024  0F27                     _RC7PPS	set	3879
  4025  0F20                     _RC0PPS	set	3872
  4026  0F24                     _RC4PPS	set	3876
  4027  0F22                     _RC2PPS	set	3874
  4028  0F26                     _RC6PPS	set	3878
  4029  0F1F                     _RB7PPS	set	3871
  4030  0F1E                     _RB6PPS	set	3870
  4031  0F64                     _ANSELE	set	3940
  4032  0F59                     _ANSELD	set	3929
  4033  0F4E                     _ANSELC	set	3918
  4034  0F43                     _ANSELB	set	3907
  4035  0F38                     _ANSELA	set	3896
  4036  0F65                     _WPUE	set	3941
  4037  0F5A                     _WPUD	set	3930
  4038  0F4F                     _WPUC	set	3919
  4039  0F44                     _WPUB	set	3908
  4040  0F39                     _WPUA	set	3897
  4041  0F16                     _RA6PPS	set	3862
  4042  0F17                     _RA7PPS	set	3863
  4043  0F68                     _INLVLE	set	3944
  4044  0F47                     _INLVLB	set	3911
  4045  0F3C                     _INLVLA	set	3900
  4046                           
  4047                           ; #config settings
  4048  0000                     
  4049                           	psect	cinit
  4050  0012                     start_initialization:	
  4051  0012                     __initialization:	
  4052                           
  4053                           ; Clear objects allocated to BANK0
  4054  0012  304B               	movlw	low __pbssBANK0
  4055  0013  0084               	movwf	4
  4056  0014  3000               	movlw	high __pbssBANK0
  4057  0015  0085               	movwf	5
  4058  0016  301F               	movlw	31
  4059  0017  3187  27F7  3180   	fcall	clear_ram0
  4060  001A                     end_of_initialization:	
  4061                           ;End of C runtime variable initialization code
  4062                           
  4063  001A                     __end_of__initialization:	
  4064  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4065  001B  0020               	movlb	0
  4066  001C  318A  2A17         	ljmp	_main	;jump to C main() function
  4067                           
  4068                           	psect	bssBANK0
  4069  004B                     __pbssBANK0:	
  4070  004B                     _motorPWMArr:	
  4071  004B                     	ds	4
  4072  004F                     _motorDirArr:	
  4073  004F                     	ds	4
  4074  0053                     _drivePWM2:	
  4075  0053                     	ds	1
  4076  0054                     _drivePWM1:	
  4077  0054                     	ds	1
  4078  0055                     _driveDir:	
  4079  0055                     	ds	1
  4080  0056                     _i2c_val:	
  4081  0056                     	ds	1
  4082  0057                     _i2c_settings:	
  4083  0057                     	ds	1
  4084  0058                     _i2c_status:	
  4085  0058                     	ds	1
  4086  0059                     _props:	
  4087  0059                     	ds	17
  4088                           
  4089                           	psect	clrtext
  4090  07F7                     clear_ram0:	
  4091                           ;	Called with FSR0 containing the base address, and
  4092                           ;	WREG with the size to clear
  4093                           
  4094  07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
  4095  07F8                     clrloop0:	
  4096  07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
  4097  07F9  3101               	addfsr 0,1
  4098  07FA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4099  07FB  2FF8               	goto	clrloop0	;have we reached the end yet?
  4100  07FC  3400               	retlw	0	;all done for this memory range, return
  4101                           
  4102                           	psect	cstackBANK1
  4103  00A0                     __pcstackBANK1:	
  4104  00A0                     ??_updateMovement:	
  4105                           
  4106                           ; 1 bytes @ 0x0
  4107  00A0                     	ds	8
  4108  00A8                     updateSys@p:	
  4109                           
  4110                           ; 1 bytes @ 0x8
  4111  00A8                     	ds	1
  4112                           
  4113                           	psect	cstackCOMMON
  4114  0070                     __pcstackCOMMON:	
  4115  0070                     ?_handleWrite:	
  4116  0070                     ?_handleRead:	
  4117                           ; 1 bytes @ 0x0
  4118                           
  4119  0070                     ??_handleRead:	
  4120                           ; 1 bytes @ 0x0
  4121                           
  4122  0070                     ?_setRoutine:	
  4123                           ; 1 bytes @ 0x0
  4124                           
  4125  0070                     ?_revRoutine:	
  4126                           ; 1 bytes @ 0x0
  4127                           
  4128  0070                     ?_configureCPU:	
  4129                           ; 1 bytes @ 0x0
  4130                           
  4131  0070                     ?_configureIOs:	
  4132                           ; 1 bytes @ 0x0
  4133                           
  4134  0070                     ?_configureTimers:	
  4135                           ; 1 bytes @ 0x0
  4136                           
  4137  0070                     ?_configureI2C:	
  4138                           ; 1 bytes @ 0x0
  4139                           
  4140  0070                     ?_configurePWM:	
  4141                           ; 1 bytes @ 0x0
  4142                           
  4143  0070                     ?_i2cISR:	
  4144                           ; 1 bytes @ 0x0
  4145                           
  4146  0070                     ?_ISR:	
  4147                           ; 1 bytes @ 0x0
  4148                           
  4149  0070                     ?_main:	
  4150                           ; 1 bytes @ 0x0
  4151                           
  4152  0070                     ?i1_setPWM:	
  4153                           ; 1 bytes @ 0x0
  4154                           
  4155  0070                     ?i1___bmul:	
  4156                           ; 1 bytes @ 0x0
  4157                           
  4158  0070                     i1setPWM@pwm:	
  4159                           ; 1 bytes @ 0x0
  4160                           
  4161  0070                     i1___bmul@multiplicand:	
  4162                           ; 1 bytes @ 0x0
  4163                           
  4164                           
  4165                           ; 1 bytes @ 0x0
  4166  0070                     	ds	1
  4167  0071                     ??i1_setPWM:	
  4168  0071                     ??i1___bmul:	
  4169                           ; 1 bytes @ 0x1
  4170                           
  4171                           
  4172                           ; 1 bytes @ 0x1
  4173  0071                     	ds	1
  4174  0072                     i1___bmul@product:	
  4175                           
  4176                           ; 1 bytes @ 0x2
  4177  0072                     	ds	1
  4178  0073                     i1setPWM@module:	
  4179  0073                     i1___bmul@multiplier:	
  4180                           ; 1 bytes @ 0x3
  4181                           
  4182                           
  4183                           ; 1 bytes @ 0x3
  4184  0073                     	ds	1
  4185  0074                     i1_setPWM$1156:	
  4186                           
  4187                           ; 2 bytes @ 0x4
  4188  0074                     	ds	2
  4189  0076                     ?_setDrive2:	
  4190  0076                     ?_setDrive:	
  4191                           ; 1 bytes @ 0x6
  4192                           
  4193  0076                     ?i1_setMotors:	
  4194                           ; 1 bytes @ 0x6
  4195                           
  4196  0076                     setDrive@v:	
  4197                           ; 1 bytes @ 0x6
  4198                           
  4199  0076                     setDrive2@v:	
  4200                           ; 1 bytes @ 0x6
  4201                           
  4202  0076                     i1setMotors@dir:	
  4203                           ; 1 bytes @ 0x6
  4204                           
  4205                           
  4206                           ; 1 bytes @ 0x6
  4207  0076                     	ds	1
  4208  0077                     ??_setDrive:	
  4209  0077                     setDrive2@v2:	
  4210                           ; 1 bytes @ 0x7
  4211                           
  4212  0077                     i1setMotors@v:	
  4213                           ; 1 bytes @ 0x7
  4214                           
  4215                           
  4216                           ; 1 bytes @ 0x7
  4217  0077                     	ds	1
  4218  0078                     ??_setDrive2:	
  4219  0078                     ??i1_setMotors:	
  4220                           ; 1 bytes @ 0x8
  4221                           
  4222                           
  4223                           ; 1 bytes @ 0x8
  4224  0078                     	ds	1
  4225  0079                     setDrive@dir:	
  4226                           
  4227                           ; 1 bytes @ 0x9
  4228  0079                     	ds	1
  4229  007A                     setDrive2@dir:	
  4230  007A                     i1setMotors@motor:	
  4231                           ; 1 bytes @ 0xA
  4232                           
  4233                           
  4234                           ; 1 bytes @ 0xA
  4235  007A                     	ds	1
  4236  007B                     ??_setRoutine:	
  4237  007B                     ??_revRoutine:	
  4238                           ; 1 bytes @ 0xB
  4239                           
  4240                           
  4241                           ; 1 bytes @ 0xB
  4242  007B                     	ds	2
  4243  007D                     revRoutine@s:	
  4244                           
  4245                           ; 1 bytes @ 0xD
  4246  007D                     	ds	1
  4247  007E                     ??_ISR:	
  4248                           
  4249                           	psect	cstackBANK0
  4250  0020                     __pcstackBANK0:	
  4251                           ; 1 bytes @ 0xE
  4252                           
  4253  0020                     setRoutine@s:	
  4254                           
  4255                           ; 1 bytes @ 0x0
  4256  0020                     	ds	1
  4257  0021                     setRoutine@i:	
  4258                           
  4259                           ; 1 bytes @ 0x1
  4260  0021                     	ds	1
  4261  0022                     ?_setStatus:	
  4262  0022                     setStatus@v:	
  4263                           ; 1 bytes @ 0x2
  4264                           
  4265                           
  4266                           ; 1 bytes @ 0x2
  4267  0022                     	ds	1
  4268  0023                     setStatus@v2:	
  4269                           
  4270                           ; 2 bytes @ 0x3
  4271  0023                     	ds	2
  4272  0025                     ??_setStatus:	
  4273                           
  4274                           ; 1 bytes @ 0x5
  4275  0025                     	ds	2
  4276  0027                     setStatus@dir:	
  4277                           
  4278                           ; 1 bytes @ 0x7
  4279  0027                     	ds	1
  4280  0028                     setStatus@motor:	
  4281                           
  4282                           ; 1 bytes @ 0x8
  4283  0028                     	ds	1
  4284  0029                     setStatus@s:	
  4285                           
  4286                           ; 1 bytes @ 0x9
  4287  0029                     	ds	1
  4288  002A                     ??_handleWrite:	
  4289                           
  4290                           ; 1 bytes @ 0xA
  4291  002A                     	ds	3
  4292  002D                     handleWrite@d:	
  4293                           
  4294                           ; 1 bytes @ 0xD
  4295  002D                     	ds	1
  4296  002E                     ??_i2cISR:	
  4297                           
  4298                           ; 1 bytes @ 0xE
  4299  002E                     	ds	1
  4300  002F                     ?_updateTime:	
  4301  002F                     ?_testButtons:	
  4302                           ; 1 bytes @ 0xF
  4303                           
  4304  002F                     i2cISR@d:	
  4305                           ; 1 bytes @ 0xF
  4306                           
  4307                           
  4308                           ; 1 bytes @ 0xF
  4309  002F                     	ds	1
  4310  0030                     ??_updateTime:	
  4311  0030                     ??_testButtons:	
  4312                           ; 1 bytes @ 0x10
  4313                           
  4314  0030                     ?_setProps:	
  4315                           ; 1 bytes @ 0x10
  4316                           
  4317  0030                     ??_configureCPU:	
  4318                           ; 1 bytes @ 0x10
  4319                           
  4320  0030                     ??_configureIOs:	
  4321                           ; 1 bytes @ 0x10
  4322                           
  4323  0030                     ??_configureTimers:	
  4324                           ; 1 bytes @ 0x10
  4325                           
  4326  0030                     ??_configureI2C:	
  4327                           ; 1 bytes @ 0x10
  4328                           
  4329  0030                     ??_configurePWM:	
  4330                           ; 1 bytes @ 0x10
  4331                           
  4332  0030                     ?_setPWM:	
  4333                           ; 1 bytes @ 0x10
  4334                           
  4335  0030                     ?___bmul:	
  4336                           ; 1 bytes @ 0x10
  4337                           
  4338  0030                     setPWM@pwm:	
  4339                           ; 1 bytes @ 0x10
  4340                           
  4341  0030                     setProps@r:	
  4342                           ; 1 bytes @ 0x10
  4343                           
  4344  0030                     ___bmul@multiplicand:	
  4345                           ; 1 bytes @ 0x10
  4346                           
  4347                           
  4348                           ; 1 bytes @ 0x10
  4349  0030                     	ds	1
  4350  0031                     ??_setPWM:	
  4351  0031                     ??___bmul:	
  4352                           ; 1 bytes @ 0x11
  4353                           
  4354  0031                     setProps@c:	
  4355                           ; 1 bytes @ 0x11
  4356                           
  4357  0031                     testButtons@clamp:	
  4358                           ; 1 bytes @ 0x11
  4359                           
  4360                           
  4361                           ; 1 bytes @ 0x11
  4362  0031                     	ds	1
  4363  0032                     ??_setProps:	
  4364  0032                     testButtons@rotate:	
  4365                           ; 1 bytes @ 0x12
  4366                           
  4367  0032                     ___bmul@product:	
  4368                           ; 1 bytes @ 0x12
  4369                           
  4370                           
  4371                           ; 1 bytes @ 0x12
  4372  0032                     	ds	1
  4373  0033                     setPWM@module:	
  4374  0033                     testButtons@lift:	
  4375                           ; 1 bytes @ 0x13
  4376                           
  4377  0033                     ___bmul@multiplier:	
  4378                           ; 1 bytes @ 0x13
  4379                           
  4380                           
  4381                           ; 1 bytes @ 0x13
  4382  0033                     	ds	1
  4383  0034                     setProps@l:	
  4384  0034                     testButtons@p:	
  4385                           ; 1 bytes @ 0x14
  4386                           
  4387  0034                     _setPWM$1156:	
  4388                           ; 1 bytes @ 0x14
  4389                           
  4390                           
  4391                           ; 2 bytes @ 0x14
  4392  0034                     	ds	2
  4393  0036                     ?_setMotors:	
  4394  0036                     setMotors@dir:	
  4395                           ; 1 bytes @ 0x16
  4396                           
  4397                           
  4398                           ; 1 bytes @ 0x16
  4399  0036                     	ds	1
  4400  0037                     setMotors@v:	
  4401                           
  4402                           ; 1 bytes @ 0x17
  4403  0037                     	ds	1
  4404  0038                     ??_setMotors:	
  4405                           
  4406                           ; 1 bytes @ 0x18
  4407  0038                     	ds	2
  4408  003A                     ?_updateMovement:	
  4409  003A                     ?_updateMotors:	
  4410                           ; 1 bytes @ 0x1A
  4411                           
  4412  003A                     setMotors@motor:	
  4413                           ; 1 bytes @ 0x1A
  4414                           
  4415                           
  4416                           ; 1 bytes @ 0x1A
  4417  003A                     	ds	1
  4418  003B                     ??_updateMotors:	
  4419  003B                     updateMovement@s:	
  4420                           ; 1 bytes @ 0x1B
  4421                           
  4422                           
  4423                           ; 1 bytes @ 0x1B
  4424  003B                     	ds	1
  4425  003C                     updateMovement@clamp:	
  4426  003C                     updateTime@tPrev:	
  4427                           ; 1 bytes @ 0x1C
  4428                           
  4429                           
  4430                           ; 2 bytes @ 0x1C
  4431  003C                     	ds	1
  4432  003D                     updateMotors@clamp:	
  4433  003D                     updateMovement@rotate:	
  4434                           ; 1 bytes @ 0x1D
  4435                           
  4436                           
  4437                           ; 1 bytes @ 0x1D
  4438  003D                     	ds	1
  4439  003E                     updateMotors@rotate:	
  4440  003E                     updateMovement@lift:	
  4441                           ; 1 bytes @ 0x1E
  4442                           
  4443  003E                     updateTime@tNow:	
  4444                           ; 1 bytes @ 0x1E
  4445                           
  4446                           
  4447                           ; 2 bytes @ 0x1E
  4448  003E                     	ds	1
  4449  003F                     updateMotors@lift:	
  4450  003F                     updateMovement@p:	
  4451                           ; 1 bytes @ 0x1F
  4452                           
  4453                           
  4454                           ; 1 bytes @ 0x1F
  4455  003F                     	ds	1
  4456  0040                     updateMotors@p:	
  4457  0040                     updateTime@p:	
  4458                           ; 1 bytes @ 0x20
  4459                           
  4460                           
  4461                           ; 1 bytes @ 0x20
  4462  0040                     	ds	1
  4463  0041                     ??_updateSys:	
  4464  0041                     ??_main:	
  4465                           ; 1 bytes @ 0x21
  4466                           
  4467                           
  4468                           ; 1 bytes @ 0x21
  4469  0041                     	ds	10
  4470  004B                     ?_updateSys:	
  4471                           
  4472                           	psect	maintext
  4473  0A17                     __pmaintext:	
  4474                           ; 1 bytes @ 0x2B
  4475 ;;
  4476 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4477 ;;
  4478 ;; *************** function _main *****************
  4479 ;; Defined at:
  4480 ;;		line 61 in file "Main.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : B1F/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4498 ;;Total ram usage:        0 bytes
  4499 ;; Hardware stack levels required when called:   11
  4500 ;; This function calls:
  4501 ;;		_configureCPU
  4502 ;;		_configureI2C
  4503 ;;		_configureIOs
  4504 ;;		_configurePWM
  4505 ;;		_configureTimers
  4506 ;;		_updateSys
  4507 ;; This function is called by:
  4508 ;;		Startup code after reset
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           
  4513                           ;psect for function _main
  4514  0A17                     _main:	
  4515  0A17                     l4893:	
  4516                           ;incstack = 0
  4517                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4518                           
  4519                           
  4520                           ;Main.c: 62:     configureCPU();
  4521  0A17  3189  219C  318A   	fcall	_configureCPU
  4522                           
  4523                           ;Main.c: 63:     configureIOs();
  4524  0A1A  318A  2238  318A   	fcall	_configureIOs
  4525                           
  4526                           ;Main.c: 64:     configureTimers();
  4527  0A1D  3189  21A6  318A   	fcall	_configureTimers
  4528                           
  4529                           ;Main.c: 65:     configurePWM();
  4530  0A20  318C  2430  318A   	fcall	_configurePWM
  4531                           
  4532                           ;Main.c: 66:     configureI2C();
  4533  0A23  3189  21CB  318A   	fcall	_configureI2C
  4534  0A26                     l4895:	
  4535                           
  4536                           ;Main.c: 68:     TMR0H = 0;
  4537  0A26  0020               	movlb	0	; select bank0
  4538  0A27  019D               	clrf	29	;volatile
  4539  0A28                     l4897:	
  4540                           
  4541                           ;Main.c: 69:     TMR0L = 0;
  4542  0A28  019C               	clrf	28	;volatile
  4543  0A29                     l4899:	
  4544                           
  4545                           ;Main.c: 70:     props.time = 0;
  4546  0A29  3000               	movlw	0
  4547  0A2A  00E9               	movwf	_props+16
  4548  0A2B  3000               	movlw	0
  4549  0A2C  00E8               	movwf	_props+15
  4550  0A2D  3000               	movlw	0
  4551  0A2E  00E7               	movwf	_props+14
  4552  0A2F  3000               	movlw	0
  4553  0A30  00E6               	movwf	_props+13
  4554  0A31                     l4901:	
  4555                           
  4556                           ;Main.c: 73:         updateSys(&props);
  4557  0A31  3059               	movlw	(low (_props| 0))& (0+255)
  4558  0A32  3189  21F7  318A   	fcall	_updateSys
  4559  0A35  2A31               	goto	l4901
  4560  0A36  3180  2810         	ljmp	start
  4561  0A38                     __end_of_main:	
  4562                           
  4563                           	psect	text1
  4564  09F7                     __ptext1:	
  4565 ;; *************** function _updateSys *****************
  4566 ;; Defined at:
  4567 ;;		line 19 in file "updates.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  p               1    wreg     PTR struct properties
  4570 ;;		 -> props(17), 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  p               1    8[BANK1 ] PTR struct properties
  4573 ;;		 -> props(17), 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4584 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4586 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4587 ;;Total ram usage:        1 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:   10
  4590 ;; This function calls:
  4591 ;;		_testButtons
  4592 ;;		_updateMotors
  4593 ;;		_updateMovement
  4594 ;;		_updateTime
  4595 ;; This function is called by:
  4596 ;;		_main
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           
  4601                           ;psect for function _updateSys
  4602  09F7                     _updateSys:	
  4603                           
  4604                           ;incstack = 0
  4605                           ; Regs used in _updateSys: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4606                           ;updateSys@p stored from wreg
  4607  09F7  0021               	movlb	1	; select bank1
  4608  09F8  00A8               	movwf	updateSys@p^(0+128)
  4609  09F9                     l4883:	
  4610                           
  4611                           ;updates.c: 23:     updateTime(p);
  4612  09F9  0828               	movf	updateSys@p^(0+128),w
  4613  09FA  318D  2587  3189   	fcall	_updateTime
  4614                           
  4615                           ;updates.c: 24:     testButtons(p);
  4616  09FD  0021               	movlb	1	; select bank1
  4617  09FE  0828               	movf	updateSys@p^(0+128),w
  4618  09FF  318D  2502  3189   	fcall	_testButtons
  4619                           
  4620                           ;updates.c: 28:     updateTime(p);
  4621  0A02  0021               	movlb	1	; select bank1
  4622  0A03  0828               	movf	updateSys@p^(0+128),w
  4623  0A04  318D  2587  3189   	fcall	_updateTime
  4624  0A07                     l4885:	
  4625                           
  4626                           ;updates.c: 29:     updateMovement(p);
  4627  0A07  0021               	movlb	1	; select bank1
  4628  0A08  0828               	movf	updateSys@p^(0+128),w
  4629  0A09  3180  201E  3189   	fcall	_updateMovement
  4630  0A0C                     l4887:	
  4631                           
  4632                           ;updates.c: 32:     updateTime(p);
  4633  0A0C  0021               	movlb	1	; select bank1
  4634  0A0D  0828               	movf	updateSys@p^(0+128),w
  4635  0A0E  318D  2587  3189   	fcall	_updateTime
  4636                           
  4637                           ;updates.c: 33:     updateMotors(p);
  4638  0A11  0021               	movlb	1	; select bank1
  4639  0A12  0828               	movf	updateSys@p^(0+128),w
  4640  0A13  318E  26B0  3189   	fcall	_updateMotors
  4641  0A16                     l584:	
  4642  0A16  0008               	return
  4643  0A17                     __end_of_updateSys:	
  4644                           
  4645                           	psect	text2
  4646  0D87                     __ptext2:	
  4647 ;; *************** function _updateTime *****************
  4648 ;; Defined at:
  4649 ;;		line 270 in file "updates.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;  p               1    wreg     PTR struct properties
  4652 ;;		 -> props(17), 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  p               1   32[BANK0 ] PTR struct properties
  4655 ;;		 -> props(17), 
  4656 ;;  tNow            2   30[BANK0 ] unsigned int 
  4657 ;;  tPrev           2   28[BANK0 ] unsigned int 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      void 
  4660 ;; Registers used:
  4661 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4669 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;Total ram usage:       17 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    7
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_updateSys
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           
  4682                           ;psect for function _updateTime
  4683  0D87                     _updateTime:	
  4684                           
  4685                           ;incstack = 0
  4686                           ; Regs used in _updateTime: [wreg+fsr1l+fsr1h+status,2+status,0]
  4687                           ;updateTime@p stored from wreg
  4688  0D87  0020               	movlb	0	; select bank0
  4689  0D88  00C0               	movwf	updateTime@p
  4690  0D89                     l4443:	
  4691                           
  4692                           ;updates.c: 271:     unsigned int tPrev = p->time % 0x10000;
  4693  0D89  0840               	movf	updateTime@p,w
  4694  0D8A  3E0D               	addlw	13
  4695  0D8B  0086               	movwf	6
  4696  0D8C  0187               	clrf	7
  4697  0D8D  3F40               	moviw [0]fsr1
  4698  0D8E  00BC               	movwf	updateTime@tPrev
  4699  0D8F  3F41               	moviw [1]fsr1
  4700  0D90  00BD               	movwf	updateTime@tPrev+1
  4701  0D91                     l4445:	
  4702                           
  4703                           ;updates.c: 272:     unsigned int tNow = TMR0L;
  4704  0D91  081C               	movf	28,w	;volatile
  4705  0D92  00B0               	movwf	??_updateTime
  4706  0D93  01B1               	clrf	??_updateTime+1
  4707  0D94  0830               	movf	??_updateTime,w
  4708  0D95  00BE               	movwf	updateTime@tNow
  4709  0D96  0831               	movf	??_updateTime+1,w
  4710  0D97  00BF               	movwf	updateTime@tNow+1
  4711  0D98                     l4447:	
  4712                           
  4713                           ;updates.c: 273:     tNow += TMR0H<<8;
  4714  0D98  081D               	movf	29,w	;volatile
  4715  0D99  00B0               	movwf	??_updateTime
  4716  0D9A  01B1               	clrf	??_updateTime+1
  4717  0D9B  0830               	movf	??_updateTime,w
  4718  0D9C  00B1               	movwf	??_updateTime+1
  4719  0D9D  01B0               	clrf	??_updateTime
  4720  0D9E  0830               	movf	??_updateTime,w
  4721  0D9F  07BE               	addwf	updateTime@tNow,f
  4722  0DA0  0831               	movf	??_updateTime+1,w
  4723  0DA1  3DBF               	addwfc	updateTime@tNow+1,f
  4724  0DA2                     l4449:	
  4725                           
  4726                           ;updates.c: 274:     if(tNow >= tPrev){
  4727  0DA2  083D               	movf	updateTime@tPrev+1,w
  4728  0DA3  023F               	subwf	updateTime@tNow+1,w
  4729  0DA4  1D03               	skipz
  4730  0DA5  2DA8               	goto	u3955
  4731  0DA6  083C               	movf	updateTime@tPrev,w
  4732  0DA7  023E               	subwf	updateTime@tNow,w
  4733  0DA8                     u3955:	
  4734  0DA8  1C03               	skipc
  4735  0DA9  2DAB               	goto	u3951
  4736  0DAA  2DAC               	goto	u3950
  4737  0DAB                     u3951:	
  4738  0DAB  2DDA               	goto	l4453
  4739  0DAC                     u3950:	
  4740  0DAC                     l4451:	
  4741                           
  4742                           ;updates.c: 275:         p->time = (p->time & 0xFFFF0000) + tNow;
  4743  0DAC  083E               	movf	updateTime@tNow,w
  4744  0DAD  00B0               	movwf	??_updateTime
  4745  0DAE  083F               	movf	updateTime@tNow+1,w
  4746  0DAF  00B1               	movwf	??_updateTime+1
  4747  0DB0  01B2               	clrf	??_updateTime+2
  4748  0DB1  01B3               	clrf	??_updateTime+3
  4749  0DB2  0840               	movf	updateTime@p,w
  4750  0DB3  3E0D               	addlw	13
  4751  0DB4  0086               	movwf	6
  4752  0DB5  0187               	clrf	7
  4753  0DB6  3000               	movlw	0
  4754  0DB7  0501               	andwf	1,w
  4755  0DB8  00B4               	movwf	??_updateTime+4
  4756  0DB9  3141               	addfsr 1,1
  4757  0DBA  3000               	movlw	0
  4758  0DBB  0501               	andwf	1,w
  4759  0DBC  00B5               	movwf	??_updateTime+5
  4760  0DBD  3141               	addfsr 1,1
  4761  0DBE  30FF               	movlw	255
  4762  0DBF  0501               	andwf	1,w
  4763  0DC0  00B6               	movwf	??_updateTime+6
  4764  0DC1  3141               	addfsr 1,1
  4765  0DC2  30FF               	movlw	255
  4766  0DC3  0501               	andwf	1,w
  4767  0DC4  00B7               	movwf	??_updateTime+7
  4768  0DC5  0834               	movf	??_updateTime+4,w
  4769  0DC6  07B0               	addwf	??_updateTime,f
  4770  0DC7  0835               	movf	??_updateTime+5,w
  4771  0DC8  3DB1               	addwfc	??_updateTime+1,f
  4772  0DC9  0836               	movf	??_updateTime+6,w
  4773  0DCA  3DB2               	addwfc	??_updateTime+2,f
  4774  0DCB  0837               	movf	??_updateTime+7,w
  4775  0DCC  3DB3               	addwfc	??_updateTime+3,f
  4776  0DCD  0840               	movf	updateTime@p,w
  4777  0DCE  3E0D               	addlw	13
  4778  0DCF  0086               	movwf	6
  4779  0DD0  0187               	clrf	7
  4780  0DD1  0830               	movf	??_updateTime,w
  4781  0DD2  3FC0               	movwi [0]fsr1
  4782  0DD3  0831               	movf	??_updateTime+1,w
  4783  0DD4  3FC1               	movwi [1]fsr1
  4784  0DD5  0832               	movf	??_updateTime+2,w
  4785  0DD6  3FC2               	movwi [2]fsr1
  4786  0DD7  0833               	movf	??_updateTime+3,w
  4787  0DD8  3FC3               	movwi [3]fsr1
  4788                           
  4789                           ;updates.c: 276:     }else{
  4790  0DD9  2E17               	goto	l705
  4791  0DDA                     l4453:	
  4792                           
  4793                           ;updates.c: 277:         p->time = (p->time & 0xFFFF0000) + tNow + 0x10000;
  4794  0DDA  3000               	movlw	0
  4795  0DDB  00B0               	movwf	??_updateTime
  4796  0DDC  3000               	movlw	0
  4797  0DDD  00B1               	movwf	??_updateTime+1
  4798  0DDE  3001               	movlw	1
  4799  0DDF  00B2               	movwf	??_updateTime+2
  4800  0DE0  3000               	movlw	0
  4801  0DE1  00B3               	movwf	??_updateTime+3
  4802  0DE2  083E               	movf	updateTime@tNow,w
  4803  0DE3  00B4               	movwf	??_updateTime+4
  4804  0DE4  083F               	movf	updateTime@tNow+1,w
  4805  0DE5  00B5               	movwf	??_updateTime+5
  4806  0DE6  01B6               	clrf	??_updateTime+6
  4807  0DE7  01B7               	clrf	??_updateTime+7
  4808  0DE8  0840               	movf	updateTime@p,w
  4809  0DE9  3E0D               	addlw	13
  4810  0DEA  0086               	movwf	6
  4811  0DEB  0187               	clrf	7
  4812  0DEC  3000               	movlw	0
  4813  0DED  0501               	andwf	1,w
  4814  0DEE  00B8               	movwf	??_updateTime+8
  4815  0DEF  3141               	addfsr 1,1
  4816  0DF0  3000               	movlw	0
  4817  0DF1  0501               	andwf	1,w
  4818  0DF2  00B9               	movwf	??_updateTime+9
  4819  0DF3  3141               	addfsr 1,1
  4820  0DF4  30FF               	movlw	255
  4821  0DF5  0501               	andwf	1,w
  4822  0DF6  00BA               	movwf	??_updateTime+10
  4823  0DF7  3141               	addfsr 1,1
  4824  0DF8  30FF               	movlw	255
  4825  0DF9  0501               	andwf	1,w
  4826  0DFA  00BB               	movwf	??_updateTime+11
  4827  0DFB  0838               	movf	??_updateTime+8,w
  4828  0DFC  07B4               	addwf	??_updateTime+4,f
  4829  0DFD  0839               	movf	??_updateTime+9,w
  4830  0DFE  3DB5               	addwfc	??_updateTime+5,f
  4831  0DFF  083A               	movf	??_updateTime+10,w
  4832  0E00  3DB6               	addwfc	??_updateTime+6,f
  4833  0E01  083B               	movf	??_updateTime+11,w
  4834  0E02  3DB7               	addwfc	??_updateTime+7,f
  4835  0E03  0834               	movf	??_updateTime+4,w
  4836  0E04  07B0               	addwf	??_updateTime,f
  4837  0E05  0835               	movf	??_updateTime+5,w
  4838  0E06  3DB1               	addwfc	??_updateTime+1,f
  4839  0E07  0836               	movf	??_updateTime+6,w
  4840  0E08  3DB2               	addwfc	??_updateTime+2,f
  4841  0E09  0837               	movf	??_updateTime+7,w
  4842  0E0A  3DB3               	addwfc	??_updateTime+3,f
  4843  0E0B  0840               	movf	updateTime@p,w
  4844  0E0C  3E0D               	addlw	13
  4845  0E0D  0086               	movwf	6
  4846  0E0E  0187               	clrf	7
  4847  0E0F  0830               	movf	??_updateTime,w
  4848  0E10  3FC0               	movwi [0]fsr1
  4849  0E11  0831               	movf	??_updateTime+1,w
  4850  0E12  3FC1               	movwi [1]fsr1
  4851  0E13  0832               	movf	??_updateTime+2,w
  4852  0E14  3FC2               	movwi [2]fsr1
  4853  0E15  0833               	movf	??_updateTime+3,w
  4854  0E16  3FC3               	movwi [3]fsr1
  4855  0E17                     l705:	
  4856  0E17  0008               	return
  4857  0E18                     __end_of_updateTime:	
  4858                           
  4859                           	psect	text3
  4860  001E                     __ptext3:	
  4861 ;; *************** function _updateMovement *****************
  4862 ;; Defined at:
  4863 ;;		line 58 in file "updates.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  p               1    wreg     PTR struct properties
  4866 ;;		 -> props(17), 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  p               1   31[BANK0 ] PTR struct properties
  4869 ;;		 -> props(17), 
  4870 ;;  lift            1   30[BANK0 ] PTR unsigned char 
  4871 ;;		 -> props.claw1.height(1), 
  4872 ;;  rotate          1   29[BANK0 ] PTR unsigned char 
  4873 ;;		 -> props.claw1.orientation(1), 
  4874 ;;  clamp           1   28[BANK0 ] PTR unsigned char 
  4875 ;;		 -> props.claw1.clamped(1), 
  4876 ;;  s               1   27[BANK0 ] unsigned char 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4887 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4888 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4889 ;;      Totals:         0       5       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;Total ram usage:       13 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:    9
  4893 ;; This function calls:
  4894 ;;		_setMotors
  4895 ;;		_setProps
  4896 ;; This function is called by:
  4897 ;;		_updateSys
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           
  4902                           ;psect for function _updateMovement
  4903  001E                     _updateMovement:	
  4904                           
  4905                           ;incstack = 0
  4906                           ; Regs used in _updateMovement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4907                           ;updateMovement@p stored from wreg
  4908  001E  0020               	movlb	0	; select bank0
  4909  001F  00BF               	movwf	updateMovement@p
  4910  0020                     l4507:	
  4911                           
  4912                           ;updates.c: 59:     unsigned char *clamp = &(p->claw1.clamped);
  4913  0020  083F               	movf	updateMovement@p,w
  4914  0021  0021               	movlb	1	; select bank1
  4915  0022  00A0               	movwf	??_updateMovement^(0+128)
  4916  0023  0820               	movf	??_updateMovement^(0+128),w
  4917  0024  0020               	movlb	0	; select bank0
  4918  0025  00BC               	movwf	updateMovement@clamp
  4919  0026                     l4509:	
  4920                           
  4921                           ;updates.c: 60:     unsigned char *rotate = &(p->claw1.orientation);
  4922  0026  083F               	movf	updateMovement@p,w
  4923  0027  3E01               	addlw	1
  4924  0028  0021               	movlb	1	; select bank1
  4925  0029  00A0               	movwf	??_updateMovement^(0+128)
  4926  002A  0820               	movf	??_updateMovement^(0+128),w
  4927  002B  0020               	movlb	0	; select bank0
  4928  002C  00BD               	movwf	updateMovement@rotate
  4929  002D                     l4511:	
  4930                           
  4931                           ;updates.c: 61:     unsigned char *lift = &(p->claw1.height);
  4932  002D  083F               	movf	updateMovement@p,w
  4933  002E  3E02               	addlw	2
  4934  002F  0021               	movlb	1	; select bank1
  4935  0030  00A0               	movwf	??_updateMovement^(0+128)
  4936  0031  0820               	movf	??_updateMovement^(0+128),w
  4937  0032  0020               	movlb	0	; select bank0
  4938  0033  00BE               	movwf	updateMovement@lift
  4939  0034                     l4513:	
  4940                           
  4941                           ;updates.c: 64:     if(*clamp & 0b00100000)
  4942  0034  083C               	movf	updateMovement@clamp,w
  4943  0035  0086               	movwf	6
  4944  0036  0187               	clrf	7
  4945  0037  1E81               	btfss	1,5
  4946  0038  283A               	goto	u4031
  4947  0039  283B               	goto	u4030
  4948  003A                     u4031:	
  4949  003A  283F               	goto	l599
  4950  003B                     u4030:	
  4951  003B                     l4515:	
  4952                           
  4953                           ;updates.c: 65:         *clamp |= 0b01000000;
  4954  003B  083C               	movf	updateMovement@clamp,w
  4955  003C  0086               	movwf	6
  4956  003D  0187               	clrf	7
  4957  003E  1701               	bsf	1,6
  4958  003F                     l599:	
  4959                           
  4960                           ;updates.c: 66:     if(*rotate & 0b00100000)
  4961  003F  083D               	movf	updateMovement@rotate,w
  4962  0040  0086               	movwf	6
  4963  0041  0187               	clrf	7
  4964  0042  1E81               	btfss	1,5
  4965  0043  2845               	goto	u4041
  4966  0044  2846               	goto	u4040
  4967  0045                     u4041:	
  4968  0045  284A               	goto	l600
  4969  0046                     u4040:	
  4970  0046                     l4517:	
  4971                           
  4972                           ;updates.c: 67:         *rotate |= 0b01000000;
  4973  0046  083D               	movf	updateMovement@rotate,w
  4974  0047  0086               	movwf	6
  4975  0048  0187               	clrf	7
  4976  0049  1701               	bsf	1,6
  4977  004A                     l600:	
  4978                           
  4979                           ;updates.c: 68:     if(*lift & 0b00100000)
  4980  004A  083E               	movf	updateMovement@lift,w
  4981  004B  0086               	movwf	6
  4982  004C  0187               	clrf	7
  4983  004D  1E81               	btfss	1,5
  4984  004E  2850               	goto	u4051
  4985  004F  2851               	goto	u4050
  4986  0050                     u4051:	
  4987  0050  2855               	goto	l601
  4988  0051                     u4050:	
  4989  0051                     l4519:	
  4990                           
  4991                           ;updates.c: 69:         *lift |= 0b01000000;
  4992  0051  083E               	movf	updateMovement@lift,w
  4993  0052  0086               	movwf	6
  4994  0053  0187               	clrf	7
  4995  0054  1701               	bsf	1,6
  4996  0055                     l601:	
  4997                           
  4998                           ;updates.c: 71:     if(*clamp & 0b00010000)
  4999  0055  083C               	movf	updateMovement@clamp,w
  5000  0056  0086               	movwf	6
  5001  0057  0187               	clrf	7
  5002  0058  1E01               	btfss	1,4
  5003  0059  285B               	goto	u4061
  5004  005A  285C               	goto	u4060
  5005  005B                     u4061:	
  5006  005B  2866               	goto	l4523
  5007  005C                     u4060:	
  5008  005C                     l4521:	
  5009                           
  5010                           ;updates.c: 72:         *clamp &= 0b10111111;
  5011  005C  30BF               	movlw	191
  5012  005D  0021               	movlb	1	; select bank1
  5013  005E  00A0               	movwf	??_updateMovement^(0+128)
  5014  005F  0020               	movlb	0	; select bank0
  5015  0060  083C               	movf	updateMovement@clamp,w
  5016  0061  0086               	movwf	6
  5017  0062  0187               	clrf	7
  5018  0063  0021               	movlb	1	; select bank1
  5019  0064  0820               	movf	??_updateMovement^(0+128),w
  5020  0065  0581               	andwf	1,f
  5021  0066                     l4523:	
  5022                           
  5023                           ;updates.c: 73:     if(*rotate & 0b00010000)
  5024  0066  0020               	movlb	0	; select bank0
  5025  0067  083D               	movf	updateMovement@rotate,w
  5026  0068  0086               	movwf	6
  5027  0069  0187               	clrf	7
  5028  006A  1E01               	btfss	1,4
  5029  006B  286D               	goto	u4071
  5030  006C  286E               	goto	u4070
  5031  006D                     u4071:	
  5032  006D  2878               	goto	l4527
  5033  006E                     u4070:	
  5034  006E                     l4525:	
  5035                           
  5036                           ;updates.c: 74:         *rotate &= 0b10111111;
  5037  006E  30BF               	movlw	191
  5038  006F  0021               	movlb	1	; select bank1
  5039  0070  00A0               	movwf	??_updateMovement^(0+128)
  5040  0071  0020               	movlb	0	; select bank0
  5041  0072  083D               	movf	updateMovement@rotate,w
  5042  0073  0086               	movwf	6
  5043  0074  0187               	clrf	7
  5044  0075  0021               	movlb	1	; select bank1
  5045  0076  0820               	movf	??_updateMovement^(0+128),w
  5046  0077  0581               	andwf	1,f
  5047  0078                     l4527:	
  5048                           
  5049                           ;updates.c: 75:     if(*lift & 0b00010000)
  5050  0078  0020               	movlb	0	; select bank0
  5051  0079  083E               	movf	updateMovement@lift,w
  5052  007A  0086               	movwf	6
  5053  007B  0187               	clrf	7
  5054  007C  1E01               	btfss	1,4
  5055  007D  287F               	goto	u4081
  5056  007E  2880               	goto	u4080
  5057  007F                     u4081:	
  5058  007F  288A               	goto	l604
  5059  0080                     u4080:	
  5060  0080                     l4529:	
  5061                           
  5062                           ;updates.c: 76:         *lift &= 0b10111111;
  5063  0080  30BF               	movlw	191
  5064  0081  0021               	movlb	1	; select bank1
  5065  0082  00A0               	movwf	??_updateMovement^(0+128)
  5066  0083  0020               	movlb	0	; select bank0
  5067  0084  083E               	movf	updateMovement@lift,w
  5068  0085  0086               	movwf	6
  5069  0086  0187               	clrf	7
  5070  0087  0021               	movlb	1	; select bank1
  5071  0088  0820               	movf	??_updateMovement^(0+128),w
  5072  0089  0581               	andwf	1,f
  5073  008A                     l604:	
  5074                           
  5075                           ;updates.c: 79:     unsigned char s = p->claw1.routine & 0b1111;
  5076  008A  0020               	movlb	0	; select bank0
  5077  008B  083F               	movf	updateMovement@p,w
  5078  008C  3E03               	addlw	3
  5079  008D  0086               	movwf	6
  5080  008E  0187               	clrf	7
  5081  008F  0801               	movf	1,w
  5082  0090  390F               	andlw	15
  5083  0091  0021               	movlb	1	; select bank1
  5084  0092  00A0               	movwf	??_updateMovement^(0+128)
  5085  0093  0820               	movf	??_updateMovement^(0+128),w
  5086  0094  0020               	movlb	0	; select bank0
  5087  0095  00BB               	movwf	updateMovement@s
  5088  0096                     l4531:	
  5089                           
  5090                           ;updates.c: 80:     if(s){
  5091  0096  083B               	movf	updateMovement@s,w
  5092  0097  1903               	btfsc	3,2
  5093  0098  289A               	goto	u4091
  5094  0099  289B               	goto	u4090
  5095  009A                     u4091:	
  5096  009A  2B26               	goto	l4647
  5097  009B                     u4090:	
  5098  009B  2AFE               	goto	l4645
  5099  009C                     l4535:	
  5100                           
  5101                           ;updates.c: 85:                 if(*lift&0b10000){
  5102  009C  0020               	movlb	0	; select bank0
  5103  009D  083E               	movf	updateMovement@lift,w
  5104  009E  0086               	movwf	6
  5105  009F  0187               	clrf	7
  5106  00A0  1E01               	btfss	1,4
  5107  00A1  28A3               	goto	u4101
  5108  00A2  28A4               	goto	u4100
  5109  00A3                     u4101:	
  5110  00A3  28B1               	goto	l4541
  5111  00A4                     u4100:	
  5112  00A4                     l4537:	
  5113                           
  5114                           ;updates.c: 87:                     --p->claw1.routine;
  5115  00A4  083F               	movf	updateMovement@p,w
  5116  00A5  3E03               	addlw	3
  5117  00A6  0086               	movwf	6
  5118  00A7  0187               	clrf	7
  5119  00A8  3001               	movlw	1
  5120  00A9  0281               	subwf	1,f
  5121  00AA                     l4539:	
  5122                           
  5123                           ;updates.c: 88:                     setProps(0,0,0);
  5124  00AA  01B0               	clrf	setProps@r
  5125  00AB  01B1               	clrf	setProps@c
  5126  00AC  3000               	movlw	0
  5127  00AD  318A  22EC  3180   	fcall	_setProps
  5128                           
  5129                           ;updates.c: 89:                 }
  5130  00B0  2B26               	goto	l4647
  5131  00B1                     l4541:	
  5132                           
  5133                           ;updates.c: 91:                     setProps(0b10,0b00,0b00);
  5134  00B1  01B0               	clrf	setProps@r
  5135  00B2  01B1               	clrf	setProps@c
  5136  00B3  3002               	movlw	2
  5137  00B4  318A  22EC  3180   	fcall	_setProps
  5138  00B7  2B26               	goto	l4647
  5139  00B8                     l4543:	
  5140                           
  5141                           ;updates.c: 97:                         if(p->time-p->claw1.time1 > 500)
  5142  00B8  0020               	movlb	0	; select bank0
  5143  00B9  083F               	movf	updateMovement@p,w
  5144  00BA  3E04               	addlw	4
  5145  00BB  0086               	movwf	6
  5146  00BC  0187               	clrf	7
  5147  00BD  3F40               	moviw [0]fsr1
  5148  00BE  0021               	movlb	1	; select bank1
  5149  00BF  00A0               	movwf	??_updateMovement^(0+128)
  5150  00C0  3F41               	moviw [1]fsr1
  5151  00C1  00A1               	movwf	(??_updateMovement^(0+128)+1)
  5152  00C2  3F42               	moviw [2]fsr1
  5153  00C3  00A2               	movwf	(??_updateMovement^(0+128)+2)
  5154  00C4  3F43               	moviw [3]fsr1
  5155  00C5  00A3               	movwf	(??_updateMovement^(0+128)+3)
  5156  00C6  0020               	movlb	0	; select bank0
  5157  00C7  083F               	movf	updateMovement@p,w
  5158  00C8  3E0D               	addlw	13
  5159  00C9  0086               	movwf	6
  5160  00CA  0187               	clrf	7
  5161  00CB  3F40               	moviw [0]fsr1
  5162  00CC  0021               	movlb	1	; select bank1
  5163  00CD  00A4               	movwf	(??_updateMovement+4)^(0+128)
  5164  00CE  3F41               	moviw [1]fsr1
  5165  00CF  00A5               	movwf	((??_updateMovement+4)^(0+128)+1)
  5166  00D0  3F42               	moviw [2]fsr1
  5167  00D1  00A6               	movwf	((??_updateMovement+4)^(0+128)+2)
  5168  00D2  3F43               	moviw [3]fsr1
  5169  00D3  00A7               	movwf	((??_updateMovement+4)^(0+128)+3)
  5170  00D4  0820               	movf	??_updateMovement^(0+128),w
  5171  00D5  02A4               	subwf	(??_updateMovement+4)^(0+128),f
  5172  00D6  0821               	movf	(??_updateMovement+1)^(0+128),w
  5173  00D7  3BA5               	subwfb	((??_updateMovement+4)^(0+128)+1),f
  5174  00D8  0822               	movf	(??_updateMovement+2)^(0+128),w
  5175  00D9  3BA6               	subwfb	((??_updateMovement+4)^(0+128)+2),f
  5176  00DA  0823               	movf	(??_updateMovement+3)^(0+128),w
  5177  00DB  3BA7               	subwfb	((??_updateMovement+4)^(0+128)+3),f
  5178  00DC  0827               	movf	((??_updateMovement+4)^(0+128)+3),w
  5179  00DD  1D03               	btfss	3,2
  5180  00DE  28EA               	goto	u4110
  5181  00DF  0826               	movf	((??_updateMovement+4)^(0+128)+2),w
  5182  00E0  1D03               	btfss	3,2
  5183  00E1  28EA               	goto	u4110
  5184  00E2  30F5               	movlw	245
  5185  00E3  0224               	subwf	(??_updateMovement+4)^(0+128),w
  5186  00E4  3001               	movlw	1
  5187  00E5  3B25               	subwfb	((??_updateMovement+4)^(0+128)+1),w
  5188  00E6  1C03               	btfss	3,0
  5189  00E7  28E9               	goto	u4111
  5190  00E8  28EA               	goto	u4110
  5191  00E9                     u4111:	
  5192  00E9  28F2               	goto	l4547
  5193  00EA                     u4110:	
  5194  00EA                     l4545:	
  5195                           
  5196                           ;updates.c: 98:                             --p->claw1.routine;
  5197  00EA  0020               	movlb	0	; select bank0
  5198  00EB  083F               	movf	updateMovement@p,w
  5199  00EC  3E03               	addlw	3
  5200  00ED  0086               	movwf	6
  5201  00EE  0187               	clrf	7
  5202  00EF  3001               	movlw	1
  5203  00F0  0281               	subwf	1,f
  5204  00F1  2B26               	goto	l4647
  5205  00F2                     l4547:	
  5206                           
  5207                           ;updates.c: 100:                             setProps(0b10,0b00,0b00);
  5208  00F2  0020               	movlb	0	; select bank0
  5209  00F3  01B0               	clrf	setProps@r
  5210  00F4  01B1               	clrf	setProps@c
  5211  00F5  3002               	movlw	2
  5212  00F6  318A  22EC  3180   	fcall	_setProps
  5213  00F9  2B26               	goto	l4647
  5214  00FA                     l4549:	
  5215                           
  5216                           ;updates.c: 104:                         if(p->time-p->claw1.time1 > 1000)
  5217  00FA  0020               	movlb	0	; select bank0
  5218  00FB  083F               	movf	updateMovement@p,w
  5219  00FC  3E04               	addlw	4
  5220  00FD  0086               	movwf	6
  5221  00FE  0187               	clrf	7
  5222  00FF  3F40               	moviw [0]fsr1
  5223  0100  0021               	movlb	1	; select bank1
  5224  0101  00A0               	movwf	??_updateMovement^(0+128)
  5225  0102  3F41               	moviw [1]fsr1
  5226  0103  00A1               	movwf	(??_updateMovement^(0+128)+1)
  5227  0104  3F42               	moviw [2]fsr1
  5228  0105  00A2               	movwf	(??_updateMovement^(0+128)+2)
  5229  0106  3F43               	moviw [3]fsr1
  5230  0107  00A3               	movwf	(??_updateMovement^(0+128)+3)
  5231  0108  0020               	movlb	0	; select bank0
  5232  0109  083F               	movf	updateMovement@p,w
  5233  010A  3E0D               	addlw	13
  5234  010B  0086               	movwf	6
  5235  010C  0187               	clrf	7
  5236  010D  3F40               	moviw [0]fsr1
  5237  010E  0021               	movlb	1	; select bank1
  5238  010F  00A4               	movwf	(??_updateMovement+4)^(0+128)
  5239  0110  3F41               	moviw [1]fsr1
  5240  0111  00A5               	movwf	((??_updateMovement+4)^(0+128)+1)
  5241  0112  3F42               	moviw [2]fsr1
  5242  0113  00A6               	movwf	((??_updateMovement+4)^(0+128)+2)
  5243  0114  3F43               	moviw [3]fsr1
  5244  0115  00A7               	movwf	((??_updateMovement+4)^(0+128)+3)
  5245  0116  0820               	movf	??_updateMovement^(0+128),w
  5246  0117  02A4               	subwf	(??_updateMovement+4)^(0+128),f
  5247  0118  0821               	movf	(??_updateMovement+1)^(0+128),w
  5248  0119  3BA5               	subwfb	((??_updateMovement+4)^(0+128)+1),f
  5249  011A  0822               	movf	(??_updateMovement+2)^(0+128),w
  5250  011B  3BA6               	subwfb	((??_updateMovement+4)^(0+128)+2),f
  5251  011C  0823               	movf	(??_updateMovement+3)^(0+128),w
  5252  011D  3BA7               	subwfb	((??_updateMovement+4)^(0+128)+3),f
  5253  011E  0827               	movf	((??_updateMovement+4)^(0+128)+3),w
  5254  011F  1D03               	btfss	3,2
  5255  0120  292C               	goto	u4120
  5256  0121  0826               	movf	((??_updateMovement+4)^(0+128)+2),w
  5257  0122  1D03               	btfss	3,2
  5258  0123  292C               	goto	u4120
  5259  0124  30E9               	movlw	233
  5260  0125  0224               	subwf	(??_updateMovement+4)^(0+128),w
  5261  0126  3003               	movlw	3
  5262  0127  3B25               	subwfb	((??_updateMovement+4)^(0+128)+1),w
  5263  0128  1C03               	btfss	3,0
  5264  0129  292B               	goto	u4121
  5265  012A  292C               	goto	u4120
  5266  012B                     u4121:	
  5267  012B  2934               	goto	l4553
  5268  012C                     u4120:	
  5269  012C                     l4551:	
  5270                           
  5271                           ;updates.c: 105:                             --p->claw1.routine;
  5272  012C  0020               	movlb	0	; select bank0
  5273  012D  083F               	movf	updateMovement@p,w
  5274  012E  3E03               	addlw	3
  5275  012F  0086               	movwf	6
  5276  0130  0187               	clrf	7
  5277  0131  3001               	movlw	1
  5278  0132  0281               	subwf	1,f
  5279  0133  2B26               	goto	l4647
  5280  0134                     l4553:	
  5281  0134  0020               	movlb	0	; select bank0
  5282  0135  083D               	movf	updateMovement@rotate,w
  5283  0136  0086               	movwf	6
  5284  0137  0187               	clrf	7
  5285  0138  1E01               	btfss	1,4
  5286  0139  293B               	goto	u4131
  5287  013A  293C               	goto	u4130
  5288  013B                     u4131:	
  5289  013B  2943               	goto	l4557
  5290  013C                     u4130:	
  5291  013C                     l4555:	
  5292                           
  5293                           ;updates.c: 107:                             p->claw1.routine -= 2;
  5294  013C  083F               	movf	updateMovement@p,w
  5295  013D  3E03               	addlw	3
  5296  013E  0086               	movwf	6
  5297  013F  0187               	clrf	7
  5298  0140  3002               	movlw	2
  5299  0141  0281               	subwf	1,f
  5300  0142  2B26               	goto	l4647
  5301  0143                     l4557:	
  5302                           
  5303                           ;updates.c: 109:                             setProps(0b10,0b10,0b00);
  5304  0143  3002               	movlw	2
  5305  0144  0021               	movlb	1	; select bank1
  5306  0145  00A0               	movwf	??_updateMovement^(0+128)
  5307  0146  0820               	movf	??_updateMovement^(0+128),w
  5308  0147  0020               	movlb	0	; select bank0
  5309  0148  00B0               	movwf	setProps@r
  5310  0149  01B1               	clrf	setProps@c
  5311  014A  3002               	movlw	2
  5312  014B  318A  22EC  3180   	fcall	_setProps
  5313  014E  2B26               	goto	l4647
  5314  014F                     l4559:	
  5315                           
  5316                           ;updates.c: 113:                         if(*rotate & 0x10)
  5317  014F  0020               	movlb	0	; select bank0
  5318  0150  083D               	movf	updateMovement@rotate,w
  5319  0151  0086               	movwf	6
  5320  0152  0187               	clrf	7
  5321  0153  1E01               	btfss	1,4
  5322  0154  2956               	goto	u4141
  5323  0155  2957               	goto	u4140
  5324  0156                     u4141:	
  5325  0156  295E               	goto	l4563
  5326  0157                     u4140:	
  5327  0157                     l4561:	
  5328                           
  5329                           ;updates.c: 114:                             --p->claw1.routine;
  5330  0157  083F               	movf	updateMovement@p,w
  5331  0158  3E03               	addlw	3
  5332  0159  0086               	movwf	6
  5333  015A  0187               	clrf	7
  5334  015B  3001               	movlw	1
  5335  015C  0281               	subwf	1,f
  5336  015D  2B26               	goto	l4647
  5337  015E                     l4563:	
  5338                           
  5339                           ;updates.c: 116:                             setProps(0b00,0b10,0b00);
  5340  015E  3002               	movlw	2
  5341  015F  0021               	movlb	1	; select bank1
  5342  0160  00A0               	movwf	??_updateMovement^(0+128)
  5343  0161  0820               	movf	??_updateMovement^(0+128),w
  5344  0162  0020               	movlb	0	; select bank0
  5345  0163  00B0               	movwf	setProps@r
  5346  0164  01B1               	clrf	setProps@c
  5347  0165  3000               	movlw	0
  5348  0166  318A  22EC  3180   	fcall	_setProps
  5349  0169  2B26               	goto	l4647
  5350  016A                     l4565:	
  5351                           
  5352                           ;updates.c: 120:                         if(*lift & 0x10){
  5353  016A  0020               	movlb	0	; select bank0
  5354  016B  083E               	movf	updateMovement@lift,w
  5355  016C  0086               	movwf	6
  5356  016D  0187               	clrf	7
  5357  016E  1E01               	btfss	1,4
  5358  016F  2971               	goto	u4151
  5359  0170  2972               	goto	u4150
  5360  0171                     u4151:	
  5361  0171  297F               	goto	l4571
  5362  0172                     u4150:	
  5363  0172                     l4567:	
  5364                           
  5365                           ;updates.c: 121:                             --p->claw1.routine;
  5366  0172  083F               	movf	updateMovement@p,w
  5367  0173  3E03               	addlw	3
  5368  0174  0086               	movwf	6
  5369  0175  0187               	clrf	7
  5370  0176  3001               	movlw	1
  5371  0177  0281               	subwf	1,f
  5372  0178                     l4569:	
  5373                           
  5374                           ;updates.c: 122:                             setProps(0b00,0b00,0b00);
  5375  0178  01B0               	clrf	setProps@r
  5376  0179  01B1               	clrf	setProps@c
  5377  017A  3000               	movlw	0
  5378  017B  318A  22EC  3180   	fcall	_setProps
  5379                           
  5380                           ;updates.c: 123:                         }else
  5381  017E  2B26               	goto	l4647
  5382  017F                     l4571:	
  5383                           
  5384                           ;updates.c: 124:                             setProps(0b10,0b00,0b00);
  5385  017F  01B0               	clrf	setProps@r
  5386  0180  01B1               	clrf	setProps@c
  5387  0181  3002               	movlw	2
  5388  0182  318A  22EC  3180   	fcall	_setProps
  5389  0185  2B26               	goto	l4647
  5390  0186                     l4575:	
  5391  0186  0020               	movlb	0	; select bank0
  5392  0187  083B               	movf	updateMovement@s,w
  5393  0188  0021               	movlb	1	; select bank1
  5394  0189  00A0               	movwf	??_updateMovement^(0+128)
  5395  018A  01A1               	clrf	(??_updateMovement^(0+128)+1)
  5396                           
  5397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5398                           ; Switch size 1, requested type "simple"
  5399                           ; Number of cases is 1, Range of values is 0 to 0
  5400                           ; switch strategies available:
  5401                           ; Name         Instructions Cycles
  5402                           ; simple_byte            4     3 (average)
  5403                           ; direct_byte            8     6 (fixed)
  5404                           ; jumptable            260     6 (fixed)
  5405                           ;	Chosen strategy is simple_byte
  5406  018B  0821               	movf	(??_updateMovement+1)^(0+128),w
  5407  018C  3A00               	xorlw	0	; case 0
  5408  018D  1903               	skipnz
  5409  018E  2990               	goto	l5153
  5410  018F  2B26               	goto	l4647
  5411  0190                     l5153:	
  5412                           
  5413                           ; Switch size 1, requested type "simple"
  5414                           ; Number of cases is 4, Range of values is 1 to 4
  5415                           ; switch strategies available:
  5416                           ; Name         Instructions Cycles
  5417                           ; simple_byte           13     7 (average)
  5418                           ; direct_byte           17     9 (fixed)
  5419                           ; jumptable            263     9 (fixed)
  5420                           ;	Chosen strategy is simple_byte
  5421  0190  0820               	movf	??_updateMovement^(0+128),w
  5422  0191  3A01               	xorlw	1	; case 1
  5423  0192  1903               	skipnz
  5424  0193  296A               	goto	l4565
  5425  0194  3A03               	xorlw	3	; case 2
  5426  0195  1903               	skipnz
  5427  0196  294F               	goto	l4559
  5428  0197  3A01               	xorlw	1	; case 3
  5429  0198  1903               	skipnz
  5430  0199  28FA               	goto	l4549
  5431  019A  3A07               	xorlw	7	; case 4
  5432  019B  1903               	skipnz
  5433  019C  28B8               	goto	l4543
  5434  019D  2B26               	goto	l4647
  5435  019E                     l4577:	
  5436                           
  5437                           ;updates.c: 129:                 if(*clamp&0b100000){
  5438  019E  0020               	movlb	0	; select bank0
  5439  019F  083C               	movf	updateMovement@clamp,w
  5440  01A0  0086               	movwf	6
  5441  01A1  0187               	clrf	7
  5442  01A2  1E81               	btfss	1,5
  5443  01A3  29A5               	goto	u4161
  5444  01A4  29A6               	goto	u4160
  5445  01A5                     u4161:	
  5446  01A5  29B3               	goto	l4583
  5447  01A6                     u4160:	
  5448  01A6                     l4579:	
  5449                           
  5450                           ;updates.c: 130:                     --p->claw1.routine;
  5451  01A6  083F               	movf	updateMovement@p,w
  5452  01A7  3E03               	addlw	3
  5453  01A8  0086               	movwf	6
  5454  01A9  0187               	clrf	7
  5455  01AA  3001               	movlw	1
  5456  01AB  0281               	subwf	1,f
  5457  01AC                     l4581:	
  5458                           
  5459                           ;updates.c: 131:                     setProps(0b00,0b00,0b00);
  5460  01AC  01B0               	clrf	setProps@r
  5461  01AD  01B1               	clrf	setProps@c
  5462  01AE  3000               	movlw	0
  5463  01AF  318A  22EC  3180   	fcall	_setProps
  5464                           
  5465                           ;updates.c: 132:                 }else
  5466  01B2  2B26               	goto	l4647
  5467  01B3                     l4583:	
  5468                           
  5469                           ;updates.c: 133:                     setProps(0b00,0b00,0b11);
  5470  01B3  01B0               	clrf	setProps@r
  5471  01B4  3003               	movlw	3
  5472  01B5  0021               	movlb	1	; select bank1
  5473  01B6  00A0               	movwf	??_updateMovement^(0+128)
  5474  01B7  0820               	movf	??_updateMovement^(0+128),w
  5475  01B8  0020               	movlb	0	; select bank0
  5476  01B9  00B1               	movwf	setProps@c
  5477  01BA  3000               	movlw	0
  5478  01BB  318A  22EC  3180   	fcall	_setProps
  5479  01BE  2B26               	goto	l4647
  5480  01BF                     l4585:	
  5481                           
  5482                           ;updates.c: 136:                 if(*lift&0b10000){
  5483  01BF  0020               	movlb	0	; select bank0
  5484  01C0  083E               	movf	updateMovement@lift,w
  5485  01C1  0086               	movwf	6
  5486  01C2  0187               	clrf	7
  5487  01C3  1E01               	btfss	1,4
  5488  01C4  29C6               	goto	u4171
  5489  01C5  29C7               	goto	u4170
  5490  01C6                     u4171:	
  5491  01C6  29D4               	goto	l4591
  5492  01C7                     u4170:	
  5493  01C7                     l4587:	
  5494                           
  5495                           ;updates.c: 137:                     --p->claw1.routine;
  5496  01C7  083F               	movf	updateMovement@p,w
  5497  01C8  3E03               	addlw	3
  5498  01C9  0086               	movwf	6
  5499  01CA  0187               	clrf	7
  5500  01CB  3001               	movlw	1
  5501  01CC  0281               	subwf	1,f
  5502  01CD                     l4589:	
  5503                           
  5504                           ;updates.c: 138:                     setProps(0b00,0b00,0b00);
  5505  01CD  01B0               	clrf	setProps@r
  5506  01CE  01B1               	clrf	setProps@c
  5507  01CF  3000               	movlw	0
  5508  01D0  318A  22EC  3180   	fcall	_setProps
  5509                           
  5510                           ;updates.c: 139:                 }else
  5511  01D3  2B26               	goto	l4647
  5512  01D4                     l4591:	
  5513                           
  5514                           ;updates.c: 140:                     setProps(0b00,0b00,0b10);
  5515  01D4  01B0               	clrf	setProps@r
  5516  01D5  3002               	movlw	2
  5517  01D6  0021               	movlb	1	; select bank1
  5518  01D7  00A0               	movwf	??_updateMovement^(0+128)
  5519  01D8  0820               	movf	??_updateMovement^(0+128),w
  5520  01D9  0020               	movlb	0	; select bank0
  5521  01DA  00B1               	movwf	setProps@c
  5522  01DB  3000               	movlw	0
  5523  01DC  318A  22EC  3180   	fcall	_setProps
  5524  01DF  2B26               	goto	l4647
  5525  01E0                     l4593:	
  5526                           
  5527                           ;updates.c: 143:                 if(s==2){
  5528  01E0  3002               	movlw	2
  5529  01E1  0020               	movlb	0	; select bank0
  5530  01E2  063B               	xorwf	updateMovement@s,w
  5531  01E3  1D03               	btfss	3,2
  5532  01E4  29E6               	goto	u4181
  5533  01E5  29E7               	goto	u4180
  5534  01E6                     u4181:	
  5535  01E6  2A08               	goto	l4603
  5536  01E7                     u4180:	
  5537  01E7                     l4595:	
  5538                           
  5539                           ;updates.c: 144:                     if(*rotate & 0x20 || *lift & 0x20)
  5540  01E7  083D               	movf	updateMovement@rotate,w
  5541  01E8  0086               	movwf	6
  5542  01E9  0187               	clrf	7
  5543  01EA  1A81               	btfsc	1,5
  5544  01EB  29ED               	goto	u4191
  5545  01EC  29EE               	goto	u4190
  5546  01ED                     u4191:	
  5547  01ED  29F5               	goto	l4599
  5548  01EE                     u4190:	
  5549  01EE                     l4597:	
  5550  01EE  083E               	movf	updateMovement@lift,w
  5551  01EF  0086               	movwf	6
  5552  01F0  0187               	clrf	7
  5553  01F1  1E81               	btfss	1,5
  5554  01F2  29F4               	goto	u4201
  5555  01F3  29F5               	goto	u4200
  5556  01F4                     u4201:	
  5557  01F4  29FC               	goto	l4601
  5558  01F5                     u4200:	
  5559  01F5                     l4599:	
  5560                           
  5561                           ;updates.c: 145:                         --p->claw1.routine;
  5562  01F5  083F               	movf	updateMovement@p,w
  5563  01F6  3E03               	addlw	3
  5564  01F7  0086               	movwf	6
  5565  01F8  0187               	clrf	7
  5566  01F9  3001               	movlw	1
  5567  01FA  0281               	subwf	1,f
  5568  01FB  2B26               	goto	l4647
  5569  01FC                     l4601:	
  5570                           
  5571                           ;updates.c: 147:                         setProps(0b11,0b11,0);
  5572  01FC  3003               	movlw	3
  5573  01FD  0021               	movlb	1	; select bank1
  5574  01FE  00A0               	movwf	??_updateMovement^(0+128)
  5575  01FF  0820               	movf	??_updateMovement^(0+128),w
  5576  0200  0020               	movlb	0	; select bank0
  5577  0201  00B0               	movwf	setProps@r
  5578  0202  01B1               	clrf	setProps@c
  5579  0203  3003               	movlw	3
  5580  0204  318A  22EC  3180   	fcall	_setProps
  5581  0207  2B26               	goto	l4647
  5582  0208                     l4603:	
  5583  0208  033B               	decf	updateMovement@s,w
  5584  0209  1D03               	btfss	3,2
  5585  020A  2A0C               	goto	u4211
  5586  020B  2A0D               	goto	u4210
  5587  020C                     u4211:	
  5588  020C  2B26               	goto	l610
  5589  020D                     u4210:	
  5590  020D                     l4605:	
  5591                           
  5592                           ;updates.c: 149:                     if(*lift &0x20){
  5593  020D  083E               	movf	updateMovement@lift,w
  5594  020E  0086               	movwf	6
  5595  020F  0187               	clrf	7
  5596  0210  1E81               	btfss	1,5
  5597  0211  2A13               	goto	u4221
  5598  0212  2A14               	goto	u4220
  5599  0213                     u4221:	
  5600  0213  2A21               	goto	l4611
  5601  0214                     u4220:	
  5602  0214                     l4607:	
  5603                           
  5604                           ;updates.c: 150:                         --p->claw1.routine;
  5605  0214  083F               	movf	updateMovement@p,w
  5606  0215  3E03               	addlw	3
  5607  0216  0086               	movwf	6
  5608  0217  0187               	clrf	7
  5609  0218  3001               	movlw	1
  5610  0219  0281               	subwf	1,f
  5611  021A                     l4609:	
  5612                           
  5613                           ;updates.c: 151:                         setProps(0,0,0);
  5614  021A  01B0               	clrf	setProps@r
  5615  021B  01B1               	clrf	setProps@c
  5616  021C  3000               	movlw	0
  5617  021D  318A  22EC  3180   	fcall	_setProps
  5618                           
  5619                           ;updates.c: 152:                     }else
  5620  0220  2B26               	goto	l4647
  5621  0221                     l4611:	
  5622                           
  5623                           ;updates.c: 153:                         setProps(0b11,0,0);
  5624  0221  01B0               	clrf	setProps@r
  5625  0222  01B1               	clrf	setProps@c
  5626  0223  3003               	movlw	3
  5627  0224  318A  22EC  3180   	fcall	_setProps
  5628  0227  2B26               	goto	l4647
  5629  0228                     l4613:	
  5630                           
  5631                           ;updates.c: 159:                         if(p->time-p->claw1.time1 > 300)
  5632  0228  0020               	movlb	0	; select bank0
  5633  0229  083F               	movf	updateMovement@p,w
  5634  022A  3E04               	addlw	4
  5635  022B  0086               	movwf	6
  5636  022C  0187               	clrf	7
  5637  022D  3F40               	moviw [0]fsr1
  5638  022E  0021               	movlb	1	; select bank1
  5639  022F  00A0               	movwf	??_updateMovement^(0+128)
  5640  0230  3F41               	moviw [1]fsr1
  5641  0231  00A1               	movwf	(??_updateMovement^(0+128)+1)
  5642  0232  3F42               	moviw [2]fsr1
  5643  0233  00A2               	movwf	(??_updateMovement^(0+128)+2)
  5644  0234  3F43               	moviw [3]fsr1
  5645  0235  00A3               	movwf	(??_updateMovement^(0+128)+3)
  5646  0236  0020               	movlb	0	; select bank0
  5647  0237  083F               	movf	updateMovement@p,w
  5648  0238  3E0D               	addlw	13
  5649  0239  0086               	movwf	6
  5650  023A  0187               	clrf	7
  5651  023B  3F40               	moviw [0]fsr1
  5652  023C  0021               	movlb	1	; select bank1
  5653  023D  00A4               	movwf	(??_updateMovement+4)^(0+128)
  5654  023E  3F41               	moviw [1]fsr1
  5655  023F  00A5               	movwf	((??_updateMovement+4)^(0+128)+1)
  5656  0240  3F42               	moviw [2]fsr1
  5657  0241  00A6               	movwf	((??_updateMovement+4)^(0+128)+2)
  5658  0242  3F43               	moviw [3]fsr1
  5659  0243  00A7               	movwf	((??_updateMovement+4)^(0+128)+3)
  5660  0244  0820               	movf	??_updateMovement^(0+128),w
  5661  0245  02A4               	subwf	(??_updateMovement+4)^(0+128),f
  5662  0246  0821               	movf	(??_updateMovement+1)^(0+128),w
  5663  0247  3BA5               	subwfb	((??_updateMovement+4)^(0+128)+1),f
  5664  0248  0822               	movf	(??_updateMovement+2)^(0+128),w
  5665  0249  3BA6               	subwfb	((??_updateMovement+4)^(0+128)+2),f
  5666  024A  0823               	movf	(??_updateMovement+3)^(0+128),w
  5667  024B  3BA7               	subwfb	((??_updateMovement+4)^(0+128)+3),f
  5668  024C  0827               	movf	((??_updateMovement+4)^(0+128)+3),w
  5669  024D  1D03               	btfss	3,2
  5670  024E  2A5A               	goto	u4230
  5671  024F  0826               	movf	((??_updateMovement+4)^(0+128)+2),w
  5672  0250  1D03               	btfss	3,2
  5673  0251  2A5A               	goto	u4230
  5674  0252  302D               	movlw	45
  5675  0253  0224               	subwf	(??_updateMovement+4)^(0+128),w
  5676  0254  3001               	movlw	1
  5677  0255  3B25               	subwfb	((??_updateMovement+4)^(0+128)+1),w
  5678  0256  1C03               	btfss	3,0
  5679  0257  2A59               	goto	u4231
  5680  0258  2A5A               	goto	u4230
  5681  0259                     u4231:	
  5682  0259  2A62               	goto	l4617
  5683  025A                     u4230:	
  5684  025A                     l4615:	
  5685                           
  5686                           ;updates.c: 160:                             --p->claw1.routine;
  5687  025A  0020               	movlb	0	; select bank0
  5688  025B  083F               	movf	updateMovement@p,w
  5689  025C  3E03               	addlw	3
  5690  025D  0086               	movwf	6
  5691  025E  0187               	clrf	7
  5692  025F  3001               	movlw	1
  5693  0260  0281               	subwf	1,f
  5694  0261  2B26               	goto	l4647
  5695  0262                     l4617:	
  5696                           
  5697                           ;updates.c: 162:                             setProps(0b11,0,0);
  5698  0262  0020               	movlb	0	; select bank0
  5699  0263  01B0               	clrf	setProps@r
  5700  0264  01B1               	clrf	setProps@c
  5701  0265  3003               	movlw	3
  5702  0266  318A  22EC  3180   	fcall	_setProps
  5703  0269  2B26               	goto	l4647
  5704  026A                     l4619:	
  5705                           
  5706                           ;updates.c: 165:                         if(p->time-p->claw1.time1 > 600)
  5707  026A  0020               	movlb	0	; select bank0
  5708  026B  083F               	movf	updateMovement@p,w
  5709  026C  3E04               	addlw	4
  5710  026D  0086               	movwf	6
  5711  026E  0187               	clrf	7
  5712  026F  3F40               	moviw [0]fsr1
  5713  0270  0021               	movlb	1	; select bank1
  5714  0271  00A0               	movwf	??_updateMovement^(0+128)
  5715  0272  3F41               	moviw [1]fsr1
  5716  0273  00A1               	movwf	(??_updateMovement^(0+128)+1)
  5717  0274  3F42               	moviw [2]fsr1
  5718  0275  00A2               	movwf	(??_updateMovement^(0+128)+2)
  5719  0276  3F43               	moviw [3]fsr1
  5720  0277  00A3               	movwf	(??_updateMovement^(0+128)+3)
  5721  0278  0020               	movlb	0	; select bank0
  5722  0279  083F               	movf	updateMovement@p,w
  5723  027A  3E0D               	addlw	13
  5724  027B  0086               	movwf	6
  5725  027C  0187               	clrf	7
  5726  027D  3F40               	moviw [0]fsr1
  5727  027E  0021               	movlb	1	; select bank1
  5728  027F  00A4               	movwf	(??_updateMovement+4)^(0+128)
  5729  0280  3F41               	moviw [1]fsr1
  5730  0281  00A5               	movwf	((??_updateMovement+4)^(0+128)+1)
  5731  0282  3F42               	moviw [2]fsr1
  5732  0283  00A6               	movwf	((??_updateMovement+4)^(0+128)+2)
  5733  0284  3F43               	moviw [3]fsr1
  5734  0285  00A7               	movwf	((??_updateMovement+4)^(0+128)+3)
  5735  0286  0820               	movf	??_updateMovement^(0+128),w
  5736  0287  02A4               	subwf	(??_updateMovement+4)^(0+128),f
  5737  0288  0821               	movf	(??_updateMovement+1)^(0+128),w
  5738  0289  3BA5               	subwfb	((??_updateMovement+4)^(0+128)+1),f
  5739  028A  0822               	movf	(??_updateMovement+2)^(0+128),w
  5740  028B  3BA6               	subwfb	((??_updateMovement+4)^(0+128)+2),f
  5741  028C  0823               	movf	(??_updateMovement+3)^(0+128),w
  5742  028D  3BA7               	subwfb	((??_updateMovement+4)^(0+128)+3),f
  5743  028E  0827               	movf	((??_updateMovement+4)^(0+128)+3),w
  5744  028F  1D03               	btfss	3,2
  5745  0290  2A9C               	goto	u4240
  5746  0291  0826               	movf	((??_updateMovement+4)^(0+128)+2),w
  5747  0292  1D03               	btfss	3,2
  5748  0293  2A9C               	goto	u4240
  5749  0294  3059               	movlw	89
  5750  0295  0224               	subwf	(??_updateMovement+4)^(0+128),w
  5751  0296  3002               	movlw	2
  5752  0297  3B25               	subwfb	((??_updateMovement+4)^(0+128)+1),w
  5753  0298  1C03               	btfss	3,0
  5754  0299  2A9B               	goto	u4241
  5755  029A  2A9C               	goto	u4240
  5756  029B                     u4241:	
  5757  029B  2AA4               	goto	l4623
  5758  029C                     u4240:	
  5759  029C                     l4621:	
  5760                           
  5761                           ;updates.c: 166:                             --p->claw1.routine;
  5762  029C  0020               	movlb	0	; select bank0
  5763  029D  083F               	movf	updateMovement@p,w
  5764  029E  3E03               	addlw	3
  5765  029F  0086               	movwf	6
  5766  02A0  0187               	clrf	7
  5767  02A1  3001               	movlw	1
  5768  02A2  0281               	subwf	1,f
  5769  02A3  2B26               	goto	l4647
  5770  02A4                     l4623:	
  5771                           
  5772                           ;updates.c: 168:                             setProps(0b11,0b11,0);
  5773  02A4  3003               	movlw	3
  5774  02A5  00A0               	movwf	??_updateMovement^(0+128)
  5775  02A6  0820               	movf	??_updateMovement^(0+128),w
  5776  02A7  0020               	movlb	0	; select bank0
  5777  02A8  00B0               	movwf	setProps@r
  5778  02A9  01B1               	clrf	setProps@c
  5779  02AA  3003               	movlw	3
  5780  02AB  318A  22EC  3180   	fcall	_setProps
  5781  02AE  2B26               	goto	l4647
  5782  02AF                     l4625:	
  5783                           
  5784                           ;updates.c: 171:                         if(*rotate & 0x20)
  5785  02AF  0020               	movlb	0	; select bank0
  5786  02B0  083D               	movf	updateMovement@rotate,w
  5787  02B1  0086               	movwf	6
  5788  02B2  0187               	clrf	7
  5789  02B3  1E81               	btfss	1,5
  5790  02B4  2AB6               	goto	u4251
  5791  02B5  2AB7               	goto	u4250
  5792  02B6                     u4251:	
  5793  02B6  2ABE               	goto	l4629
  5794  02B7                     u4250:	
  5795  02B7                     l4627:	
  5796                           
  5797                           ;updates.c: 172:                             --p->claw1.routine;
  5798  02B7  083F               	movf	updateMovement@p,w
  5799  02B8  3E03               	addlw	3
  5800  02B9  0086               	movwf	6
  5801  02BA  0187               	clrf	7
  5802  02BB  3001               	movlw	1
  5803  02BC  0281               	subwf	1,f
  5804  02BD  2B26               	goto	l4647
  5805  02BE                     l4629:	
  5806                           
  5807                           ;updates.c: 174:                             setProps(0,0b11,0);
  5808  02BE  3003               	movlw	3
  5809  02BF  0021               	movlb	1	; select bank1
  5810  02C0  00A0               	movwf	??_updateMovement^(0+128)
  5811  02C1  0820               	movf	??_updateMovement^(0+128),w
  5812  02C2  0020               	movlb	0	; select bank0
  5813  02C3  00B0               	movwf	setProps@r
  5814  02C4  01B1               	clrf	setProps@c
  5815  02C5  3000               	movlw	0
  5816  02C6  318A  22EC  3180   	fcall	_setProps
  5817  02C9  2B26               	goto	l4647
  5818  02CA                     l4631:	
  5819                           
  5820                           ;updates.c: 177:                         if(*lift & 0x20){
  5821  02CA  0020               	movlb	0	; select bank0
  5822  02CB  083E               	movf	updateMovement@lift,w
  5823  02CC  0086               	movwf	6
  5824  02CD  0187               	clrf	7
  5825  02CE  1E81               	btfss	1,5
  5826  02CF  2AD1               	goto	u4261
  5827  02D0  2AD2               	goto	u4260
  5828  02D1                     u4261:	
  5829  02D1  2ADF               	goto	l4637
  5830  02D2                     u4260:	
  5831  02D2                     l4633:	
  5832                           
  5833                           ;updates.c: 178:                             --p->claw1.routine;
  5834  02D2  083F               	movf	updateMovement@p,w
  5835  02D3  3E03               	addlw	3
  5836  02D4  0086               	movwf	6
  5837  02D5  0187               	clrf	7
  5838  02D6  3001               	movlw	1
  5839  02D7  0281               	subwf	1,f
  5840  02D8                     l4635:	
  5841                           
  5842                           ;updates.c: 179:                             setProps(0,0,0);
  5843  02D8  01B0               	clrf	setProps@r
  5844  02D9  01B1               	clrf	setProps@c
  5845  02DA  3000               	movlw	0
  5846  02DB  318A  22EC  3180   	fcall	_setProps
  5847                           
  5848                           ;updates.c: 180:                         }else
  5849  02DE  2B26               	goto	l4647
  5850  02DF                     l4637:	
  5851                           
  5852                           ;updates.c: 181:                             setProps(0b11,0,0);
  5853  02DF  01B0               	clrf	setProps@r
  5854  02E0  01B1               	clrf	setProps@c
  5855  02E1  3003               	movlw	3
  5856  02E2  318A  22EC  3180   	fcall	_setProps
  5857  02E5  2B26               	goto	l4647
  5858  02E6                     l4641:	
  5859  02E6  0020               	movlb	0	; select bank0
  5860  02E7  083B               	movf	updateMovement@s,w
  5861  02E8  0021               	movlb	1	; select bank1
  5862  02E9  00A0               	movwf	??_updateMovement^(0+128)
  5863  02EA  01A1               	clrf	(??_updateMovement^(0+128)+1)
  5864                           
  5865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5866                           ; Switch size 1, requested type "simple"
  5867                           ; Number of cases is 1, Range of values is 0 to 0
  5868                           ; switch strategies available:
  5869                           ; Name         Instructions Cycles
  5870                           ; simple_byte            4     3 (average)
  5871                           ; direct_byte            8     6 (fixed)
  5872                           ; jumptable            260     6 (fixed)
  5873                           ;	Chosen strategy is simple_byte
  5874  02EB  0821               	movf	(??_updateMovement+1)^(0+128),w
  5875  02EC  3A00               	xorlw	0	; case 0
  5876  02ED  1903               	skipnz
  5877  02EE  2AF0               	goto	l5155
  5878  02EF  2B26               	goto	l4647
  5879  02F0                     l5155:	
  5880                           
  5881                           ; Switch size 1, requested type "simple"
  5882                           ; Number of cases is 4, Range of values is 1 to 4
  5883                           ; switch strategies available:
  5884                           ; Name         Instructions Cycles
  5885                           ; simple_byte           13     7 (average)
  5886                           ; direct_byte           17     9 (fixed)
  5887                           ; jumptable            263     9 (fixed)
  5888                           ;	Chosen strategy is simple_byte
  5889  02F0  0820               	movf	??_updateMovement^(0+128),w
  5890  02F1  3A01               	xorlw	1	; case 1
  5891  02F2  1903               	skipnz
  5892  02F3  2ACA               	goto	l4631
  5893  02F4  3A03               	xorlw	3	; case 2
  5894  02F5  1903               	skipnz
  5895  02F6  2AAF               	goto	l4625
  5896  02F7  3A01               	xorlw	1	; case 3
  5897  02F8  1903               	skipnz
  5898  02F9  2A6A               	goto	l4619
  5899  02FA  3A07               	xorlw	7	; case 4
  5900  02FB  1903               	skipnz
  5901  02FC  2A28               	goto	l4613
  5902  02FD  2B26               	goto	l4647
  5903  02FE                     l4645:	
  5904  02FE  083F               	movf	updateMovement@p,w
  5905  02FF  3E03               	addlw	3
  5906  0300  0086               	movwf	6
  5907  0301  0187               	clrf	7
  5908  0302  0801               	movf	1,w
  5909  0303  0021               	movlb	1	; select bank1
  5910  0304  00A0               	movwf	??_updateMovement^(0+128)
  5911  0305  3004               	movlw	4
  5912  0306                     u4275:	
  5913  0306  36A0               	lsrf	??_updateMovement^(0+128),f
  5914  0307  0B89               	decfsz	9,f
  5915  0308  2B06               	goto	u4275
  5916  0309  0820               	movf	??_updateMovement^(0+128),w
  5917  030A  390F               	andlw	15
  5918  030B  00A1               	movwf	(??_updateMovement+1)^(0+128)
  5919  030C  01A2               	clrf	((??_updateMovement+1)^(0+128)+1)
  5920                           
  5921                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5922                           ; Switch size 1, requested type "simple"
  5923                           ; Number of cases is 1, Range of values is 0 to 0
  5924                           ; switch strategies available:
  5925                           ; Name         Instructions Cycles
  5926                           ; simple_byte            4     3 (average)
  5927                           ; direct_byte            8     6 (fixed)
  5928                           ; jumptable            260     6 (fixed)
  5929                           ;	Chosen strategy is simple_byte
  5930  030D  0822               	movf	(??_updateMovement+2)^(0+128),w
  5931  030E  3A00               	xorlw	0	; case 0
  5932  030F  1903               	skipnz
  5933  0310  2B12               	goto	l5157
  5934  0311  2B26               	goto	l4647
  5935  0312                     l5157:	
  5936                           
  5937                           ; Switch size 1, requested type "simple"
  5938                           ; Number of cases is 6, Range of values is 1 to 6
  5939                           ; switch strategies available:
  5940                           ; Name         Instructions Cycles
  5941                           ; simple_byte           19    10 (average)
  5942                           ; direct_byte           21     9 (fixed)
  5943                           ; jumptable            263     9 (fixed)
  5944                           ;	Chosen strategy is simple_byte
  5945  0312  0821               	movf	(??_updateMovement+1)^(0+128),w
  5946  0313  3A01               	xorlw	1	; case 1
  5947  0314  1903               	skipnz
  5948  0315  289C               	goto	l4535
  5949  0316  3A03               	xorlw	3	; case 2
  5950  0317  1903               	skipnz
  5951  0318  2986               	goto	l4575
  5952  0319  3A01               	xorlw	1	; case 3
  5953  031A  1903               	skipnz
  5954  031B  299E               	goto	l4577
  5955  031C  3A07               	xorlw	7	; case 4
  5956  031D  1903               	skipnz
  5957  031E  29BF               	goto	l4585
  5958  031F  3A01               	xorlw	1	; case 5
  5959  0320  1903               	skipnz
  5960  0321  29E0               	goto	l4593
  5961  0322  3A03               	xorlw	3	; case 6
  5962  0323  1903               	skipnz
  5963  0324  2AE6               	goto	l4641
  5964  0325  2B26               	goto	l4647
  5965  0326                     l610:	
  5966  0326                     l4647:	
  5967                           
  5968                           ;updates.c: 187:     if(p->revolver.stat & 0x80){
  5969  0326  0020               	movlb	0	; select bank0
  5970  0327  083F               	movf	updateMovement@p,w
  5971  0328  3E08               	addlw	8
  5972  0329  0086               	movwf	6
  5973  032A  0187               	clrf	7
  5974  032B  1F81               	btfss	1,7
  5975  032C  2B2E               	goto	u4281
  5976  032D  2B2F               	goto	u4280
  5977  032E                     u4281:	
  5978  032E  2BC2               	goto	l4665
  5979  032F                     u4280:	
  5980  032F                     l4649:	
  5981                           
  5982                           ;updates.c: 189:         if(p->revolver.stat & 0xF){
  5983  032F  083F               	movf	updateMovement@p,w
  5984  0330  3E08               	addlw	8
  5985  0331  0086               	movwf	6
  5986  0332  0187               	clrf	7
  5987  0333  0801               	movf	1,w
  5988  0334  390F               	andlw	15
  5989  0335  1903               	btfsc	3,2
  5990  0336  2B38               	goto	u4291
  5991  0337  2B39               	goto	u4290
  5992  0338                     u4291:	
  5993  0338  2BB7               	goto	l4663
  5994  0339                     u4290:	
  5995  0339                     l4651:	
  5996                           
  5997                           ;updates.c: 190:             if(p->revolver.stat&0x40)
  5998  0339  083F               	movf	updateMovement@p,w
  5999  033A  3E08               	addlw	8
  6000  033B  0086               	movwf	6
  6001  033C  0187               	clrf	7
  6002  033D  1F01               	btfss	1,6
  6003  033E  2B40               	goto	u4301
  6004  033F  2B41               	goto	u4300
  6005  0340                     u4301:	
  6006  0340  2B4E               	goto	l4655
  6007  0341                     u4300:	
  6008  0341                     l4653:	
  6009                           
  6010                           ;updates.c: 191:                 setMotors(1,1,255);
  6011  0341  01B6               	clrf	setMotors@dir
  6012  0342  0AB6               	incf	setMotors@dir,f
  6013  0343  30FF               	movlw	255
  6014  0344  0021               	movlb	1	; select bank1
  6015  0345  00A0               	movwf	??_updateMovement^(0+128)
  6016  0346  0820               	movf	??_updateMovement^(0+128),w
  6017  0347  0020               	movlb	0	; select bank0
  6018  0348  00B7               	movwf	setMotors@v
  6019  0349  3001               	movlw	1
  6020  034A  3184  2438  3180   	fcall	_setMotors
  6021  034D  2B59               	goto	l4657
  6022  034E                     l4655:	
  6023                           
  6024                           ;updates.c: 193:                 setMotors(1,0,255);
  6025  034E  01B6               	clrf	setMotors@dir
  6026  034F  30FF               	movlw	255
  6027  0350  0021               	movlb	1	; select bank1
  6028  0351  00A0               	movwf	??_updateMovement^(0+128)
  6029  0352  0820               	movf	??_updateMovement^(0+128),w
  6030  0353  0020               	movlb	0	; select bank0
  6031  0354  00B7               	movwf	setMotors@v
  6032  0355  3001               	movlw	1
  6033  0356  3184  2438  3180   	fcall	_setMotors
  6034  0359                     l4657:	
  6035                           
  6036                           ;updates.c: 194:             if((p->time-p->revolver.time1 > 80)&&(p->revolver.stat&0x20
      +                          )){
  6037  0359  0020               	movlb	0	; select bank0
  6038  035A  083F               	movf	updateMovement@p,w
  6039  035B  3E09               	addlw	9
  6040  035C  0086               	movwf	6
  6041  035D  0187               	clrf	7
  6042  035E  3F40               	moviw [0]fsr1
  6043  035F  0021               	movlb	1	; select bank1
  6044  0360  00A0               	movwf	??_updateMovement^(0+128)
  6045  0361  3F41               	moviw [1]fsr1
  6046  0362  00A1               	movwf	(??_updateMovement^(0+128)+1)
  6047  0363  3F42               	moviw [2]fsr1
  6048  0364  00A2               	movwf	(??_updateMovement^(0+128)+2)
  6049  0365  3F43               	moviw [3]fsr1
  6050  0366  00A3               	movwf	(??_updateMovement^(0+128)+3)
  6051  0367  0020               	movlb	0	; select bank0
  6052  0368  083F               	movf	updateMovement@p,w
  6053  0369  3E0D               	addlw	13
  6054  036A  0086               	movwf	6
  6055  036B  0187               	clrf	7
  6056  036C  3F40               	moviw [0]fsr1
  6057  036D  0021               	movlb	1	; select bank1
  6058  036E  00A4               	movwf	(??_updateMovement+4)^(0+128)
  6059  036F  3F41               	moviw [1]fsr1
  6060  0370  00A5               	movwf	((??_updateMovement+4)^(0+128)+1)
  6061  0371  3F42               	moviw [2]fsr1
  6062  0372  00A6               	movwf	((??_updateMovement+4)^(0+128)+2)
  6063  0373  3F43               	moviw [3]fsr1
  6064  0374  00A7               	movwf	((??_updateMovement+4)^(0+128)+3)
  6065  0375  0820               	movf	??_updateMovement^(0+128),w
  6066  0376  02A4               	subwf	(??_updateMovement+4)^(0+128),f
  6067  0377  0821               	movf	(??_updateMovement+1)^(0+128),w
  6068  0378  3BA5               	subwfb	((??_updateMovement+4)^(0+128)+1),f
  6069  0379  0822               	movf	(??_updateMovement+2)^(0+128),w
  6070  037A  3BA6               	subwfb	((??_updateMovement+4)^(0+128)+2),f
  6071  037B  0823               	movf	(??_updateMovement+3)^(0+128),w
  6072  037C  3BA7               	subwfb	((??_updateMovement+4)^(0+128)+3),f
  6073  037D  0827               	movf	((??_updateMovement+4)^(0+128)+3),w
  6074  037E  1D03               	btfss	3,2
  6075  037F  2B8C               	goto	u4310
  6076  0380  0826               	movf	((??_updateMovement+4)^(0+128)+2),w
  6077  0381  1D03               	btfss	3,2
  6078  0382  2B8C               	goto	u4310
  6079  0383  0825               	movf	((??_updateMovement+4)^(0+128)+1),w
  6080  0384  1D03               	btfss	3,2
  6081  0385  2B8C               	goto	u4310
  6082  0386  3051               	movlw	81
  6083  0387  0224               	subwf	(??_updateMovement+4)^(0+128),w
  6084  0388  1C03               	btfss	3,0
  6085  0389  2B8B               	goto	u4311
  6086  038A  2B8C               	goto	u4310
  6087  038B                     u4311:	
  6088  038B  2BC2               	goto	l4665
  6089  038C                     u4310:	
  6090  038C                     l4659:	
  6091  038C  0020               	movlb	0	; select bank0
  6092  038D  083F               	movf	updateMovement@p,w
  6093  038E  3E08               	addlw	8
  6094  038F  0086               	movwf	6
  6095  0390  0187               	clrf	7
  6096  0391  1E81               	btfss	1,5
  6097  0392  2B94               	goto	u4321
  6098  0393  2B95               	goto	u4320
  6099  0394                     u4321:	
  6100  0394  2BC2               	goto	l4665
  6101  0395                     u4320:	
  6102  0395                     l4661:	
  6103                           
  6104                           ;updates.c: 196:                 --p->revolver.stat;
  6105  0395  083F               	movf	updateMovement@p,w
  6106  0396  3E08               	addlw	8
  6107  0397  0086               	movwf	6
  6108  0398  0187               	clrf	7
  6109  0399  3001               	movlw	1
  6110  039A  0281               	subwf	1,f
  6111                           
  6112                           ;updates.c: 197:                 p->revolver.time1 = p->time;
  6113  039B  083F               	movf	updateMovement@p,w
  6114  039C  3E0D               	addlw	13
  6115  039D  0086               	movwf	6
  6116  039E  0187               	clrf	7
  6117  039F  3F40               	moviw [0]fsr1
  6118  03A0  0021               	movlb	1	; select bank1
  6119  03A1  00A0               	movwf	??_updateMovement^(0+128)
  6120  03A2  3F41               	moviw [1]fsr1
  6121  03A3  00A1               	movwf	(??_updateMovement^(0+128)+1)
  6122  03A4  3F42               	moviw [2]fsr1
  6123  03A5  00A2               	movwf	(??_updateMovement^(0+128)+2)
  6124  03A6  3F43               	moviw [3]fsr1
  6125  03A7  00A3               	movwf	(??_updateMovement^(0+128)+3)
  6126  03A8  0020               	movlb	0	; select bank0
  6127  03A9  083F               	movf	updateMovement@p,w
  6128  03AA  3E09               	addlw	9
  6129  03AB  0086               	movwf	6
  6130  03AC  0187               	clrf	7
  6131  03AD  0021               	movlb	1	; select bank1
  6132  03AE  0820               	movf	??_updateMovement^(0+128),w
  6133  03AF  3FC0               	movwi [0]fsr1
  6134  03B0  0821               	movf	(??_updateMovement+1)^(0+128),w
  6135  03B1  3FC1               	movwi [1]fsr1
  6136  03B2  0822               	movf	(??_updateMovement+2)^(0+128),w
  6137  03B3  3FC2               	movwi [2]fsr1
  6138  03B4  0823               	movf	(??_updateMovement+3)^(0+128),w
  6139  03B5  3FC3               	movwi [3]fsr1
  6140  03B6  2BC2               	goto	l4665
  6141  03B7                     l4663:	
  6142                           
  6143                           ;updates.c: 201:             p->revolver.stat &= 0x7F;
  6144  03B7  307F               	movlw	127
  6145  03B8  0021               	movlb	1	; select bank1
  6146  03B9  00A0               	movwf	??_updateMovement^(0+128)
  6147  03BA  0020               	movlb	0	; select bank0
  6148  03BB  083F               	movf	updateMovement@p,w
  6149  03BC  3E08               	addlw	8
  6150  03BD  0086               	movwf	6
  6151  03BE  0187               	clrf	7
  6152  03BF  0021               	movlb	1	; select bank1
  6153  03C0  0820               	movf	??_updateMovement^(0+128),w
  6154  03C1  0581               	andwf	1,f
  6155  03C2                     l4665:	
  6156                           
  6157                           ;updates.c: 205:     if(((*clamp&0x40)&&(*clamp&0b00100000)) | (!(*clamp&0x40)&&(*clamp&
      +                          0b00010000)))
  6158  03C2  0020               	movlb	0	; select bank0
  6159  03C3  083C               	movf	updateMovement@clamp,w
  6160  03C4  0086               	movwf	6
  6161  03C5  0187               	clrf	7
  6162  03C6  1F01               	btfss	1,6
  6163  03C7  2BC9               	goto	u4331
  6164  03C8  2BCA               	goto	u4330
  6165  03C9                     u4331:	
  6166  03C9  2BD1               	goto	l4669
  6167  03CA                     u4330:	
  6168  03CA                     l4667:	
  6169  03CA  083C               	movf	updateMovement@clamp,w
  6170  03CB  0086               	movwf	6
  6171  03CC  0187               	clrf	7
  6172  03CD  1A81               	btfsc	1,5
  6173  03CE  2BD0               	goto	u4341
  6174  03CF  2BD1               	goto	u4340
  6175  03D0                     u4341:	
  6176  03D0  2BDF               	goto	l4673
  6177  03D1                     u4340:	
  6178  03D1                     l4669:	
  6179  03D1  083C               	movf	updateMovement@clamp,w
  6180  03D2  0086               	movwf	6
  6181  03D3  0187               	clrf	7
  6182  03D4  1B01               	btfsc	1,6
  6183  03D5  2BD7               	goto	u4351
  6184  03D6  2BD8               	goto	u4350
  6185  03D7                     u4351:	
  6186  03D7  2BE9               	goto	l4675
  6187  03D8                     u4350:	
  6188  03D8                     l4671:	
  6189  03D8  083C               	movf	updateMovement@clamp,w
  6190  03D9  0086               	movwf	6
  6191  03DA  0187               	clrf	7
  6192  03DB  1E01               	btfss	1,4
  6193  03DC  2BDE               	goto	u4361
  6194  03DD  2BDF               	goto	u4360
  6195  03DE                     u4361:	
  6196  03DE  2BE9               	goto	l4675
  6197  03DF                     u4360:	
  6198  03DF                     l4673:	
  6199                           
  6200                           ;updates.c: 206:         *clamp &= 0b01111111;
  6201  03DF  307F               	movlw	127
  6202  03E0  0021               	movlb	1	; select bank1
  6203  03E1  00A0               	movwf	??_updateMovement^(0+128)
  6204  03E2  0020               	movlb	0	; select bank0
  6205  03E3  083C               	movf	updateMovement@clamp,w
  6206  03E4  0086               	movwf	6
  6207  03E5  0187               	clrf	7
  6208  03E6  0021               	movlb	1	; select bank1
  6209  03E7  0820               	movf	??_updateMovement^(0+128),w
  6210  03E8  0581               	andwf	1,f
  6211  03E9                     l4675:	
  6212                           
  6213                           ;updates.c: 207:     if(((*rotate&0x40)&&(*rotate&0b00100000)) | (!(*rotate&0x40)&&(*rot
      +                          ate&0b00010000)))
  6214  03E9  0020               	movlb	0	; select bank0
  6215  03EA  083D               	movf	updateMovement@rotate,w
  6216  03EB  0086               	movwf	6
  6217  03EC  0187               	clrf	7
  6218  03ED  1F01               	btfss	1,6
  6219  03EE  2BF0               	goto	u4371
  6220  03EF  2BF1               	goto	u4370
  6221  03F0                     u4371:	
  6222  03F0  2BF8               	goto	l4679
  6223  03F1                     u4370:	
  6224  03F1                     l4677:	
  6225  03F1  083D               	movf	updateMovement@rotate,w
  6226  03F2  0086               	movwf	6
  6227  03F3  0187               	clrf	7
  6228  03F4  1A81               	btfsc	1,5
  6229  03F5  2BF7               	goto	u4381
  6230  03F6  2BF8               	goto	u4380
  6231  03F7                     u4381:	
  6232  03F7  2C06               	goto	l4683
  6233  03F8                     u4380:	
  6234  03F8                     l4679:	
  6235  03F8  083D               	movf	updateMovement@rotate,w
  6236  03F9  0086               	movwf	6
  6237  03FA  0187               	clrf	7
  6238  03FB  1B01               	btfsc	1,6
  6239  03FC  2BFE               	goto	u4391
  6240  03FD  2BFF               	goto	u4390
  6241  03FE                     u4391:	
  6242  03FE  2C10               	goto	l4685
  6243  03FF                     u4390:	
  6244  03FF                     l4681:	
  6245  03FF  083D               	movf	updateMovement@rotate,w
  6246  0400  0086               	movwf	6
  6247  0401  0187               	clrf	7
  6248  0402  1E01               	btfss	1,4
  6249  0403  2C05               	goto	u4401
  6250  0404  2C06               	goto	u4400
  6251  0405                     u4401:	
  6252  0405  2C10               	goto	l4685
  6253  0406                     u4400:	
  6254  0406                     l4683:	
  6255                           
  6256                           ;updates.c: 208:         *rotate &= 0b01111111;
  6257  0406  307F               	movlw	127
  6258  0407  0021               	movlb	1	; select bank1
  6259  0408  00A0               	movwf	??_updateMovement^(0+128)
  6260  0409  0020               	movlb	0	; select bank0
  6261  040A  083D               	movf	updateMovement@rotate,w
  6262  040B  0086               	movwf	6
  6263  040C  0187               	clrf	7
  6264  040D  0021               	movlb	1	; select bank1
  6265  040E  0820               	movf	??_updateMovement^(0+128),w
  6266  040F  0581               	andwf	1,f
  6267  0410                     l4685:	
  6268                           
  6269                           ;updates.c: 209:     if(((*lift&0x40)&&(*lift&0b00100000)) | (!(*lift&0x40)&&(*lift&0b00
      +                          010000)))
  6270  0410  0020               	movlb	0	; select bank0
  6271  0411  083E               	movf	updateMovement@lift,w
  6272  0412  0086               	movwf	6
  6273  0413  0187               	clrf	7
  6274  0414  1F01               	btfss	1,6
  6275  0415  2C17               	goto	u4411
  6276  0416  2C18               	goto	u4410
  6277  0417                     u4411:	
  6278  0417  2C1F               	goto	l4689
  6279  0418                     u4410:	
  6280  0418                     l4687:	
  6281  0418  083E               	movf	updateMovement@lift,w
  6282  0419  0086               	movwf	6
  6283  041A  0187               	clrf	7
  6284  041B  1A81               	btfsc	1,5
  6285  041C  2C1E               	goto	u4421
  6286  041D  2C1F               	goto	u4420
  6287  041E                     u4421:	
  6288  041E  2C2D               	goto	l4693
  6289  041F                     u4420:	
  6290  041F                     l4689:	
  6291  041F  083E               	movf	updateMovement@lift,w
  6292  0420  0086               	movwf	6
  6293  0421  0187               	clrf	7
  6294  0422  1B01               	btfsc	1,6
  6295  0423  2C25               	goto	u4431
  6296  0424  2C26               	goto	u4430
  6297  0425                     u4431:	
  6298  0425  2C37               	goto	l680
  6299  0426                     u4430:	
  6300  0426                     l4691:	
  6301  0426  083E               	movf	updateMovement@lift,w
  6302  0427  0086               	movwf	6
  6303  0428  0187               	clrf	7
  6304  0429  1E01               	btfss	1,4
  6305  042A  2C2C               	goto	u4441
  6306  042B  2C2D               	goto	u4440
  6307  042C                     u4441:	
  6308  042C  2C37               	goto	l680
  6309  042D                     u4440:	
  6310  042D                     l4693:	
  6311                           
  6312                           ;updates.c: 210:         *lift &= 0b01111111;
  6313  042D  307F               	movlw	127
  6314  042E  0021               	movlb	1	; select bank1
  6315  042F  00A0               	movwf	??_updateMovement^(0+128)
  6316  0430  0020               	movlb	0	; select bank0
  6317  0431  083E               	movf	updateMovement@lift,w
  6318  0432  0086               	movwf	6
  6319  0433  0187               	clrf	7
  6320  0434  0021               	movlb	1	; select bank1
  6321  0435  0820               	movf	??_updateMovement^(0+128),w
  6322  0436  0581               	andwf	1,f
  6323  0437                     l680:	
  6324  0437  0008               	return
  6325  0438                     __end_of_updateMovement:	
  6326                           
  6327                           	psect	text4
  6328  0AEC                     __ptext4:	
  6329 ;; *************** function _setProps *****************
  6330 ;; Defined at:
  6331 ;;		line 214 in file "updates.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  l               1    wreg     unsigned char 
  6334 ;;  r               1   16[BANK0 ] unsigned char 
  6335 ;;  c               1   17[BANK0 ] unsigned char 
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;  l               1   20[BANK0 ] unsigned char 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      void 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2, status,0
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6347 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6348 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6349 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6350 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;Total ram usage:        5 bytes
  6352 ;; Hardware stack levels used:    1
  6353 ;; Hardware stack levels required when called:    7
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_updateMovement
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           
  6362                           ;psect for function _setProps
  6363  0AEC                     _setProps:	
  6364                           
  6365                           ;incstack = 0
  6366                           ; Regs used in _setProps: [wreg+status,2+status,0]
  6367                           ;setProps@l stored from wreg
  6368  0AEC  0020               	movlb	0	; select bank0
  6369  0AED  00B4               	movwf	setProps@l
  6370  0AEE                     l4411:	
  6371                           
  6372                           ;updates.c: 215:     props.claw1.height |= l<<6;
  6373  0AEE  0834               	movf	setProps@l,w
  6374  0AEF  00B2               	movwf	??_setProps
  6375  0AF0  3005               	movlw	5
  6376  0AF1                     u3885:	
  6377  0AF1  35B2               	lslf	??_setProps,f
  6378  0AF2  3EFF               	addlw	-1
  6379  0AF3  1D03               	skipz
  6380  0AF4  2AF1               	goto	u3885
  6381  0AF5  3532               	lslf	??_setProps,w
  6382  0AF6  00B3               	movwf	??_setProps+1
  6383  0AF7  0833               	movf	??_setProps+1,w
  6384  0AF8  04DB               	iorwf	_props+2,f
  6385                           
  6386                           ;updates.c: 216:     props.claw1.height &= ~((~l)<<6);
  6387  0AF9  0934               	comf	setProps@l,w
  6388  0AFA  00B2               	movwf	??_setProps
  6389  0AFB  3005               	movlw	5
  6390  0AFC                     u3895:	
  6391  0AFC  35B2               	lslf	??_setProps,f
  6392  0AFD  3EFF               	addlw	-1
  6393  0AFE  1D03               	skipz
  6394  0AFF  2AFC               	goto	u3895
  6395  0B00  3532               	lslf	??_setProps,w
  6396  0B01  3AFF               	xorlw	255
  6397  0B02  00B3               	movwf	??_setProps+1
  6398  0B03  0833               	movf	??_setProps+1,w
  6399  0B04  05DB               	andwf	_props+2,f
  6400                           
  6401                           ;updates.c: 218:     props.claw1.orientation |= r<<6;
  6402  0B05  0830               	movf	setProps@r,w
  6403  0B06  00B2               	movwf	??_setProps
  6404  0B07  3005               	movlw	5
  6405  0B08                     u3905:	
  6406  0B08  35B2               	lslf	??_setProps,f
  6407  0B09  3EFF               	addlw	-1
  6408  0B0A  1D03               	skipz
  6409  0B0B  2B08               	goto	u3905
  6410  0B0C  3532               	lslf	??_setProps,w
  6411  0B0D  00B3               	movwf	??_setProps+1
  6412  0B0E  0833               	movf	??_setProps+1,w
  6413  0B0F  04DA               	iorwf	_props+1,f
  6414                           
  6415                           ;updates.c: 219:     props.claw1.orientation &= ~((~r)<<6);
  6416  0B10  0930               	comf	setProps@r,w
  6417  0B11  00B2               	movwf	??_setProps
  6418  0B12  3005               	movlw	5
  6419  0B13                     u3915:	
  6420  0B13  35B2               	lslf	??_setProps,f
  6421  0B14  3EFF               	addlw	-1
  6422  0B15  1D03               	skipz
  6423  0B16  2B13               	goto	u3915
  6424  0B17  3532               	lslf	??_setProps,w
  6425  0B18  3AFF               	xorlw	255
  6426  0B19  00B3               	movwf	??_setProps+1
  6427  0B1A  0833               	movf	??_setProps+1,w
  6428  0B1B  05DA               	andwf	_props+1,f
  6429                           
  6430                           ;updates.c: 221:     props.claw1.clamped |= c<<6;
  6431  0B1C  0831               	movf	setProps@c,w
  6432  0B1D  00B2               	movwf	??_setProps
  6433  0B1E  3005               	movlw	5
  6434  0B1F                     u3925:	
  6435  0B1F  35B2               	lslf	??_setProps,f
  6436  0B20  3EFF               	addlw	-1
  6437  0B21  1D03               	skipz
  6438  0B22  2B1F               	goto	u3925
  6439  0B23  3532               	lslf	??_setProps,w
  6440  0B24  00B3               	movwf	??_setProps+1
  6441  0B25  0833               	movf	??_setProps+1,w
  6442  0B26  04D9               	iorwf	_props,f
  6443                           
  6444                           ;updates.c: 222:     props.claw1.clamped &= ~((~c)<<6);
  6445  0B27  0931               	comf	setProps@c,w
  6446  0B28  00B2               	movwf	??_setProps
  6447  0B29  3005               	movlw	5
  6448  0B2A                     u3935:	
  6449  0B2A  35B2               	lslf	??_setProps,f
  6450  0B2B  3EFF               	addlw	-1
  6451  0B2C  1D03               	skipz
  6452  0B2D  2B2A               	goto	u3935
  6453  0B2E  3532               	lslf	??_setProps,w
  6454  0B2F  3AFF               	xorlw	255
  6455  0B30  00B3               	movwf	??_setProps+1
  6456  0B31  0833               	movf	??_setProps+1,w
  6457  0B32  05D9               	andwf	_props,f
  6458  0B33                     l683:	
  6459  0B33  0008               	return
  6460  0B34                     __end_of_setProps:	
  6461                           
  6462                           	psect	text5
  6463  0EB0                     __ptext5:	
  6464 ;; *************** function _updateMotors *****************
  6465 ;; Defined at:
  6466 ;;		line 36 in file "updates.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  p               1    wreg     PTR struct properties
  6469 ;;		 -> props(17), 
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;  p               1   32[BANK0 ] PTR struct properties
  6472 ;;		 -> props(17), 
  6473 ;;  lift            1   31[BANK0 ] PTR unsigned char 
  6474 ;;		 -> props.claw1.height(1), 
  6475 ;;  rotate          1   30[BANK0 ] PTR unsigned char 
  6476 ;;		 -> props.claw1.orientation(1), 
  6477 ;;  clamp           1   29[BANK0 ] PTR unsigned char 
  6478 ;;		 -> props.claw1.clamped(1), 
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      void 
  6481 ;; Registers used:
  6482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6490 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6491 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6492 ;;Total ram usage:        6 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    9
  6495 ;; This function calls:
  6496 ;;		_setMotors
  6497 ;; This function is called by:
  6498 ;;		_updateSys
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           
  6503                           ;psect for function _updateMotors
  6504  0EB0                     _updateMotors:	
  6505                           
  6506                           ;incstack = 0
  6507                           ; Regs used in _updateMotors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6508                           ;updateMotors@p stored from wreg
  6509  0EB0  0020               	movlb	0	; select bank0
  6510  0EB1  00C0               	movwf	updateMotors@p
  6511  0EB2                     l4707:	
  6512                           
  6513                           ;updates.c: 37:     unsigned char *clamp = &(p->claw1.clamped);
  6514  0EB2  0840               	movf	updateMotors@p,w
  6515  0EB3  00BB               	movwf	??_updateMotors
  6516  0EB4  083B               	movf	??_updateMotors,w
  6517  0EB5  00BD               	movwf	updateMotors@clamp
  6518  0EB6                     l4709:	
  6519                           
  6520                           ;updates.c: 38:     unsigned char *rotate = &(p->claw1.orientation);
  6521  0EB6  0840               	movf	updateMotors@p,w
  6522  0EB7  3E01               	addlw	1
  6523  0EB8  00BB               	movwf	??_updateMotors
  6524  0EB9  083B               	movf	??_updateMotors,w
  6525  0EBA  00BE               	movwf	updateMotors@rotate
  6526  0EBB                     l4711:	
  6527                           
  6528                           ;updates.c: 39:     unsigned char *lift = &(p->claw1.height);
  6529  0EBB  0840               	movf	updateMotors@p,w
  6530  0EBC  3E02               	addlw	2
  6531  0EBD  00BB               	movwf	??_updateMotors
  6532  0EBE  083B               	movf	??_updateMotors,w
  6533  0EBF  00BF               	movwf	updateMotors@lift
  6534  0EC0                     l4713:	
  6535                           
  6536                           ;updates.c: 41:     if(!(*clamp&0x8)){
  6537  0EC0  083D               	movf	updateMotors@clamp,w
  6538  0EC1  0086               	movwf	6
  6539  0EC2  0187               	clrf	7
  6540  0EC3  1981               	btfsc	1,3
  6541  0EC4  2EC6               	goto	u4451
  6542  0EC5  2EC7               	goto	u4450
  6543  0EC6                     u4451:	
  6544  0EC6  2EED               	goto	l4721
  6545  0EC7                     u4450:	
  6546  0EC7                     l4715:	
  6547                           
  6548                           ;updates.c: 42:         if(*clamp &= 0b10000000)
  6549  0EC7  3080               	movlw	128
  6550  0EC8  00BB               	movwf	??_updateMotors
  6551  0EC9  083D               	movf	updateMotors@clamp,w
  6552  0ECA  0086               	movwf	6
  6553  0ECB  0187               	clrf	7
  6554  0ECC  083B               	movf	??_updateMotors,w
  6555  0ECD  0581               	andwf	1,f
  6556  0ECE  1903               	btfsc	3,2
  6557  0ECF  2ED1               	goto	u4461
  6558  0ED0  2ED2               	goto	u4460
  6559  0ED1                     u4461:	
  6560  0ED1  2EE7               	goto	l4719
  6561  0ED2                     u4460:	
  6562  0ED2                     l4717:	
  6563                           
  6564                           ;updates.c: 43:             setMotors(4,(*clamp&0b01000000) != 0,64);
  6565  0ED2  083D               	movf	updateMotors@clamp,w
  6566  0ED3  0086               	movwf	6
  6567  0ED4  0187               	clrf	7
  6568  0ED5  1B01               	btfsc	1,6
  6569  0ED6  2ED8               	goto	u4471
  6570  0ED7  2EDA               	goto	u4470
  6571  0ED8                     u4471:	
  6572  0ED8  3001               	movlw	1
  6573  0ED9  2EDB               	goto	u4480
  6574  0EDA                     u4470:	
  6575  0EDA  3000               	movlw	0
  6576  0EDB                     u4480:	
  6577  0EDB  00BB               	movwf	??_updateMotors
  6578  0EDC  083B               	movf	??_updateMotors,w
  6579  0EDD  00B6               	movwf	setMotors@dir
  6580  0EDE  3040               	movlw	64
  6581  0EDF  00BC               	movwf	??_updateMotors+1
  6582  0EE0  083C               	movf	??_updateMotors+1,w
  6583  0EE1  00B7               	movwf	setMotors@v
  6584  0EE2  3004               	movlw	4
  6585  0EE3  3184  2438  318E   	fcall	_setMotors
  6586  0EE6  2EED               	goto	l4721
  6587  0EE7                     l4719:	
  6588  0EE7  01B6               	clrf	setMotors@dir
  6589  0EE8  01B7               	clrf	setMotors@v
  6590  0EE9  3004               	movlw	4
  6591  0EEA  3184  2438  318E   	fcall	_setMotors
  6592  0EED                     l4721:	
  6593                           
  6594                           ;updates.c: 46:     if(!(*rotate&0x8)){
  6595  0EED  0020               	movlb	0	; select bank0
  6596  0EEE  083E               	movf	updateMotors@rotate,w
  6597  0EEF  0086               	movwf	6
  6598  0EF0  0187               	clrf	7
  6599  0EF1  1981               	btfsc	1,3
  6600  0EF2  2EF4               	goto	u4491
  6601  0EF3  2EF5               	goto	u4490
  6602  0EF4                     u4491:	
  6603  0EF4  2F1B               	goto	l4729
  6604  0EF5                     u4490:	
  6605  0EF5                     l4723:	
  6606                           
  6607                           ;updates.c: 47:         if(*rotate &= 0b10000000)
  6608  0EF5  3080               	movlw	128
  6609  0EF6  00BB               	movwf	??_updateMotors
  6610  0EF7  083E               	movf	updateMotors@rotate,w
  6611  0EF8  0086               	movwf	6
  6612  0EF9  0187               	clrf	7
  6613  0EFA  083B               	movf	??_updateMotors,w
  6614  0EFB  0581               	andwf	1,f
  6615  0EFC  1903               	btfsc	3,2
  6616  0EFD  2EFF               	goto	u4501
  6617  0EFE  2F00               	goto	u4500
  6618  0EFF                     u4501:	
  6619  0EFF  2F15               	goto	l4727
  6620  0F00                     u4500:	
  6621  0F00                     l4725:	
  6622                           
  6623                           ;updates.c: 48:             setMotors(3,(*rotate&0b01000000) != 0,64);
  6624  0F00  083E               	movf	updateMotors@rotate,w
  6625  0F01  0086               	movwf	6
  6626  0F02  0187               	clrf	7
  6627  0F03  1B01               	btfsc	1,6
  6628  0F04  2F06               	goto	u4511
  6629  0F05  2F08               	goto	u4510
  6630  0F06                     u4511:	
  6631  0F06  3001               	movlw	1
  6632  0F07  2F09               	goto	u4520
  6633  0F08                     u4510:	
  6634  0F08  3000               	movlw	0
  6635  0F09                     u4520:	
  6636  0F09  00BB               	movwf	??_updateMotors
  6637  0F0A  083B               	movf	??_updateMotors,w
  6638  0F0B  00B6               	movwf	setMotors@dir
  6639  0F0C  3040               	movlw	64
  6640  0F0D  00BC               	movwf	??_updateMotors+1
  6641  0F0E  083C               	movf	??_updateMotors+1,w
  6642  0F0F  00B7               	movwf	setMotors@v
  6643  0F10  3003               	movlw	3
  6644  0F11  3184  2438  318E   	fcall	_setMotors
  6645  0F14  2F1B               	goto	l4729
  6646  0F15                     l4727:	
  6647  0F15  01B6               	clrf	setMotors@dir
  6648  0F16  01B7               	clrf	setMotors@v
  6649  0F17  3003               	movlw	3
  6650  0F18  3184  2438  318E   	fcall	_setMotors
  6651  0F1B                     l4729:	
  6652                           
  6653                           ;updates.c: 51:     if(!(*lift&0x8)){
  6654  0F1B  0020               	movlb	0	; select bank0
  6655  0F1C  083F               	movf	updateMotors@lift,w
  6656  0F1D  0086               	movwf	6
  6657  0F1E  0187               	clrf	7
  6658  0F1F  1981               	btfsc	1,3
  6659  0F20  2F22               	goto	u4531
  6660  0F21  2F23               	goto	u4530
  6661  0F22                     u4531:	
  6662  0F22  2F49               	goto	l596
  6663  0F23                     u4530:	
  6664  0F23                     l4731:	
  6665                           
  6666                           ;updates.c: 52:         if(*lift &= 0b10000000)
  6667  0F23  3080               	movlw	128
  6668  0F24  00BB               	movwf	??_updateMotors
  6669  0F25  083F               	movf	updateMotors@lift,w
  6670  0F26  0086               	movwf	6
  6671  0F27  0187               	clrf	7
  6672  0F28  083B               	movf	??_updateMotors,w
  6673  0F29  0581               	andwf	1,f
  6674  0F2A  1903               	btfsc	3,2
  6675  0F2B  2F2D               	goto	u4541
  6676  0F2C  2F2E               	goto	u4540
  6677  0F2D                     u4541:	
  6678  0F2D  2F43               	goto	l4735
  6679  0F2E                     u4540:	
  6680  0F2E                     l4733:	
  6681                           
  6682                           ;updates.c: 53:             setMotors(2,(*lift&0b01000000) != 0,64);
  6683  0F2E  083F               	movf	updateMotors@lift,w
  6684  0F2F  0086               	movwf	6
  6685  0F30  0187               	clrf	7
  6686  0F31  1B01               	btfsc	1,6
  6687  0F32  2F34               	goto	u4551
  6688  0F33  2F36               	goto	u4550
  6689  0F34                     u4551:	
  6690  0F34  3001               	movlw	1
  6691  0F35  2F37               	goto	u4560
  6692  0F36                     u4550:	
  6693  0F36  3000               	movlw	0
  6694  0F37                     u4560:	
  6695  0F37  00BB               	movwf	??_updateMotors
  6696  0F38  083B               	movf	??_updateMotors,w
  6697  0F39  00B6               	movwf	setMotors@dir
  6698  0F3A  3040               	movlw	64
  6699  0F3B  00BC               	movwf	??_updateMotors+1
  6700  0F3C  083C               	movf	??_updateMotors+1,w
  6701  0F3D  00B7               	movwf	setMotors@v
  6702  0F3E  3002               	movlw	2
  6703  0F3F  3184  2438  318E   	fcall	_setMotors
  6704  0F42  2F49               	goto	l596
  6705  0F43                     l4735:	
  6706  0F43  01B6               	clrf	setMotors@dir
  6707  0F44  01B7               	clrf	setMotors@v
  6708  0F45  3002               	movlw	2
  6709  0F46  3184  2438  318E   	fcall	_setMotors
  6710  0F49                     l596:	
  6711  0F49  0008               	return
  6712  0F4A                     __end_of_updateMotors:	
  6713                           
  6714                           	psect	text6
  6715  0438                     __ptext6:	
  6716 ;; *************** function _setMotors *****************
  6717 ;; Defined at:
  6718 ;;		line 121 in file "settings.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  motor           1    wreg     unsigned char 
  6721 ;;  dir             1   22[BANK0 ] unsigned char 
  6722 ;;  v               1   23[BANK0 ] unsigned char 
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;  motor           1   26[BANK0 ] unsigned char 
  6725 ;; Return value:  Size  Location     Type
  6726 ;;                  1    wreg      void 
  6727 ;; Registers used:
  6728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/0
  6731 ;;		On exit  : 0/0
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;Total ram usage:        5 bytes
  6739 ;; Hardware stack levels used:    1
  6740 ;; Hardware stack levels required when called:    8
  6741 ;; This function calls:
  6742 ;;		___bmul
  6743 ;;		_setPWM
  6744 ;; This function is called by:
  6745 ;;		_updateMotors
  6746 ;;		_updateMovement
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           
  6751                           ;psect for function _setMotors
  6752  0438                     _setMotors:	
  6753                           
  6754                           ;incstack = 0
  6755                           ; Regs used in _setMotors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6756                           ;setMotors@motor stored from wreg
  6757  0438  0020               	movlb	0	; select bank0
  6758  0439  00BA               	movwf	setMotors@motor
  6759  043A                     l4323:	
  6760                           
  6761                           ;settings.c: 122:     dir = dir==1;
  6762  043A  0336               	decf	setMotors@dir,w
  6763  043B  1903               	btfsc	3,2
  6764  043C  2C3E               	goto	u3601
  6765  043D  2C40               	goto	u3600
  6766  043E                     u3601:	
  6767  043E  3001               	movlw	1
  6768  043F  2C41               	goto	u3610
  6769  0440                     u3600:	
  6770  0440  3000               	movlw	0
  6771  0441                     u3610:	
  6772  0441  00B8               	movwf	??_setMotors
  6773  0442  0838               	movf	??_setMotors,w
  6774  0443  00B6               	movwf	setMotors@dir
  6775  0444                     l4325:	
  6776                           
  6777                           ;settings.c: 123:     if((motorDirArr[motor] != dir) || (motorPWMArr[motor] != v)){
  6778  0444  083A               	movf	setMotors@motor,w
  6779  0445  3E4F               	addlw	(low (_motorDirArr| 0))& (0+255)
  6780  0446  0086               	movwf	6
  6781  0447  0187               	clrf	7
  6782  0448  0801               	movf	1,w
  6783  0449  0636               	xorwf	setMotors@dir,w
  6784  044A  1D03               	skipz
  6785  044B  2C4D               	goto	u3621
  6786  044C  2C4E               	goto	u3620
  6787  044D                     u3621:	
  6788  044D  2C58               	goto	l4329
  6789  044E                     u3620:	
  6790  044E                     l4327:	
  6791  044E  083A               	movf	setMotors@motor,w
  6792  044F  3E4B               	addlw	(low (_motorPWMArr| 0))& (0+255)
  6793  0450  0086               	movwf	6
  6794  0451  0187               	clrf	7
  6795  0452  0801               	movf	1,w
  6796  0453  0637               	xorwf	setMotors@v,w
  6797  0454  1903               	skipnz
  6798  0455  2C57               	goto	u3631
  6799  0456  2C58               	goto	u3630
  6800  0457                     u3631:	
  6801  0457  2DAA               	goto	l509
  6802  0458                     u3630:	
  6803  0458                     l4329:	
  6804                           
  6805                           ;settings.c: 124:         motorDirArr[motor] = dir;
  6806  0458  0836               	movf	setMotors@dir,w
  6807  0459  00B8               	movwf	??_setMotors
  6808  045A  083A               	movf	setMotors@motor,w
  6809  045B  3E4F               	addlw	(low (_motorDirArr| 0))& (0+255)
  6810  045C  0086               	movwf	6
  6811  045D  0187               	clrf	7
  6812  045E  0838               	movf	??_setMotors,w
  6813  045F  0081               	movwf	1
  6814                           
  6815                           ;settings.c: 125:         motorPWMArr[motor] = v;
  6816  0460  0837               	movf	setMotors@v,w
  6817  0461  00B8               	movwf	??_setMotors
  6818  0462  083A               	movf	setMotors@motor,w
  6819  0463  3E4B               	addlw	(low (_motorPWMArr| 0))& (0+255)
  6820  0464  0086               	movwf	6
  6821  0465  0187               	clrf	7
  6822  0466  0838               	movf	??_setMotors,w
  6823  0467  0081               	movwf	1
  6824                           
  6825                           ;settings.c: 126:         switch(motor){
  6826  0468  2D94               	goto	l4405
  6827  0469                     l4331:	
  6828                           
  6829                           ;settings.c: 128:                 TRISC |= 0b01010101;
  6830  0469  3055               	movlw	85
  6831  046A  00B8               	movwf	??_setMotors
  6832  046B  0838               	movf	??_setMotors,w
  6833  046C  0493               	iorwf	19,f	;volatile
  6834  046D                     l4333:	
  6835                           
  6836                           ;settings.c: 129:                 RC6PPS = 9*(!dir);
  6837  046D  3009               	movlw	9
  6838  046E  00B8               	movwf	??_setMotors
  6839  046F  0838               	movf	??_setMotors,w
  6840  0470  00B0               	movwf	___bmul@multiplicand
  6841  0471  0836               	movf	setMotors@dir,w
  6842  0472  1903               	btfsc	3,2
  6843  0473  2C75               	goto	u3641
  6844  0474  2C77               	goto	u3640
  6845  0475                     u3641:	
  6846  0475  3001               	movlw	1
  6847  0476  2C78               	goto	u3650
  6848  0477                     u3640:	
  6849  0477  3000               	movlw	0
  6850  0478                     u3650:	
  6851  0478  3189  21E1  3184   	fcall	___bmul
  6852  047B  003E               	movlb	30	; select bank30
  6853  047C  00A6               	movwf	38	;volatile
  6854  047D                     l4335:	
  6855                           
  6856                           ;settings.c: 130:                 RC2PPS = 0;
  6857  047D  01A2               	clrf	34	;volatile
  6858  047E                     l4337:	
  6859                           
  6860                           ;settings.c: 131:                 RC4PPS = 9*dir;
  6861  047E  3009               	movlw	9
  6862  047F  0020               	movlb	0	; select bank0
  6863  0480  00B8               	movwf	??_setMotors
  6864  0481  0838               	movf	??_setMotors,w
  6865  0482  00B0               	movwf	___bmul@multiplicand
  6866  0483  0836               	movf	setMotors@dir,w
  6867  0484  3189  21E1  3184   	fcall	___bmul
  6868  0487  003E               	movlb	30	; select bank30
  6869  0488  00A4               	movwf	36	;volatile
  6870  0489                     l4339:	
  6871                           
  6872                           ;settings.c: 132:                 RC0PPS = 0;
  6873  0489  01A0               	clrf	32	;volatile
  6874                           
  6875                           ;settings.c: 133:                 LATCbits.LATC6 = !dir;
  6876  048A  0020               	movlb	0	; select bank0
  6877  048B  0836               	movf	setMotors@dir,w
  6878  048C  1903               	btfsc	3,2
  6879  048D  2C8F               	goto	u3661
  6880  048E  2C92               	goto	u3660
  6881  048F                     u3661:	
  6882  048F  0020               	movlb	0	; select bank0
  6883  0490  1718               	bsf	24,6	;volatile
  6884  0491  2C94               	goto	u3674
  6885  0492                     u3660:	
  6886  0492  0020               	movlb	0	; select bank0
  6887  0493  1318               	bcf	24,6	;volatile
  6888  0494                     u3674:	
  6889  0494                     l4341:	
  6890                           
  6891                           ;settings.c: 134:                 LATCbits.LATC2 = dir;
  6892  0494  0C36               	rrf	setMotors@dir,w
  6893  0495  1C03               	skipc
  6894  0496  1118               	bcf	24,2	;volatile
  6895  0497  1803               	skipnc
  6896  0498  1518               	bsf	24,2	;volatile
  6897  0499                     l4343:	
  6898                           
  6899                           ;settings.c: 135:                 LATCbits.LATC4 = dir;
  6900  0499  0C36               	rrf	setMotors@dir,w
  6901  049A  1C03               	skipc
  6902  049B  1218               	bcf	24,4	;volatile
  6903  049C  1803               	skipnc
  6904  049D  1618               	bsf	24,4	;volatile
  6905                           
  6906                           ;settings.c: 136:                 LATCbits.LATC0 = !dir;
  6907  049E  0836               	movf	setMotors@dir,w
  6908  049F  1903               	btfsc	3,2
  6909  04A0  2CA2               	goto	u3681
  6910  04A1  2CA5               	goto	u3680
  6911  04A2                     u3681:	
  6912  04A2  0020               	movlb	0	; select bank0
  6913  04A3  1418               	bsf	24,0	;volatile
  6914  04A4  2CA7               	goto	u3694
  6915  04A5                     u3680:	
  6916  04A5  0020               	movlb	0	; select bank0
  6917  04A6  1018               	bcf	24,0	;volatile
  6918  04A7                     u3694:	
  6919  04A7                     l4345:	
  6920                           
  6921                           ;settings.c: 137:                 setPWM(1,v);
  6922  04A7  0837               	movf	setMotors@v,w
  6923  04A8  00B8               	movwf	??_setMotors
  6924  04A9  0838               	movf	??_setMotors,w
  6925  04AA  00B0               	movwf	setPWM@pwm
  6926  04AB  3001               	movlw	1
  6927  04AC  318B  23DB  3184   	fcall	_setPWM
  6928  04AF                     l4347:	
  6929                           
  6930                           ;settings.c: 138:                 TRISC &= 0b10101010;
  6931  04AF  30AA               	movlw	170
  6932  04B0  0020               	movlb	0	; select bank0
  6933  04B1  00B8               	movwf	??_setMotors
  6934  04B2  0838               	movf	??_setMotors,w
  6935  04B3  0593               	andwf	19,f	;volatile
  6936                           
  6937                           ;settings.c: 139:                 break;
  6938  04B4  2DAA               	goto	l509
  6939  04B5                     l4349:	
  6940                           
  6941                           ;settings.c: 141:                 TRISC |= 0b10101010;
  6942  04B5  30AA               	movlw	170
  6943  04B6  00B8               	movwf	??_setMotors
  6944  04B7  0838               	movf	??_setMotors,w
  6945  04B8  0493               	iorwf	19,f	;volatile
  6946  04B9                     l4351:	
  6947                           
  6948                           ;settings.c: 142:                 RC7PPS = 10*(!dir);
  6949  04B9  300A               	movlw	10
  6950  04BA  00B8               	movwf	??_setMotors
  6951  04BB  0838               	movf	??_setMotors,w
  6952  04BC  00B0               	movwf	___bmul@multiplicand
  6953  04BD  0836               	movf	setMotors@dir,w
  6954  04BE  1903               	btfsc	3,2
  6955  04BF  2CC1               	goto	u3701
  6956  04C0  2CC3               	goto	u3700
  6957  04C1                     u3701:	
  6958  04C1  3001               	movlw	1
  6959  04C2  2CC4               	goto	u3710
  6960  04C3                     u3700:	
  6961  04C3  3000               	movlw	0
  6962  04C4                     u3710:	
  6963  04C4  3189  21E1  3184   	fcall	___bmul
  6964  04C7  003E               	movlb	30	; select bank30
  6965  04C8  00A7               	movwf	39	;volatile
  6966  04C9                     l4353:	
  6967                           
  6968                           ;settings.c: 143:                 RC3PPS = 0;
  6969  04C9  01A3               	clrf	35	;volatile
  6970  04CA                     l4355:	
  6971                           
  6972                           ;settings.c: 144:                 RC5PPS = 10*dir;
  6973  04CA  300A               	movlw	10
  6974  04CB  0020               	movlb	0	; select bank0
  6975  04CC  00B8               	movwf	??_setMotors
  6976  04CD  0838               	movf	??_setMotors,w
  6977  04CE  00B0               	movwf	___bmul@multiplicand
  6978  04CF  0836               	movf	setMotors@dir,w
  6979  04D0  3189  21E1  3184   	fcall	___bmul
  6980  04D3  003E               	movlb	30	; select bank30
  6981  04D4  00A5               	movwf	37	;volatile
  6982  04D5                     l4357:	
  6983                           
  6984                           ;settings.c: 145:                 RC1PPS = 0;
  6985  04D5  01A1               	clrf	33	;volatile
  6986                           
  6987                           ;settings.c: 146:                 LATCbits.LATC7 = !dir;
  6988  04D6  0020               	movlb	0	; select bank0
  6989  04D7  0836               	movf	setMotors@dir,w
  6990  04D8  1903               	btfsc	3,2
  6991  04D9  2CDB               	goto	u3721
  6992  04DA  2CDE               	goto	u3720
  6993  04DB                     u3721:	
  6994  04DB  0020               	movlb	0	; select bank0
  6995  04DC  1798               	bsf	24,7	;volatile
  6996  04DD  2CE0               	goto	u3734
  6997  04DE                     u3720:	
  6998  04DE  0020               	movlb	0	; select bank0
  6999  04DF  1398               	bcf	24,7	;volatile
  7000  04E0                     u3734:	
  7001  04E0                     l4359:	
  7002                           
  7003                           ;settings.c: 147:                 LATCbits.LATC3 = dir;
  7004  04E0  0C36               	rrf	setMotors@dir,w
  7005  04E1  1C03               	skipc
  7006  04E2  1198               	bcf	24,3	;volatile
  7007  04E3  1803               	skipnc
  7008  04E4  1598               	bsf	24,3	;volatile
  7009  04E5                     l4361:	
  7010                           
  7011                           ;settings.c: 148:                 LATCbits.LATC5 = dir;
  7012  04E5  0C36               	rrf	setMotors@dir,w
  7013  04E6  1C03               	skipc
  7014  04E7  1298               	bcf	24,5	;volatile
  7015  04E8  1803               	skipnc
  7016  04E9  1698               	bsf	24,5	;volatile
  7017                           
  7018                           ;settings.c: 149:                 LATCbits.LATC1 = !dir;
  7019  04EA  0836               	movf	setMotors@dir,w
  7020  04EB  1903               	btfsc	3,2
  7021  04EC  2CEE               	goto	u3741
  7022  04ED  2CF1               	goto	u3740
  7023  04EE                     u3741:	
  7024  04EE  0020               	movlb	0	; select bank0
  7025  04EF  1498               	bsf	24,1	;volatile
  7026  04F0  2CF3               	goto	u3754
  7027  04F1                     u3740:	
  7028  04F1  0020               	movlb	0	; select bank0
  7029  04F2  1098               	bcf	24,1	;volatile
  7030  04F3                     u3754:	
  7031  04F3                     l4363:	
  7032                           
  7033                           ;settings.c: 150:                 setPWM(2,v);
  7034  04F3  0837               	movf	setMotors@v,w
  7035  04F4  00B8               	movwf	??_setMotors
  7036  04F5  0838               	movf	??_setMotors,w
  7037  04F6  00B0               	movwf	setPWM@pwm
  7038  04F7  3002               	movlw	2
  7039  04F8  318B  23DB  3184   	fcall	_setPWM
  7040  04FB                     l4365:	
  7041                           
  7042                           ;settings.c: 151:                 TRISC &= 0b01010101;
  7043  04FB  3055               	movlw	85
  7044  04FC  0020               	movlb	0	; select bank0
  7045  04FD  00B8               	movwf	??_setMotors
  7046  04FE  0838               	movf	??_setMotors,w
  7047  04FF  0593               	andwf	19,f	;volatile
  7048                           
  7049                           ;settings.c: 152:                 break;
  7050  0500  2DAA               	goto	l509
  7051  0501                     l4367:	
  7052                           
  7053                           ;settings.c: 154:                 TRISD |= 0b01010101;
  7054  0501  3055               	movlw	85
  7055  0502  00B8               	movwf	??_setMotors
  7056  0503  0838               	movf	??_setMotors,w
  7057  0504  0494               	iorwf	20,f	;volatile
  7058  0505                     l4369:	
  7059                           
  7060                           ;settings.c: 155:                 RD4PPS = 11*(!dir);
  7061  0505  300B               	movlw	11
  7062  0506  00B8               	movwf	??_setMotors
  7063  0507  0838               	movf	??_setMotors,w
  7064  0508  00B0               	movwf	___bmul@multiplicand
  7065  0509  0836               	movf	setMotors@dir,w
  7066  050A  1903               	btfsc	3,2
  7067  050B  2D0D               	goto	u3761
  7068  050C  2D0F               	goto	u3760
  7069  050D                     u3761:	
  7070  050D  3001               	movlw	1
  7071  050E  2D10               	goto	u3770
  7072  050F                     u3760:	
  7073  050F  3000               	movlw	0
  7074  0510                     u3770:	
  7075  0510  3189  21E1  3184   	fcall	___bmul
  7076  0513  003E               	movlb	30	; select bank30
  7077  0514  00AC               	movwf	44	;volatile
  7078  0515                     l4371:	
  7079                           
  7080                           ;settings.c: 156:                 RD0PPS = 0;
  7081  0515  01A8               	clrf	40	;volatile
  7082  0516                     l4373:	
  7083                           
  7084                           ;settings.c: 157:                 RD6PPS = 11*dir;
  7085  0516  300B               	movlw	11
  7086  0517  0020               	movlb	0	; select bank0
  7087  0518  00B8               	movwf	??_setMotors
  7088  0519  0838               	movf	??_setMotors,w
  7089  051A  00B0               	movwf	___bmul@multiplicand
  7090  051B  0836               	movf	setMotors@dir,w
  7091  051C  3189  21E1  3184   	fcall	___bmul
  7092  051F  003E               	movlb	30	; select bank30
  7093  0520  00AE               	movwf	46	;volatile
  7094  0521                     l4375:	
  7095                           
  7096                           ;settings.c: 158:                 RD2PPS = 0;
  7097  0521  01AA               	clrf	42	;volatile
  7098                           
  7099                           ;settings.c: 159:                 LATDbits.LATD4 = !dir;
  7100  0522  0020               	movlb	0	; select bank0
  7101  0523  0836               	movf	setMotors@dir,w
  7102  0524  1903               	btfsc	3,2
  7103  0525  2D27               	goto	u3781
  7104  0526  2D2A               	goto	u3780
  7105  0527                     u3781:	
  7106  0527  0020               	movlb	0	; select bank0
  7107  0528  1619               	bsf	25,4	;volatile
  7108  0529  2D2C               	goto	u3794
  7109  052A                     u3780:	
  7110  052A  0020               	movlb	0	; select bank0
  7111  052B  1219               	bcf	25,4	;volatile
  7112  052C                     u3794:	
  7113  052C                     l4377:	
  7114                           
  7115                           ;settings.c: 160:                 LATDbits.LATD0 = dir;
  7116  052C  0C36               	rrf	setMotors@dir,w
  7117  052D  1C03               	skipc
  7118  052E  1019               	bcf	25,0	;volatile
  7119  052F  1803               	skipnc
  7120  0530  1419               	bsf	25,0	;volatile
  7121  0531                     l4379:	
  7122                           
  7123                           ;settings.c: 161:                 LATDbits.LATD6 = dir;
  7124  0531  0C36               	rrf	setMotors@dir,w
  7125  0532  1C03               	skipc
  7126  0533  1319               	bcf	25,6	;volatile
  7127  0534  1803               	skipnc
  7128  0535  1719               	bsf	25,6	;volatile
  7129                           
  7130                           ;settings.c: 162:                 LATDbits.LATD2 = !dir;
  7131  0536  0836               	movf	setMotors@dir,w
  7132  0537  1903               	btfsc	3,2
  7133  0538  2D3A               	goto	u3801
  7134  0539  2D3D               	goto	u3800
  7135  053A                     u3801:	
  7136  053A  0020               	movlb	0	; select bank0
  7137  053B  1519               	bsf	25,2	;volatile
  7138  053C  2D3F               	goto	u3814
  7139  053D                     u3800:	
  7140  053D  0020               	movlb	0	; select bank0
  7141  053E  1119               	bcf	25,2	;volatile
  7142  053F                     u3814:	
  7143  053F                     l4381:	
  7144                           
  7145                           ;settings.c: 163:                 setPWM(3,v);
  7146  053F  0837               	movf	setMotors@v,w
  7147  0540  00B8               	movwf	??_setMotors
  7148  0541  0838               	movf	??_setMotors,w
  7149  0542  00B0               	movwf	setPWM@pwm
  7150  0543  3003               	movlw	3
  7151  0544  318B  23DB  3184   	fcall	_setPWM
  7152  0547                     l4383:	
  7153                           
  7154                           ;settings.c: 164:                 TRISD &= 0b10101010;
  7155  0547  30AA               	movlw	170
  7156  0548  0020               	movlb	0	; select bank0
  7157  0549  00B8               	movwf	??_setMotors
  7158  054A  0838               	movf	??_setMotors,w
  7159  054B  0594               	andwf	20,f	;volatile
  7160                           
  7161                           ;settings.c: 165:                 break;
  7162  054C  2DAA               	goto	l509
  7163  054D                     l4385:	
  7164                           
  7165                           ;settings.c: 167:                 TRISD |= 0b01010101;
  7166  054D  3055               	movlw	85
  7167  054E  00B8               	movwf	??_setMotors
  7168  054F  0838               	movf	??_setMotors,w
  7169  0550  0494               	iorwf	20,f	;volatile
  7170  0551                     l4387:	
  7171                           
  7172                           ;settings.c: 168:                 RD5PPS = 12*(!dir);
  7173  0551  300C               	movlw	12
  7174  0552  00B8               	movwf	??_setMotors
  7175  0553  0838               	movf	??_setMotors,w
  7176  0554  00B0               	movwf	___bmul@multiplicand
  7177  0555  0836               	movf	setMotors@dir,w
  7178  0556  1903               	btfsc	3,2
  7179  0557  2D59               	goto	u3821
  7180  0558  2D5B               	goto	u3820
  7181  0559                     u3821:	
  7182  0559  3001               	movlw	1
  7183  055A  2D5C               	goto	u3830
  7184  055B                     u3820:	
  7185  055B  3000               	movlw	0
  7186  055C                     u3830:	
  7187  055C  3189  21E1  3184   	fcall	___bmul
  7188  055F  003E               	movlb	30	; select bank30
  7189  0560  00AD               	movwf	45	;volatile
  7190  0561                     l4389:	
  7191                           
  7192                           ;settings.c: 169:                 RD1PPS = 0;
  7193  0561  01A9               	clrf	41	;volatile
  7194  0562                     l4391:	
  7195                           
  7196                           ;settings.c: 170:                 RD7PPS = 12*dir;
  7197  0562  300C               	movlw	12
  7198  0563  0020               	movlb	0	; select bank0
  7199  0564  00B8               	movwf	??_setMotors
  7200  0565  0838               	movf	??_setMotors,w
  7201  0566  00B0               	movwf	___bmul@multiplicand
  7202  0567  0836               	movf	setMotors@dir,w
  7203  0568  3189  21E1  3184   	fcall	___bmul
  7204  056B  003E               	movlb	30	; select bank30
  7205  056C  00AF               	movwf	47	;volatile
  7206  056D                     l4393:	
  7207                           
  7208                           ;settings.c: 171:                 RD3PPS = 0;
  7209  056D  01AB               	clrf	43	;volatile
  7210                           
  7211                           ;settings.c: 172:                 LATDbits.LATD5 = !dir;
  7212  056E  0020               	movlb	0	; select bank0
  7213  056F  0836               	movf	setMotors@dir,w
  7214  0570  1903               	btfsc	3,2
  7215  0571  2D73               	goto	u3841
  7216  0572  2D76               	goto	u3840
  7217  0573                     u3841:	
  7218  0573  0020               	movlb	0	; select bank0
  7219  0574  1699               	bsf	25,5	;volatile
  7220  0575  2D78               	goto	u3854
  7221  0576                     u3840:	
  7222  0576  0020               	movlb	0	; select bank0
  7223  0577  1299               	bcf	25,5	;volatile
  7224  0578                     u3854:	
  7225  0578                     l4395:	
  7226                           
  7227                           ;settings.c: 173:                 LATDbits.LATD1 = dir;
  7228  0578  0C36               	rrf	setMotors@dir,w
  7229  0579  1C03               	skipc
  7230  057A  1099               	bcf	25,1	;volatile
  7231  057B  1803               	skipnc
  7232  057C  1499               	bsf	25,1	;volatile
  7233  057D                     l4397:	
  7234                           
  7235                           ;settings.c: 174:                 LATDbits.LATD7 = dir;
  7236  057D  0C36               	rrf	setMotors@dir,w
  7237  057E  1C03               	skipc
  7238  057F  1399               	bcf	25,7	;volatile
  7239  0580  1803               	skipnc
  7240  0581  1799               	bsf	25,7	;volatile
  7241                           
  7242                           ;settings.c: 175:                 LATDbits.LATD3 = !dir;
  7243  0582  0836               	movf	setMotors@dir,w
  7244  0583  1903               	btfsc	3,2
  7245  0584  2D86               	goto	u3861
  7246  0585  2D89               	goto	u3860
  7247  0586                     u3861:	
  7248  0586  0020               	movlb	0	; select bank0
  7249  0587  1599               	bsf	25,3	;volatile
  7250  0588  2D8B               	goto	u3874
  7251  0589                     u3860:	
  7252  0589  0020               	movlb	0	; select bank0
  7253  058A  1199               	bcf	25,3	;volatile
  7254  058B                     u3874:	
  7255  058B                     l4399:	
  7256                           
  7257                           ;settings.c: 176:                 setPWM(4,v);
  7258  058B  0837               	movf	setMotors@v,w
  7259  058C  00B8               	movwf	??_setMotors
  7260  058D  0838               	movf	??_setMotors,w
  7261  058E  00B0               	movwf	setPWM@pwm
  7262  058F  3004               	movlw	4
  7263  0590  318B  23DB  3184   	fcall	_setPWM
  7264  0593  2D47               	goto	l4383
  7265  0594                     l4405:	
  7266  0594  083A               	movf	setMotors@motor,w
  7267  0595  00B8               	movwf	??_setMotors
  7268  0596  01B9               	clrf	??_setMotors+1
  7269                           
  7270                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7271                           ; Switch size 1, requested type "simple"
  7272                           ; Number of cases is 1, Range of values is 0 to 0
  7273                           ; switch strategies available:
  7274                           ; Name         Instructions Cycles
  7275                           ; simple_byte            4     3 (average)
  7276                           ; direct_byte            8     6 (fixed)
  7277                           ; jumptable            260     6 (fixed)
  7278                           ;	Chosen strategy is simple_byte
  7279  0597  0839               	movf	??_setMotors+1,w
  7280  0598  3A00               	xorlw	0	; case 0
  7281  0599  1903               	skipnz
  7282  059A  2D9C               	goto	l5159
  7283  059B  2DAA               	goto	l509
  7284  059C                     l5159:	
  7285                           
  7286                           ; Switch size 1, requested type "simple"
  7287                           ; Number of cases is 4, Range of values is 1 to 4
  7288                           ; switch strategies available:
  7289                           ; Name         Instructions Cycles
  7290                           ; simple_byte           13     7 (average)
  7291                           ; direct_byte           17     9 (fixed)
  7292                           ; jumptable            263     9 (fixed)
  7293                           ;	Chosen strategy is simple_byte
  7294  059C  0838               	movf	??_setMotors,w
  7295  059D  3A01               	xorlw	1	; case 1
  7296  059E  1903               	skipnz
  7297  059F  2C69               	goto	l4331
  7298  05A0  3A03               	xorlw	3	; case 2
  7299  05A1  1903               	skipnz
  7300  05A2  2CB5               	goto	l4349
  7301  05A3  3A01               	xorlw	1	; case 3
  7302  05A4  1903               	skipnz
  7303  05A5  2D01               	goto	l4367
  7304  05A6  3A07               	xorlw	7	; case 4
  7305  05A7  1903               	skipnz
  7306  05A8  2D4D               	goto	l4385
  7307  05A9  2DAA               	goto	l509
  7308  05AA                     l509:	
  7309  05AA  0008               	return
  7310  05AB                     __end_of_setMotors:	
  7311                           
  7312                           	psect	text7
  7313  0BDB                     __ptext7:	
  7314 ;; *************** function _setPWM *****************
  7315 ;; Defined at:
  7316 ;;		line 43 in file "settings.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  module          1    wreg     unsigned char 
  7319 ;;  pwm             1   16[BANK0 ] unsigned char 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  module          1   19[BANK0 ] unsigned char 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  1    wreg      void 
  7324 ;; Registers used:
  7325 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7331 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;Total ram usage:        6 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:    7
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_setMotors
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           
  7346                           ;psect for function _setPWM
  7347  0BDB                     _setPWM:	
  7348                           
  7349                           ;incstack = 0
  7350                           ; Regs used in _setPWM: [wreg-fsr0h+status,2+status,0]
  7351                           ;setPWM@module stored from wreg
  7352  0BDB  0020               	movlb	0	; select bank0
  7353  0BDC  00B3               	movwf	setPWM@module
  7354  0BDD                     l4241:	
  7355                           
  7356                           ;settings.c: 44:     pwm = pwm<=250 ? pwm : 250;
  7357  0BDD  30FB               	movlw	251
  7358  0BDE  0230               	subwf	setPWM@pwm,w
  7359  0BDF  1C03               	skipc
  7360  0BE0  2BE2               	goto	u3481
  7361  0BE1  2BE3               	goto	u3480
  7362  0BE2                     u3481:	
  7363  0BE2  2BE8               	goto	l4245
  7364  0BE3                     u3480:	
  7365  0BE3                     l4243:	
  7366  0BE3  30FA               	movlw	250
  7367  0BE4  00B4               	movwf	_setPWM$1156
  7368  0BE5  3000               	movlw	0
  7369  0BE6  00B5               	movwf	_setPWM$1156+1
  7370  0BE7  2BEF               	goto	l466
  7371  0BE8                     l4245:	
  7372  0BE8  0830               	movf	setPWM@pwm,w
  7373  0BE9  00B1               	movwf	??_setPWM
  7374  0BEA  01B2               	clrf	??_setPWM+1
  7375  0BEB  0831               	movf	??_setPWM,w
  7376  0BEC  00B4               	movwf	_setPWM$1156
  7377  0BED  0832               	movf	??_setPWM+1,w
  7378  0BEE  00B5               	movwf	_setPWM$1156+1
  7379  0BEF                     l466:	
  7380  0BEF  0834               	movf	_setPWM$1156,w
  7381  0BF0  00B1               	movwf	??_setPWM
  7382  0BF1  0831               	movf	??_setPWM,w
  7383  0BF2  00B0               	movwf	setPWM@pwm
  7384                           
  7385                           ;settings.c: 45:     switch(module){
  7386  0BF3  2C10               	goto	l4263
  7387  0BF4                     l4247:	
  7388                           
  7389                           ;settings.c: 47:             CCPR1H = pwm;
  7390  0BF4  0830               	movf	setPWM@pwm,w
  7391  0BF5  0026               	movlb	6	; select bank6
  7392  0BF6  008D               	movwf	13	;volatile
  7393                           
  7394                           ;settings.c: 48:             break;
  7395  0BF7  2C2F               	goto	l476
  7396  0BF8                     l4249:	
  7397                           
  7398                           ;settings.c: 50:             CCPR2H = pwm;
  7399  0BF8  0830               	movf	setPWM@pwm,w
  7400  0BF9  0026               	movlb	6	; select bank6
  7401  0BFA  0091               	movwf	17	;volatile
  7402                           
  7403                           ;settings.c: 51:             break;
  7404  0BFB  2C2F               	goto	l476
  7405  0BFC                     l4251:	
  7406                           
  7407                           ;settings.c: 53:             CCPR3H = pwm;
  7408  0BFC  0830               	movf	setPWM@pwm,w
  7409  0BFD  0026               	movlb	6	; select bank6
  7410  0BFE  0095               	movwf	21	;volatile
  7411                           
  7412                           ;settings.c: 54:             break;
  7413  0BFF  2C2F               	goto	l476
  7414  0C00                     l4253:	
  7415                           
  7416                           ;settings.c: 56:             CCPR4H = pwm;
  7417  0C00  0830               	movf	setPWM@pwm,w
  7418  0C01  0026               	movlb	6	; select bank6
  7419  0C02  0099               	movwf	25	;volatile
  7420                           
  7421                           ;settings.c: 57:             break;
  7422  0C03  2C2F               	goto	l476
  7423  0C04                     l4255:	
  7424                           
  7425                           ;settings.c: 59:             CCPR5H = pwm;
  7426  0C04  0830               	movf	setPWM@pwm,w
  7427  0C05  0026               	movlb	6	; select bank6
  7428  0C06  009D               	movwf	29	;volatile
  7429                           
  7430                           ;settings.c: 60:             break;
  7431  0C07  2C2F               	goto	l476
  7432  0C08                     l4257:	
  7433                           
  7434                           ;settings.c: 62:             PWM6DCH = pwm;
  7435  0C08  0830               	movf	setPWM@pwm,w
  7436  0C09  0027               	movlb	7	; select bank7
  7437  0C0A  008D               	movwf	13	;volatile
  7438                           
  7439                           ;settings.c: 63:             break;
  7440  0C0B  2C2F               	goto	l476
  7441  0C0C                     l4259:	
  7442                           
  7443                           ;settings.c: 65:             PWM7DCH = pwm;
  7444  0C0C  0830               	movf	setPWM@pwm,w
  7445  0C0D  0027               	movlb	7	; select bank7
  7446  0C0E  0091               	movwf	17	;volatile
  7447                           
  7448                           ;settings.c: 66:             break;
  7449  0C0F  2C2F               	goto	l476
  7450  0C10                     l4263:	
  7451  0C10  0833               	movf	setPWM@module,w
  7452  0C11  00B1               	movwf	??_setPWM
  7453  0C12  01B2               	clrf	??_setPWM+1
  7454                           
  7455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7456                           ; Switch size 1, requested type "simple"
  7457                           ; Number of cases is 1, Range of values is 0 to 0
  7458                           ; switch strategies available:
  7459                           ; Name         Instructions Cycles
  7460                           ; simple_byte            4     3 (average)
  7461                           ; direct_byte            8     6 (fixed)
  7462                           ; jumptable            260     6 (fixed)
  7463                           ;	Chosen strategy is simple_byte
  7464  0C13  0832               	movf	??_setPWM+1,w
  7465  0C14  3A00               	xorlw	0	; case 0
  7466  0C15  1903               	skipnz
  7467  0C16  2C18               	goto	l5161
  7468  0C17  2C2F               	goto	l476
  7469  0C18                     l5161:	
  7470                           
  7471                           ; Switch size 1, requested type "simple"
  7472                           ; Number of cases is 7, Range of values is 1 to 7
  7473                           ; switch strategies available:
  7474                           ; Name         Instructions Cycles
  7475                           ; simple_byte           22    12 (average)
  7476                           ; direct_byte           23     9 (fixed)
  7477                           ; jumptable            263     9 (fixed)
  7478                           ;	Chosen strategy is simple_byte
  7479  0C18  0831               	movf	??_setPWM,w
  7480  0C19  3A01               	xorlw	1	; case 1
  7481  0C1A  1903               	skipnz
  7482  0C1B  2BF4               	goto	l4247
  7483  0C1C  3A03               	xorlw	3	; case 2
  7484  0C1D  1903               	skipnz
  7485  0C1E  2BF8               	goto	l4249
  7486  0C1F  3A01               	xorlw	1	; case 3
  7487  0C20  1903               	skipnz
  7488  0C21  2BFC               	goto	l4251
  7489  0C22  3A07               	xorlw	7	; case 4
  7490  0C23  1903               	skipnz
  7491  0C24  2C00               	goto	l4253
  7492  0C25  3A01               	xorlw	1	; case 5
  7493  0C26  1903               	skipnz
  7494  0C27  2C04               	goto	l4255
  7495  0C28  3A03               	xorlw	3	; case 6
  7496  0C29  1903               	skipnz
  7497  0C2A  2C08               	goto	l4257
  7498  0C2B  3A01               	xorlw	1	; case 7
  7499  0C2C  1903               	skipnz
  7500  0C2D  2C0C               	goto	l4259
  7501  0C2E  2C2F               	goto	l476
  7502  0C2F                     l476:	
  7503  0C2F  0008               	return
  7504  0C30                     __end_of_setPWM:	
  7505                           
  7506                           	psect	text8
  7507  09E1                     __ptext8:	
  7508 ;; *************** function ___bmul *****************
  7509 ;; Defined at:
  7510 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  multiplier      1    wreg     unsigned char 
  7513 ;;  multiplicand    1   16[BANK0 ] unsigned char 
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;  multiplier      1   19[BANK0 ] unsigned char 
  7516 ;;  product         1   18[BANK0 ] unsigned char 
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1    wreg      unsigned char 
  7519 ;; Registers used:
  7520 ;;		wreg, status,2, status,0
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7526 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7530 ;;Total ram usage:        4 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; Hardware stack levels required when called:    7
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		_setMotors
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           
  7541                           ;psect for function ___bmul
  7542  09E1                     ___bmul:	
  7543                           
  7544                           ;incstack = 0
  7545                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7546                           ;___bmul@multiplier stored from wreg
  7547  09E1  0020               	movlb	0	; select bank0
  7548  09E2  00B3               	movwf	___bmul@multiplier
  7549  09E3                     l4269:	
  7550  09E3  01B2               	clrf	___bmul@product
  7551  09E4                     l4271:	
  7552  09E4  1C33               	btfss	___bmul@multiplier,0
  7553  09E5  29E7               	goto	u3491
  7554  09E6  29E8               	goto	u3490
  7555  09E7                     u3491:	
  7556  09E7  29EC               	goto	l4275
  7557  09E8                     u3490:	
  7558  09E8                     l4273:	
  7559  09E8  0830               	movf	___bmul@multiplicand,w
  7560  09E9  00B1               	movwf	??___bmul
  7561  09EA  0831               	movf	??___bmul,w
  7562  09EB  07B2               	addwf	___bmul@product,f
  7563  09EC                     l4275:	
  7564  09EC  1003               	clrc
  7565  09ED  0DB0               	rlf	___bmul@multiplicand,f
  7566  09EE                     l4277:	
  7567  09EE  1003               	clrc
  7568  09EF  0CB3               	rrf	___bmul@multiplier,f
  7569  09F0  0833               	movf	___bmul@multiplier,w
  7570  09F1  1D03               	btfss	3,2
  7571  09F2  29F4               	goto	u3501
  7572  09F3  29F5               	goto	u3500
  7573  09F4                     u3501:	
  7574  09F4  29E4               	goto	l4271
  7575  09F5                     u3500:	
  7576  09F5                     l4279:	
  7577  09F5  0832               	movf	___bmul@product,w
  7578  09F6                     l883:	
  7579  09F6  0008               	return
  7580  09F7                     __end_of___bmul:	
  7581                           
  7582                           	psect	text9
  7583  0D02                     __ptext9:	
  7584 ;; *************** function _testButtons *****************
  7585 ;; Defined at:
  7586 ;;		line 225 in file "updates.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  p               1    wreg     PTR struct properties
  7589 ;;		 -> props(17), 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  p               1   20[BANK0 ] PTR struct properties
  7592 ;;		 -> props(17), 
  7593 ;;  lift            1   19[BANK0 ] PTR unsigned char 
  7594 ;;		 -> props.claw1.height(1), 
  7595 ;;  rotate          1   18[BANK0 ] PTR unsigned char 
  7596 ;;		 -> props.claw1.orientation(1), 
  7597 ;;  clamp           1   17[BANK0 ] PTR unsigned char 
  7598 ;;		 -> props.claw1.clamped(1), 
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  1    wreg      void 
  7601 ;; Registers used:
  7602 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7609 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7610 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7611 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7612 ;;Total ram usage:        5 bytes
  7613 ;; Hardware stack levels used:    1
  7614 ;; Hardware stack levels required when called:    7
  7615 ;; This function calls:
  7616 ;;		Nothing
  7617 ;; This function is called by:
  7618 ;;		_updateSys
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           
  7623                           ;psect for function _testButtons
  7624  0D02                     _testButtons:	
  7625                           
  7626                           ;incstack = 0
  7627                           ; Regs used in _testButtons: [wreg+fsr1l+fsr1h+status,2+status,0]
  7628                           ;testButtons@p stored from wreg
  7629  0D02  0020               	movlb	0	; select bank0
  7630  0D03  00B4               	movwf	testButtons@p
  7631  0D04                     l4455:	
  7632                           
  7633                           ;updates.c: 226:     unsigned char *clamp = &(p->claw1.clamped);
  7634  0D04  0834               	movf	testButtons@p,w
  7635  0D05  00B0               	movwf	??_testButtons
  7636  0D06  0830               	movf	??_testButtons,w
  7637  0D07  00B1               	movwf	testButtons@clamp
  7638  0D08                     l4457:	
  7639                           
  7640                           ;updates.c: 227:     unsigned char *rotate = &(p->claw1.orientation);
  7641  0D08  0834               	movf	testButtons@p,w
  7642  0D09  3E01               	addlw	1
  7643  0D0A  00B0               	movwf	??_testButtons
  7644  0D0B  0830               	movf	??_testButtons,w
  7645  0D0C  00B2               	movwf	testButtons@rotate
  7646  0D0D                     l4459:	
  7647                           
  7648                           ;updates.c: 228:     unsigned char *lift = &(p->claw1.height);
  7649  0D0D  0834               	movf	testButtons@p,w
  7650  0D0E  3E02               	addlw	2
  7651  0D0F  00B0               	movwf	??_testButtons
  7652  0D10  0830               	movf	??_testButtons,w
  7653  0D11  00B3               	movwf	testButtons@lift
  7654  0D12                     l4461:	
  7655                           
  7656                           ;updates.c: 231:     if(PORTBbits.RB0 == 0)
  7657  0D12  180D               	btfsc	13,0	;volatile
  7658  0D13  2D15               	goto	u3961
  7659  0D14  2D16               	goto	u3960
  7660  0D15                     u3961:	
  7661  0D15  2D1B               	goto	l4465
  7662  0D16                     u3960:	
  7663  0D16                     l4463:	
  7664                           
  7665                           ;updates.c: 232:         *clamp |= 0b00100000;
  7666  0D16  0831               	movf	testButtons@clamp,w
  7667  0D17  0086               	movwf	6
  7668  0D18  0187               	clrf	7
  7669  0D19  1681               	bsf	1,5
  7670  0D1A  2D22               	goto	l4467
  7671  0D1B                     l4465:	
  7672                           
  7673                           ;updates.c: 234:         *clamp &= 0b11011111;
  7674  0D1B  30DF               	movlw	223
  7675  0D1C  00B0               	movwf	??_testButtons
  7676  0D1D  0831               	movf	testButtons@clamp,w
  7677  0D1E  0086               	movwf	6
  7678  0D1F  0187               	clrf	7
  7679  0D20  0830               	movf	??_testButtons,w
  7680  0D21  0581               	andwf	1,f
  7681  0D22                     l4467:	
  7682                           
  7683                           ;updates.c: 236:     if(PORTBbits.RB1 == 0)
  7684  0D22  188D               	btfsc	13,1	;volatile
  7685  0D23  2D25               	goto	u3971
  7686  0D24  2D26               	goto	u3970
  7687  0D25                     u3971:	
  7688  0D25  2D2B               	goto	l4471
  7689  0D26                     u3970:	
  7690  0D26                     l4469:	
  7691                           
  7692                           ;updates.c: 237:         *clamp |= 0b00010000;
  7693  0D26  0831               	movf	testButtons@clamp,w
  7694  0D27  0086               	movwf	6
  7695  0D28  0187               	clrf	7
  7696  0D29  1601               	bsf	1,4
  7697  0D2A  2D32               	goto	l4473
  7698  0D2B                     l4471:	
  7699                           
  7700                           ;updates.c: 239:         *clamp &= 0b11101111;
  7701  0D2B  30EF               	movlw	239
  7702  0D2C  00B0               	movwf	??_testButtons
  7703  0D2D  0831               	movf	testButtons@clamp,w
  7704  0D2E  0086               	movwf	6
  7705  0D2F  0187               	clrf	7
  7706  0D30  0830               	movf	??_testButtons,w
  7707  0D31  0581               	andwf	1,f
  7708  0D32                     l4473:	
  7709                           
  7710                           ;updates.c: 241:     if(PORTBbits.RB2 == 0)
  7711  0D32  190D               	btfsc	13,2	;volatile
  7712  0D33  2D35               	goto	u3981
  7713  0D34  2D36               	goto	u3980
  7714  0D35                     u3981:	
  7715  0D35  2D3B               	goto	l4477
  7716  0D36                     u3980:	
  7717  0D36                     l4475:	
  7718                           
  7719                           ;updates.c: 242:         *rotate |= 0b00100000;
  7720  0D36  0832               	movf	testButtons@rotate,w
  7721  0D37  0086               	movwf	6
  7722  0D38  0187               	clrf	7
  7723  0D39  1681               	bsf	1,5
  7724  0D3A  2D42               	goto	l4479
  7725  0D3B                     l4477:	
  7726                           
  7727                           ;updates.c: 244:         *rotate &= 0b11011111;
  7728  0D3B  30DF               	movlw	223
  7729  0D3C  00B0               	movwf	??_testButtons
  7730  0D3D  0832               	movf	testButtons@rotate,w
  7731  0D3E  0086               	movwf	6
  7732  0D3F  0187               	clrf	7
  7733  0D40  0830               	movf	??_testButtons,w
  7734  0D41  0581               	andwf	1,f
  7735  0D42                     l4479:	
  7736                           
  7737                           ;updates.c: 246:     if(PORTBbits.RB3 == 0)
  7738  0D42  198D               	btfsc	13,3	;volatile
  7739  0D43  2D45               	goto	u3991
  7740  0D44  2D46               	goto	u3990
  7741  0D45                     u3991:	
  7742  0D45  2D4B               	goto	l4483
  7743  0D46                     u3990:	
  7744  0D46                     l4481:	
  7745                           
  7746                           ;updates.c: 247:         *rotate |= 0b00010000;
  7747  0D46  0832               	movf	testButtons@rotate,w
  7748  0D47  0086               	movwf	6
  7749  0D48  0187               	clrf	7
  7750  0D49  1601               	bsf	1,4
  7751  0D4A  2D52               	goto	l4485
  7752  0D4B                     l4483:	
  7753                           
  7754                           ;updates.c: 249:         *rotate &= 0b11101111;
  7755  0D4B  30EF               	movlw	239
  7756  0D4C  00B0               	movwf	??_testButtons
  7757  0D4D  0832               	movf	testButtons@rotate,w
  7758  0D4E  0086               	movwf	6
  7759  0D4F  0187               	clrf	7
  7760  0D50  0830               	movf	??_testButtons,w
  7761  0D51  0581               	andwf	1,f
  7762  0D52                     l4485:	
  7763                           
  7764                           ;updates.c: 251:     if(PORTAbits.RA6 == 0)
  7765  0D52  1B0C               	btfsc	12,6	;volatile
  7766  0D53  2D55               	goto	u4001
  7767  0D54  2D56               	goto	u4000
  7768  0D55                     u4001:	
  7769  0D55  2D5B               	goto	l4489
  7770  0D56                     u4000:	
  7771  0D56                     l4487:	
  7772                           
  7773                           ;updates.c: 252:         *lift |= 0b00100000;
  7774  0D56  0833               	movf	testButtons@lift,w
  7775  0D57  0086               	movwf	6
  7776  0D58  0187               	clrf	7
  7777  0D59  1681               	bsf	1,5
  7778  0D5A  2D62               	goto	l4491
  7779  0D5B                     l4489:	
  7780                           
  7781                           ;updates.c: 254:         *lift &= 0b11011111;
  7782  0D5B  30DF               	movlw	223
  7783  0D5C  00B0               	movwf	??_testButtons
  7784  0D5D  0833               	movf	testButtons@lift,w
  7785  0D5E  0086               	movwf	6
  7786  0D5F  0187               	clrf	7
  7787  0D60  0830               	movf	??_testButtons,w
  7788  0D61  0581               	andwf	1,f
  7789  0D62                     l4491:	
  7790                           
  7791                           ;updates.c: 256:     if(PORTAbits.RA7 == 0){
  7792  0D62  1B8C               	btfsc	12,7	;volatile
  7793  0D63  2D65               	goto	u4011
  7794  0D64  2D66               	goto	u4010
  7795  0D65                     u4011:	
  7796  0D65  2D6C               	goto	l4497
  7797  0D66                     u4010:	
  7798  0D66                     l4493:	
  7799                           
  7800                           ;updates.c: 257:         LATEbits.LATE2 = 1;
  7801  0D66  151A               	bsf	26,2	;volatile
  7802  0D67                     l4495:	
  7803                           
  7804                           ;updates.c: 258:         *lift |= 0b00010000;
  7805  0D67  0833               	movf	testButtons@lift,w
  7806  0D68  0086               	movwf	6
  7807  0D69  0187               	clrf	7
  7808  0D6A  1601               	bsf	1,4
  7809                           
  7810                           ;updates.c: 259:     }else{
  7811  0D6B  2D74               	goto	l4501
  7812  0D6C                     l4497:	
  7813                           
  7814                           ;updates.c: 260:         *lift &= 0b11101111;
  7815  0D6C  30EF               	movlw	239
  7816  0D6D  00B0               	movwf	??_testButtons
  7817  0D6E  0833               	movf	testButtons@lift,w
  7818  0D6F  0086               	movwf	6
  7819  0D70  0187               	clrf	7
  7820  0D71  0830               	movf	??_testButtons,w
  7821  0D72  0581               	andwf	1,f
  7822  0D73                     l4499:	
  7823                           
  7824                           ;updates.c: 261:         LATEbits.LATE2 = 0;
  7825  0D73  111A               	bcf	26,2	;volatile
  7826  0D74                     l4501:	
  7827                           
  7828                           ;updates.c: 264:     if(PORTEbits.RE1)
  7829  0D74  1C90               	btfss	16,1	;volatile
  7830  0D75  2D77               	goto	u4021
  7831  0D76  2D78               	goto	u4020
  7832  0D77                     u4021:	
  7833  0D77  2D7E               	goto	l4505
  7834  0D78                     u4020:	
  7835  0D78                     l4503:	
  7836                           
  7837                           ;updates.c: 265:         p->revolver.stat |= 0b00100000;
  7838  0D78  0834               	movf	testButtons@p,w
  7839  0D79  3E08               	addlw	8
  7840  0D7A  0086               	movwf	6
  7841  0D7B  0187               	clrf	7
  7842  0D7C  1681               	bsf	1,5
  7843  0D7D  2D86               	goto	l700
  7844  0D7E                     l4505:	
  7845                           
  7846                           ;updates.c: 267:         p->revolver.stat &= 0b11011111;
  7847  0D7E  30DF               	movlw	223
  7848  0D7F  00B0               	movwf	??_testButtons
  7849  0D80  0834               	movf	testButtons@p,w
  7850  0D81  3E08               	addlw	8
  7851  0D82  0086               	movwf	6
  7852  0D83  0187               	clrf	7
  7853  0D84  0830               	movf	??_testButtons,w
  7854  0D85  0581               	andwf	1,f
  7855  0D86                     l700:	
  7856  0D86  0008               	return
  7857  0D87                     __end_of_testButtons:	
  7858                           
  7859                           	psect	text10
  7860  09A6                     __ptext10:	
  7861 ;; *************** function _configureTimers *****************
  7862 ;; Defined at:
  7863 ;;		line 64 in file "configs.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;		None
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;		None
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  1    wreg      void 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7881 ;;Total ram usage:        0 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    7
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_main
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           
  7892                           ;psect for function _configureTimers
  7893  09A6                     _configureTimers:	
  7894  09A6                     l4761:	
  7895                           ;incstack = 0
  7896                           ; Regs used in _configureTimers: [wreg+status,2]
  7897                           
  7898                           
  7899                           ;configs.c: 65:     T0CON0 = 0b10010000;
  7900  09A6  3090               	movlw	144
  7901  09A7  0020               	movlb	0	; select bank0
  7902  09A8  009E               	movwf	30	;volatile
  7903                           
  7904                           ;configs.c: 66:  T0CON1 = 0b01001111;
  7905  09A9  304F               	movlw	79
  7906  09AA  009F               	movwf	31	;volatile
  7907                           
  7908                           ;configs.c: 74:  T2CLKCON = 0b00000001;
  7909  09AB  3001               	movlw	1
  7910  09AC  0025               	movlb	5	; select bank5
  7911  09AD  0090               	movwf	16	;volatile
  7912  09AE                     l4763:	
  7913                           
  7914                           ;configs.c: 75:  T2CON = 0b00000000;
  7915  09AE  018E               	clrf	14	;volatile
  7916  09AF                     l4765:	
  7917                           
  7918                           ;configs.c: 77:  T3CON = 0b00000001;
  7919  09AF  3001               	movlw	1
  7920  09B0  0024               	movlb	4	; select bank4
  7921  09B1  0094               	movwf	20	;volatile
  7922                           
  7923                           ;configs.c: 78:  T3GCON = 0b00000000;
  7924  09B2  0195               	clrf	21	;volatile
  7925  09B3                     l4767:	
  7926                           
  7927                           ;configs.c: 79:  T3CLK = 0b00000001;
  7928  09B3  3001               	movlw	1
  7929  09B4  0097               	movwf	23	;volatile
  7930  09B5                     l240:	
  7931  09B5  0008               	return
  7932  09B6                     __end_of_configureTimers:	
  7933                           
  7934                           	psect	text11
  7935  0C30                     __ptext11:	
  7936 ;; *************** function _configurePWM *****************
  7937 ;; Defined at:
  7938 ;;		line 101 in file "configs.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;		None
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;		None
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  1    wreg      void 
  7945 ;; Registers used:
  7946 ;;		wreg, status,2
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;Total ram usage:        0 bytes
  7957 ;; Hardware stack levels used:    1
  7958 ;; Hardware stack levels required when called:    7
  7959 ;; This function calls:
  7960 ;;		Nothing
  7961 ;; This function is called by:
  7962 ;;		_main
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           
  7967                           ;psect for function _configurePWM
  7968  0C30                     _configurePWM:	
  7969  0C30                     l4771:	
  7970                           ;incstack = 0
  7971                           ; Regs used in _configurePWM: [wreg+status,2]
  7972                           
  7973                           
  7974                           ;configs.c: 102:     PR2 = 0xFF;
  7975  0C30  30FF               	movlw	255
  7976  0C31  0025               	movlb	5	; select bank5
  7977  0C32  008D               	movwf	13	;volatile
  7978                           
  7979                           ;configs.c: 104:     CCP1CON = 0b10011111;
  7980  0C33  309F               	movlw	159
  7981  0C34  0026               	movlb	6	; select bank6
  7982  0C35  008E               	movwf	14	;volatile
  7983                           
  7984                           ;configs.c: 105:     CCP2CON = 0b10011111;
  7985  0C36  309F               	movlw	159
  7986  0C37  0092               	movwf	18	;volatile
  7987                           
  7988                           ;configs.c: 106:     CCP3CON = 0b10011111;
  7989  0C38  309F               	movlw	159
  7990  0C39  0096               	movwf	22	;volatile
  7991                           
  7992                           ;configs.c: 107:     CCP4CON = 0b10011111;
  7993  0C3A  309F               	movlw	159
  7994  0C3B  009A               	movwf	26	;volatile
  7995                           
  7996                           ;configs.c: 108:     CCP5CON = 0b10011111;
  7997  0C3C  309F               	movlw	159
  7998  0C3D  009E               	movwf	30	;volatile
  7999  0C3E                     l4773:	
  8000                           
  8001                           ;configs.c: 109:     PWM6CON = 0b00000000;
  8002  0C3E  0027               	movlb	7	; select bank7
  8003  0C3F  018E               	clrf	14	;volatile
  8004  0C40                     l4775:	
  8005                           
  8006                           ;configs.c: 110:     PWM7CON = 0b00000000;
  8007  0C40  0192               	clrf	18	;volatile
  8008  0C41                     l4777:	
  8009                           
  8010                           ;configs.c: 112:     CCPR1L = 0;
  8011  0C41  0026               	movlb	6	; select bank6
  8012  0C42  018C               	clrf	12	;volatile
  8013  0C43                     l4779:	
  8014                           
  8015                           ;configs.c: 113:     CCPR2L = 0;
  8016  0C43  0190               	clrf	16	;volatile
  8017  0C44                     l4781:	
  8018                           
  8019                           ;configs.c: 114:     CCPR3L = 0;
  8020  0C44  0194               	clrf	20	;volatile
  8021  0C45                     l4783:	
  8022                           
  8023                           ;configs.c: 115:     CCPR4L = 0;
  8024  0C45  0198               	clrf	24	;volatile
  8025  0C46                     l4785:	
  8026                           
  8027                           ;configs.c: 116:     CCPR5L = 0;
  8028  0C46  019C               	clrf	28	;volatile
  8029  0C47                     l4787:	
  8030                           
  8031                           ;configs.c: 117:     PWM6DCL = 0;
  8032  0C47  0027               	movlb	7	; select bank7
  8033  0C48  018C               	clrf	12	;volatile
  8034  0C49                     l4789:	
  8035                           
  8036                           ;configs.c: 118:     PWM7DCL = 0;
  8037  0C49  0190               	clrf	16	;volatile
  8038  0C4A                     l4791:	
  8039                           
  8040                           ;configs.c: 120:     CCPR1H = 0;
  8041  0C4A  0026               	movlb	6	; select bank6
  8042  0C4B  018D               	clrf	13	;volatile
  8043  0C4C                     l4793:	
  8044                           
  8045                           ;configs.c: 121:     CCPR2H = 0;
  8046  0C4C  0191               	clrf	17	;volatile
  8047  0C4D                     l4795:	
  8048                           
  8049                           ;configs.c: 122:     CCPR3H = 0;
  8050  0C4D  0195               	clrf	21	;volatile
  8051  0C4E                     l4797:	
  8052                           
  8053                           ;configs.c: 123:     CCPR4H = 0;
  8054  0C4E  0199               	clrf	25	;volatile
  8055  0C4F                     l4799:	
  8056                           
  8057                           ;configs.c: 124:     CCPR5H = 0;
  8058  0C4F  019D               	clrf	29	;volatile
  8059  0C50                     l4801:	
  8060                           
  8061                           ;configs.c: 125:     PWM6DCH = 0;
  8062  0C50  0027               	movlb	7	; select bank7
  8063  0C51  018D               	clrf	13	;volatile
  8064  0C52                     l4803:	
  8065                           
  8066                           ;configs.c: 126:     PWM7DCH = 250;
  8067  0C52  30FA               	movlw	250
  8068  0C53  0091               	movwf	17	;volatile
  8069  0C54                     l4805:	
  8070                           
  8071                           ;configs.c: 128:     CWG3CON0 = 0b00000100;
  8072  0C54  3004               	movlw	4
  8073  0C55  002D               	movlb	13	; select bank13
  8074  0C56  0090               	movwf	16	;volatile
  8075  0C57                     l4807:	
  8076                           
  8077                           ;configs.c: 129:     CWG3CON1 = 0b00000000;
  8078  0C57  0191               	clrf	17	;volatile
  8079                           
  8080                           ;configs.c: 130:     CWG3DBR = 0x10;
  8081  0C58  3010               	movlw	16
  8082  0C59  008E               	movwf	14	;volatile
  8083                           
  8084                           ;configs.c: 131:     CWG3DBF = 0x10;
  8085  0C5A  3010               	movlw	16
  8086  0C5B  008F               	movwf	15	;volatile
  8087  0C5C                     l4809:	
  8088                           
  8089                           ;configs.c: 132:     CWG3CLKCON = 0;
  8090  0C5C  018C               	clrf	12	;volatile
  8091  0C5D                     l4811:	
  8092                           
  8093                           ;configs.c: 133:     CWG3ISM = 0b0111;
  8094  0C5D  3007               	movlw	7
  8095  0C5E  008D               	movwf	13	;volatile
  8096  0C5F                     l4813:	
  8097                           
  8098                           ;configs.c: 134:     CWG3CON0bits.EN = 1;
  8099  0C5F  1790               	bsf	16,7	;volatile
  8100  0C60                     l4815:	
  8101                           
  8102                           ;configs.c: 135:     CWG3CON0bits.LD = 1;
  8103  0C60  1710               	bsf	16,6	;volatile
  8104  0C61                     l4817:	
  8105                           
  8106                           ;configs.c: 137:     CWG1CON0 = 0b00000100;
  8107  0C61  3004               	movlw	4
  8108  0C62  002C               	movlb	12	; select bank12
  8109  0C63  0090               	movwf	16	;volatile
  8110  0C64                     l4819:	
  8111                           
  8112                           ;configs.c: 138:     CWG1CON1 = 0b00000000;
  8113  0C64  0191               	clrf	17	;volatile
  8114                           
  8115                           ;configs.c: 139:     CWG1DBR = 0x10;
  8116  0C65  3010               	movlw	16
  8117  0C66  008E               	movwf	14	;volatile
  8118                           
  8119                           ;configs.c: 140:     CWG1DBF = 0x10;
  8120  0C67  3010               	movlw	16
  8121  0C68  008F               	movwf	15	;volatile
  8122  0C69                     l4821:	
  8123                           
  8124                           ;configs.c: 141:     CWG1CLKCON = 0;
  8125  0C69  018C               	clrf	12	;volatile
  8126  0C6A                     l4823:	
  8127                           
  8128                           ;configs.c: 142:     CWG1ISM = 0b0111;
  8129  0C6A  3007               	movlw	7
  8130  0C6B  008D               	movwf	13	;volatile
  8131  0C6C                     l4825:	
  8132                           
  8133                           ;configs.c: 143:     CWG1CON0bits.EN = 1;
  8134  0C6C  1790               	bsf	16,7	;volatile
  8135  0C6D                     l4827:	
  8136                           
  8137                           ;configs.c: 144:     CWG1CON0bits.LD = 1;
  8138  0C6D  1710               	bsf	16,6	;volatile
  8139                           
  8140                           ;configs.c: 146:     CLC1CON = 0b00000000;
  8141  0C6E  003C               	movlb	28	; select bank28
  8142  0C6F  0190               	clrf	16	;volatile
  8143  0C70                     l4829:	
  8144                           
  8145                           ;configs.c: 147:     CLC1SEL0 = 0b00101010;
  8146  0C70  302A               	movlw	42
  8147  0C71  0092               	movwf	18	;volatile
  8148  0C72                     l4831:	
  8149                           
  8150                           ;configs.c: 148:     CLC1SEL1 = 0b00101010;
  8151  0C72  302A               	movlw	42
  8152  0C73  0093               	movwf	19	;volatile
  8153                           
  8154                           ;configs.c: 149:     CLC1POL = 0b00000000;
  8155  0C74  0191               	clrf	17	;volatile
  8156  0C75                     l4833:	
  8157                           
  8158                           ;configs.c: 150:     CLC1GLS0 = 0b00000010;
  8159  0C75  3002               	movlw	2
  8160  0C76  0096               	movwf	22	;volatile
  8161  0C77                     l4835:	
  8162                           
  8163                           ;configs.c: 151:     CLC1GLS1 = 0b00001000;
  8164  0C77  3008               	movlw	8
  8165  0C78  0097               	movwf	23	;volatile
  8166                           
  8167                           ;configs.c: 152:     CLC1GLS2 = 0;
  8168  0C79  0198               	clrf	24	;volatile
  8169                           
  8170                           ;configs.c: 153:     CLC1GLS3 = 0;
  8171  0C7A  0199               	clrf	25	;volatile
  8172  0C7B                     l4837:	
  8173                           
  8174                           ;configs.c: 154:     CLC1CONbits.LC1EN = 1;
  8175  0C7B  1790               	bsf	16,7	;volatile
  8176                           
  8177                           ;configs.c: 156:     CLC2CON = 0b00000000;
  8178  0C7C  019A               	clrf	26	;volatile
  8179  0C7D                     l4839:	
  8180                           
  8181                           ;configs.c: 157:     CLC2SEL0 = 0b00101011;
  8182  0C7D  302B               	movlw	43
  8183  0C7E  009C               	movwf	28	;volatile
  8184  0C7F                     l4841:	
  8185                           
  8186                           ;configs.c: 158:     CLC2SEL1 = 0b00101011;
  8187  0C7F  302B               	movlw	43
  8188  0C80  009D               	movwf	29	;volatile
  8189                           
  8190                           ;configs.c: 159:     CLC2POL = 0b00000000;
  8191  0C81  019B               	clrf	27	;volatile
  8192  0C82                     l4843:	
  8193                           
  8194                           ;configs.c: 160:     CLC2GLS0 = 0b00000010;
  8195  0C82  3002               	movlw	2
  8196  0C83  00A0               	movwf	32	;volatile
  8197  0C84                     l4845:	
  8198                           
  8199                           ;configs.c: 161:     CLC2GLS1 = 0b00001000;
  8200  0C84  3008               	movlw	8
  8201  0C85  00A1               	movwf	33	;volatile
  8202                           
  8203                           ;configs.c: 162:     CLC2GLS2 = 0;
  8204  0C86  01A2               	clrf	34	;volatile
  8205                           
  8206                           ;configs.c: 163:     CLC2GLS3 = 0;
  8207  0C87  01A3               	clrf	35	;volatile
  8208  0C88                     l4847:	
  8209                           
  8210                           ;configs.c: 164:     CLC2CONbits.LC2EN = 1;
  8211  0C88  179A               	bsf	26,7	;volatile
  8212  0C89                     l4849:	
  8213                           
  8214                           ;configs.c: 166:     PIR4bits.TMR2IF = 0;
  8215  0C89  002E               	movlb	14	; select bank14
  8216  0C8A  1090               	bcf	16,1	;volatile
  8217  0C8B                     l4851:	
  8218                           
  8219                           ;configs.c: 167:     T2CONbits.ON = 1;
  8220  0C8B  0025               	movlb	5	; select bank5
  8221  0C8C  178E               	bsf	14,7	;volatile
  8222  0C8D                     l4853:	
  8223                           
  8224                           ;configs.c: 168:     PWM6CONbits.EN = 1;
  8225  0C8D  0027               	movlb	7	; select bank7
  8226  0C8E  178E               	bsf	14,7	;volatile
  8227  0C8F                     l4855:	
  8228                           
  8229                           ;configs.c: 169:     PWM7CONbits.EN = 1;
  8230  0C8F  1792               	bsf	18,7	;volatile
  8231  0C90                     l249:	
  8232  0C90  0008               	return
  8233  0C91                     __end_of_configurePWM:	
  8234                           
  8235                           	psect	text12
  8236  0A38                     __ptext12:	
  8237 ;; *************** function _configureIOs *****************
  8238 ;; Defined at:
  8239 ;;		line 14 in file "configs.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;		None
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;		None
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  1    wreg      void 
  8246 ;; Registers used:
  8247 ;;		wreg, status,2
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8257 ;;Total ram usage:        0 bytes
  8258 ;; Hardware stack levels used:    1
  8259 ;; Hardware stack levels required when called:    7
  8260 ;; This function calls:
  8261 ;;		Nothing
  8262 ;; This function is called by:
  8263 ;;		_main
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           
  8268                           ;psect for function _configureIOs
  8269  0A38                     _configureIOs:	
  8270  0A38                     l4741:	
  8271                           ;incstack = 0
  8272                           ; Regs used in _configureIOs: [wreg+status,2]
  8273                           
  8274                           
  8275                           ;configs.c: 15:     LATA = 0;
  8276  0A38  0020               	movlb	0	; select bank0
  8277  0A39  0196               	clrf	22	;volatile
  8278                           
  8279                           ;configs.c: 16:     LATB = 0;
  8280  0A3A  0197               	clrf	23	;volatile
  8281                           
  8282                           ;configs.c: 17:     LATC = 0;
  8283  0A3B  0198               	clrf	24	;volatile
  8284                           
  8285                           ;configs.c: 18:     LATD = 0;
  8286  0A3C  0199               	clrf	25	;volatile
  8287                           
  8288                           ;configs.c: 19:     LATE = 0;
  8289  0A3D  019A               	clrf	26	;volatile
  8290                           
  8291                           ;configs.c: 21:     INLVLA = 0;
  8292  0A3E  003E               	movlb	30	; select bank30
  8293  0A3F  01BC               	clrf	60	;volatile
  8294                           
  8295                           ;configs.c: 22:     INLVLB = 0;
  8296  0A40  01C7               	clrf	71	;volatile
  8297                           
  8298                           ;configs.c: 23:     INLVLE = 0;
  8299  0A41  01E8               	clrf	104	;volatile
  8300                           
  8301                           ;configs.c: 25:     RA7PPS = 0;
  8302  0A42  0197               	clrf	23	;volatile
  8303                           
  8304                           ;configs.c: 26:     RA6PPS = 0;
  8305  0A43  0196               	clrf	22	;volatile
  8306  0A44                     l4743:	
  8307                           
  8308                           ;configs.c: 28:     TRISA = 0b11000000;
  8309  0A44  30C0               	movlw	192
  8310  0A45  0020               	movlb	0	; select bank0
  8311  0A46  0091               	movwf	17	;volatile
  8312  0A47                     l4745:	
  8313                           
  8314                           ;configs.c: 29:     TRISB = 0b11001111;
  8315  0A47  30CF               	movlw	207
  8316  0A48  0092               	movwf	18	;volatile
  8317                           
  8318                           ;configs.c: 30:     TRISC = 0b00000000;
  8319  0A49  0193               	clrf	19	;volatile
  8320                           
  8321                           ;configs.c: 31:     TRISD = 0b00000000;
  8322  0A4A  0194               	clrf	20	;volatile
  8323  0A4B                     l4747:	
  8324                           
  8325                           ;configs.c: 32:     TRISE = 0b0011;
  8326  0A4B  3003               	movlw	3
  8327  0A4C  0095               	movwf	21	;volatile
  8328  0A4D                     l4749:	
  8329                           
  8330                           ;configs.c: 34:     WPUA = 0b11000000;
  8331  0A4D  30C0               	movlw	192
  8332  0A4E  003E               	movlb	30	; select bank30
  8333  0A4F  00B9               	movwf	57	;volatile
  8334  0A50                     l4751:	
  8335                           
  8336                           ;configs.c: 35:     WPUB = 0b11001111;
  8337  0A50  30CF               	movlw	207
  8338  0A51  00C4               	movwf	68	;volatile
  8339  0A52                     l4753:	
  8340                           
  8341                           ;configs.c: 36:     WPUC = 0;
  8342  0A52  01CF               	clrf	79	;volatile
  8343  0A53                     l4755:	
  8344                           
  8345                           ;configs.c: 37:     WPUD = 0;
  8346  0A53  01DA               	clrf	90	;volatile
  8347  0A54                     l4757:	
  8348                           
  8349                           ;configs.c: 38:     WPUE = 0b0111;
  8350  0A54  3007               	movlw	7
  8351  0A55  00E5               	movwf	101	;volatile
  8352                           
  8353                           ;configs.c: 40:     ANSELA = 0;
  8354  0A56  01B8               	clrf	56	;volatile
  8355                           
  8356                           ;configs.c: 41:     ANSELB = 0;
  8357  0A57  01C3               	clrf	67	;volatile
  8358                           
  8359                           ;configs.c: 42:     ANSELC = 0;
  8360  0A58  01CE               	clrf	78	;volatile
  8361                           
  8362                           ;configs.c: 43:     ANSELD = 0;
  8363  0A59  01D9               	clrf	89	;volatile
  8364  0A5A                     l4759:	
  8365                           
  8366                           ;configs.c: 44:     ANSELE = 1;
  8367  0A5A  3001               	movlw	1
  8368  0A5B  00E4               	movwf	100	;volatile
  8369  0A5C                     l234:	
  8370  0A5C  0008               	return
  8371  0A5D                     __end_of_configureIOs:	
  8372                           
  8373                           	psect	text13
  8374  09CB                     __ptext13:	
  8375 ;; *************** function _configureI2C *****************
  8376 ;; Defined at:
  8377 ;;		line 83 in file "configs.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;		None
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;		None
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  1    wreg      void 
  8384 ;; Registers used:
  8385 ;;		wreg
  8386 ;; Tracked objects:
  8387 ;;		On entry : 0/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;Total ram usage:        0 bytes
  8396 ;; Hardware stack levels used:    1
  8397 ;; Hardware stack levels required when called:    7
  8398 ;; This function calls:
  8399 ;;		Nothing
  8400 ;; This function is called by:
  8401 ;;		_main
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           
  8406                           ;psect for function _configureI2C
  8407  09CB                     _configureI2C:	
  8408  09CB                     l4769:	
  8409                           ;incstack = 0
  8410                           ; Regs used in _configureI2C: [wreg]
  8411                           
  8412                           
  8413                           ;configs.c: 84:  SSP1STAT = 0b01000000;
  8414  09CB  3040               	movlw	64
  8415  09CC  0023               	movlb	3	; select bank3
  8416  09CD  008F               	movwf	15	;volatile
  8417                           
  8418                           ;configs.c: 85:     SSP1CON1 = 0b00100110;
  8419  09CE  3026               	movlw	38
  8420  09CF  0090               	movwf	16	;volatile
  8421                           
  8422                           ;configs.c: 86:     SSP1CON2 = 0b00000001;
  8423  09D0  3001               	movlw	1
  8424  09D1  0091               	movwf	17	;volatile
  8425                           
  8426                           ;configs.c: 87:     SSP1CON3 = 0b00101011;
  8427  09D2  302B               	movlw	43
  8428  09D3  0092               	movwf	18	;volatile
  8429                           
  8430                           ;configs.c: 88:     SSP1ADD = 0b00110010;
  8431  09D4  3032               	movlw	50
  8432  09D5  008D               	movwf	13	;volatile
  8433                           
  8434                           ;configs.c: 90:     SSP1CLKPPS = 0x0E;
  8435  09D6  300E               	movlw	14
  8436  09D7  003D               	movlb	29	; select bank29
  8437  09D8  00C5               	movwf	69	;volatile
  8438                           
  8439                           ;configs.c: 91:     SSP1DATPPS = 0x0F;
  8440  09D9  300F               	movlw	15
  8441  09DA  00C6               	movwf	70	;volatile
  8442                           
  8443                           ;configs.c: 92:     RB6PPS = 0x14;
  8444  09DB  3014               	movlw	20
  8445  09DC  003E               	movlb	30	; select bank30
  8446  09DD  009E               	movwf	30	;volatile
  8447                           
  8448                           ;configs.c: 93:     RB7PPS = 0x15;
  8449  09DE  3015               	movlw	21
  8450  09DF  009F               	movwf	31	;volatile
  8451  09E0                     l243:	
  8452  09E0  0008               	return
  8453  09E1                     __end_of_configureI2C:	
  8454                           
  8455                           	psect	text14
  8456  099C                     __ptext14:	
  8457 ;; *************** function _configureCPU *****************
  8458 ;; Defined at:
  8459 ;;		line 6 in file "configs.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;		None
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;		None
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  1    wreg      void 
  8466 ;; Registers used:
  8467 ;;		wreg
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8477 ;;Total ram usage:        0 bytes
  8478 ;; Hardware stack levels used:    1
  8479 ;; Hardware stack levels required when called:    7
  8480 ;; This function calls:
  8481 ;;		Nothing
  8482 ;; This function is called by:
  8483 ;;		_main
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           
  8488                           ;psect for function _configureCPU
  8489  099C                     _configureCPU:	
  8490  099C                     l4737:	
  8491                           ;incstack = 0
  8492                           ; Regs used in _configureCPU: [wreg]
  8493                           
  8494                           
  8495                           ;configs.c: 7:     OSCCON1 = 0b01100000;
  8496  099C  3060               	movlw	96
  8497  099D  0031               	movlb	17	; select bank17
  8498  099E  008D               	movwf	13	;volatile
  8499                           
  8500                           ;configs.c: 8:     OSCFRQ = 0b110;
  8501  099F  3006               	movlw	6
  8502  09A0  0093               	movwf	19	;volatile
  8503                           
  8504                           ;configs.c: 10:     INTCON = 0b11000000;
  8505  09A1  30C0               	movlw	192
  8506  09A2  008B               	movwf	11	;volatile
  8507  09A3                     l4739:	
  8508                           
  8509                           ;configs.c: 11:     PIE3bits.SSP1IE = 1;
  8510  09A3  002E               	movlb	14	; select bank14
  8511  09A4  1419               	bsf	25,0	;volatile
  8512  09A5                     l231:	
  8513  09A5  0008               	return
  8514  09A6                     __end_of_configureCPU:	
  8515                           
  8516                           	psect	intentry
  8517  0004                     __pintentry:	
  8518 ;; *************** function _ISR *****************
  8519 ;; Defined at:
  8520 ;;		line 54 in file "Main.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;		None
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;		None
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8538 ;;Total ram usage:        0 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; Hardware stack levels required when called:    6
  8541 ;; This function calls:
  8542 ;;		_i2cISR
  8543 ;; This function is called by:
  8544 ;;		Interrupt level 1
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548  0004                     _ISR:	
  8549                           
  8550                           ;incstack = 0
  8551  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8552                           
  8553                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8554  0005  3180               	pagesel	$
  8555  0006                     i1l4889:	
  8556                           
  8557                           ;Main.c: 55:     if(PIR3bits.SSP1IF == 1){
  8558  0006  002E               	movlb	14	; select bank14
  8559  0007  1C0F               	btfss	15,0	;volatile
  8560  0008  280A               	goto	u462_21
  8561  0009  280B               	goto	u462_20
  8562  000A                     u462_21:	
  8563  000A  280E               	goto	i1l337
  8564  000B                     u462_20:	
  8565  000B                     i1l4891:	
  8566                           
  8567                           ;Main.c: 57:         i2cISR();
  8568  000B  318A  2285  3180   	fcall	_i2cISR
  8569  000E                     i1l337:	
  8570  000E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8571  000F  0009               	retfie
  8572  0010                     __end_of_ISR:	
  8573                           
  8574                           	psect	text16
  8575  0A85                     __ptext16:	
  8576 ;; *************** function _i2cISR *****************
  8577 ;; Defined at:
  8578 ;;		line 18 in file "i2c.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;		None
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  d               1   15[BANK0 ] unsigned char 
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  1    wreg      void 
  8585 ;; Registers used:
  8586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8595 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8596 ;;Total ram usage:        2 bytes
  8597 ;; Hardware stack levels used:    1
  8598 ;; Hardware stack levels required when called:    5
  8599 ;; This function calls:
  8600 ;;		_handleRead
  8601 ;;		_handleWrite
  8602 ;; This function is called by:
  8603 ;;		_ISR
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           
  8608                           ;psect for function _i2cISR
  8609  0A85                     _i2cISR:	
  8610  0A85                     i1l4857:	
  8611                           ;incstack = 0
  8612                           ; Regs used in _i2cISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8613                           
  8614  0A85                     i1l4859:	
  8615                           
  8616                           ;i2c.c: 20:     SSP1IF = 0;
  8617  0A85  002E               	movlb	14	; select bank14
  8618  0A86  100F               	bcf	15,0	;volatile
  8619  0A87                     i1l4861:	
  8620                           
  8621                           ;i2c.c: 21:     d = SSP1BUF;
  8622  0A87  0023               	movlb	3	; select bank3
  8623  0A88  080C               	movf	12,w	;volatile
  8624  0A89  0020               	movlb	0	; select bank0
  8625  0A8A  00AE               	movwf	??_i2cISR
  8626  0A8B  082E               	movf	??_i2cISR,w
  8627  0A8C  00AF               	movwf	i2cISR@d
  8628  0A8D                     i1l4863:	
  8629                           
  8630                           ;i2c.c: 22:     if(SSP1CON3bits.ACKTIM){
  8631  0A8D  0023               	movlb	3	; select bank3
  8632  0A8E  1F92               	btfss	18,7	;volatile
  8633  0A8F  2A91               	goto	u457_21
  8634  0A90  2A92               	goto	u457_20
  8635  0A91                     u457_21:	
  8636  0A91  2AA0               	goto	i1l280
  8637  0A92                     u457_20:	
  8638  0A92                     i1l4865:	
  8639                           
  8640                           ;i2c.c: 23:         if(SSP1STATbits.D_nA){
  8641  0A92  1E8F               	btfss	15,5	;volatile
  8642  0A93  2A95               	goto	u458_21
  8643  0A94  2A96               	goto	u458_20
  8644  0A95                     u458_21:	
  8645  0A95  2AB1               	goto	i1l4879
  8646  0A96                     u458_20:	
  8647  0A96                     i1l4867:	
  8648                           
  8649                           ;i2c.c: 24:             if(SSP1STATbits.R_nW == 0)
  8650  0A96  190F               	btfsc	15,2	;volatile
  8651  0A97  2A99               	goto	u459_21
  8652  0A98  2A9A               	goto	u459_20
  8653  0A99                     u459_21:	
  8654  0A99  2AB1               	goto	i1l4879
  8655  0A9A                     u459_20:	
  8656  0A9A                     i1l4869:	
  8657                           
  8658                           ;i2c.c: 25:                 handleWrite(d);
  8659  0A9A  0020               	movlb	0	; select bank0
  8660  0A9B  082F               	movf	i2cISR@d,w
  8661  0A9C  318B  2334  318A   	fcall	_handleWrite
  8662  0A9F  2AB1               	goto	i1l4879
  8663  0AA0                     i1l280:	
  8664                           
  8665                           ;i2c.c: 28:         if(!SSP1STATbits.D_nA){
  8666  0AA0  1A8F               	btfsc	15,5	;volatile
  8667  0AA1  2AA3               	goto	u460_21
  8668  0AA2  2AA4               	goto	u460_20
  8669  0AA3                     u460_21:	
  8670  0AA3  2AB1               	goto	i1l4879
  8671  0AA4                     u460_20:	
  8672  0AA4                     i1l4871:	
  8673                           
  8674                           ;i2c.c: 29:             i2c_status = I2C_OPTIONS;
  8675  0AA4  0020               	movlb	0	; select bank0
  8676  0AA5  01D8               	clrf	_i2c_status
  8677  0AA6                     i1l4873:	
  8678                           
  8679                           ;i2c.c: 30:             if(SSP1STATbits.R_nW == 0)
  8680  0AA6  0023               	movlb	3	; select bank3
  8681  0AA7  190F               	btfsc	15,2	;volatile
  8682  0AA8  2AAA               	goto	u461_21
  8683  0AA9  2AAB               	goto	u461_20
  8684  0AAA                     u461_21:	
  8685  0AAA  2AAE               	goto	i1l4877
  8686  0AAB                     u461_20:	
  8687  0AAB                     i1l4875:	
  8688                           
  8689                           ;i2c.c: 31:                 i2c_settings = 0;
  8690  0AAB  0020               	movlb	0	; select bank0
  8691  0AAC  01D7               	clrf	_i2c_settings
  8692  0AAD  2AB1               	goto	i1l4879
  8693  0AAE                     i1l4877:	
  8694                           
  8695                           ;i2c.c: 33:                 handleRead();
  8696  0AAE  318A  22B5  318A   	fcall	_handleRead
  8697  0AB1                     i1l4879:	
  8698                           
  8699                           ;i2c.c: 36:     SSP1CON2bits.ACKDT = 0;
  8700  0AB1  0023               	movlb	3	; select bank3
  8701  0AB2  1291               	bcf	17,5	;volatile
  8702  0AB3                     i1l4881:	
  8703                           
  8704                           ;i2c.c: 37:     SSP1CON1bits.CKP = 1;
  8705  0AB3  1610               	bsf	16,4	;volatile
  8706  0AB4                     i1l287:	
  8707  0AB4  0008               	return
  8708  0AB5                     __end_of_i2cISR:	
  8709                           
  8710                           	psect	text17
  8711  0B34                     __ptext17:	
  8712 ;; *************** function _handleWrite *****************
  8713 ;; Defined at:
  8714 ;;		line 40 in file "i2c.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;  d               1    wreg     unsigned char 
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;  d               1   13[BANK0 ] unsigned char 
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      void 
  8721 ;; Registers used:
  8722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8730 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8731 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8732 ;;Total ram usage:        4 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; Hardware stack levels required when called:    4
  8735 ;; This function calls:
  8736 ;;		_setStatus
  8737 ;; This function is called by:
  8738 ;;		_i2cISR
  8739 ;; This function uses a non-reentrant model
  8740 ;;
  8741                           
  8742                           
  8743                           ;psect for function _handleWrite
  8744  0B34                     _handleWrite:	
  8745                           
  8746                           ;incstack = 0
  8747                           ; Regs used in _handleWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8748                           ;handleWrite@d stored from wreg
  8749  0B34  0020               	movlb	0	; select bank0
  8750  0B35  00AD               	movwf	handleWrite@d
  8751  0B36                     i1l4413:	
  8752                           
  8753                           ;i2c.c: 41:     switch(i2c_status){
  8754  0B36  2B73               	goto	i1l4435
  8755  0B37                     i1l4415:	
  8756                           
  8757                           ;i2c.c: 43:             i2c_settings = d;
  8758  0B37  082D               	movf	handleWrite@d,w
  8759  0B38  00AA               	movwf	??_handleWrite
  8760  0B39  082A               	movf	??_handleWrite,w
  8761  0B3A  00D7               	movwf	_i2c_settings
  8762  0B3B                     i1l4417:	
  8763                           
  8764                           ;i2c.c: 44:             if(!i2c_settings)LATEbits.LATE2 = 1;
  8765  0B3B  0857               	movf	_i2c_settings,w
  8766  0B3C  1D03               	btfss	3,2
  8767  0B3D  2B3F               	goto	u394_21
  8768  0B3E  2B40               	goto	u394_20
  8769  0B3F                     u394_21:	
  8770  0B3F  2B41               	goto	i1l292
  8771  0B40                     u394_20:	
  8772  0B40                     i1l4419:	
  8773  0B40  151A               	bsf	26,2	;volatile
  8774  0B41                     i1l292:	
  8775                           
  8776                           ;i2c.c: 45:             i2c_status = I2C_VALUE;
  8777  0B41  01D8               	clrf	_i2c_status
  8778  0B42  0AD8               	incf	_i2c_status,f
  8779                           
  8780                           ;i2c.c: 46:             break;
  8781  0B43  2B86               	goto	i1l297
  8782  0B44                     i1l4421:	
  8783                           
  8784                           ;i2c.c: 48:             i2c_val = d;
  8785  0B44  082D               	movf	handleWrite@d,w
  8786  0B45  00AA               	movwf	??_handleWrite
  8787  0B46  082A               	movf	??_handleWrite,w
  8788  0B47  00D6               	movwf	_i2c_val
  8789  0B48                     i1l4423:	
  8790                           
  8791                           ;i2c.c: 49:             setStatus(i2c_settings,i2c_val,-1);
  8792  0B48  0856               	movf	_i2c_val,w
  8793  0B49  00AA               	movwf	??_handleWrite
  8794  0B4A  082A               	movf	??_handleWrite,w
  8795  0B4B  00A2               	movwf	setStatus@v
  8796  0B4C  30FF               	movlw	255
  8797  0B4D  00A3               	movwf	setStatus@v2
  8798  0B4E  30FF               	movlw	255
  8799  0B4F  00A4               	movwf	setStatus@v2+1
  8800  0B50  0857               	movf	_i2c_settings,w
  8801  0B51  318C  2491  318B   	fcall	_setStatus
  8802  0B54                     i1l4425:	
  8803                           
  8804                           ;i2c.c: 50:             i2c_status = I2C_VALUE2;
  8805  0B54  3002               	movlw	2
  8806  0B55  0020               	movlb	0	; select bank0
  8807  0B56  00AA               	movwf	??_handleWrite
  8808  0B57  082A               	movf	??_handleWrite,w
  8809  0B58  00D8               	movwf	_i2c_status
  8810                           
  8811                           ;i2c.c: 51:             break;
  8812  0B59  2B86               	goto	i1l297
  8813  0B5A                     i1l4427:	
  8814                           
  8815                           ;i2c.c: 54:             setStatus(i2c_settings,i2c_val,(int)d);
  8816  0B5A  0856               	movf	_i2c_val,w
  8817  0B5B  00AA               	movwf	??_handleWrite
  8818  0B5C  082A               	movf	??_handleWrite,w
  8819  0B5D  00A2               	movwf	setStatus@v
  8820  0B5E  082D               	movf	handleWrite@d,w
  8821  0B5F  00AB               	movwf	??_handleWrite+1
  8822  0B60  01AC               	clrf	??_handleWrite+2
  8823  0B61  082B               	movf	??_handleWrite+1,w
  8824  0B62  00A3               	movwf	setStatus@v2
  8825  0B63  082C               	movf	??_handleWrite+2,w
  8826  0B64  00A4               	movwf	setStatus@v2+1
  8827  0B65  0857               	movf	_i2c_settings,w
  8828  0B66  318C  2491  318B   	fcall	_setStatus
  8829  0B69                     i1l4429:	
  8830                           
  8831                           ;i2c.c: 55:             i2c_status = I2C_OPTIONS;
  8832  0B69  0020               	movlb	0	; select bank0
  8833  0B6A  01D8               	clrf	_i2c_status
  8834                           
  8835                           ;i2c.c: 56:             break;
  8836  0B6B  2B86               	goto	i1l297
  8837  0B6C                     i1l296:	
  8838                           ;i2c.c: 57:         default:
  8839                           
  8840                           
  8841                           ;i2c.c: 58:             i2c_status = I2C_VALUE;
  8842  0B6C  01D8               	clrf	_i2c_status
  8843  0B6D  0AD8               	incf	_i2c_status,f
  8844  0B6E                     i1l4431:	
  8845                           
  8846                           ;i2c.c: 59:             i2c_settings = d;
  8847  0B6E  082D               	movf	handleWrite@d,w
  8848  0B6F  00AA               	movwf	??_handleWrite
  8849  0B70  082A               	movf	??_handleWrite,w
  8850  0B71  00D7               	movwf	_i2c_settings
  8851                           
  8852                           ;i2c.c: 60:             break;
  8853  0B72  2B86               	goto	i1l297
  8854  0B73                     i1l4435:	
  8855  0B73  0858               	movf	_i2c_status,w
  8856  0B74  00AA               	movwf	??_handleWrite
  8857  0B75  01AB               	clrf	??_handleWrite+1
  8858                           
  8859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8860                           ; Switch size 1, requested type "simple"
  8861                           ; Number of cases is 1, Range of values is 0 to 0
  8862                           ; switch strategies available:
  8863                           ; Name         Instructions Cycles
  8864                           ; simple_byte            4     3 (average)
  8865                           ; direct_byte            8     6 (fixed)
  8866                           ; jumptable            260     6 (fixed)
  8867                           ;	Chosen strategy is simple_byte
  8868  0B76  082B               	movf	??_handleWrite+1,w
  8869  0B77  3A00               	xorlw	0	; case 0
  8870  0B78  1903               	skipnz
  8871  0B79  2B7B               	goto	i1l5163
  8872  0B7A  2B6C               	goto	i1l296
  8873  0B7B                     i1l5163:	
  8874                           
  8875                           ; Switch size 1, requested type "simple"
  8876                           ; Number of cases is 3, Range of values is 0 to 2
  8877                           ; switch strategies available:
  8878                           ; Name         Instructions Cycles
  8879                           ; simple_byte           10     6 (average)
  8880                           ; direct_byte           12     6 (fixed)
  8881                           ; jumptable            260     6 (fixed)
  8882                           ;	Chosen strategy is simple_byte
  8883  0B7B  082A               	movf	??_handleWrite,w
  8884  0B7C  3A00               	xorlw	0	; case 0
  8885  0B7D  1903               	skipnz
  8886  0B7E  2B37               	goto	i1l4415
  8887  0B7F  3A01               	xorlw	1	; case 1
  8888  0B80  1903               	skipnz
  8889  0B81  2B44               	goto	i1l4421
  8890  0B82  3A03               	xorlw	3	; case 2
  8891  0B83  1903               	skipnz
  8892  0B84  2B5A               	goto	i1l4427
  8893  0B85  2B6C               	goto	i1l296
  8894  0B86                     i1l297:	
  8895  0B86  0008               	return
  8896  0B87                     __end_of_handleWrite:	
  8897                           
  8898                           	psect	text18
  8899  0C91                     __ptext18:	
  8900 ;; *************** function _setStatus *****************
  8901 ;; Defined at:
  8902 ;;		line 12 in file "settings.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;  s               1    wreg     unsigned char 
  8905 ;;  v               1    2[BANK0 ] unsigned char 
  8906 ;;  v2              2    3[BANK0 ] int 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;  s               1    9[BANK0 ] unsigned char 
  8909 ;;  motor           1    8[BANK0 ] unsigned char 
  8910 ;;  dir             1    7[BANK0 ] unsigned char 
  8911 ;; Return value:  Size  Location     Type
  8912 ;;                  1    wreg      void 
  8913 ;; Registers used:
  8914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8920 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8921 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;Total ram usage:        8 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; Hardware stack levels required when called:    3
  8927 ;; This function calls:
  8928 ;;		_revRoutine
  8929 ;;		_setDrive
  8930 ;;		_setDrive2
  8931 ;;		_setRoutine
  8932 ;;		i1_setMotors
  8933 ;; This function is called by:
  8934 ;;		_handleWrite
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938                           
  8939                           ;psect for function _setStatus
  8940  0C91                     _setStatus:	
  8941                           
  8942                           ;incstack = 0
  8943                           ; Regs used in _setStatus: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8944                           ;setStatus@s stored from wreg
  8945  0C91  0020               	movlb	0	; select bank0
  8946  0C92  00A9               	movwf	setStatus@s
  8947  0C93                     i1l4283:	
  8948                           
  8949                           ;settings.c: 13:     unsigned char dir = s&0b111;
  8950  0C93  0829               	movf	setStatus@s,w
  8951  0C94  3907               	andlw	7
  8952  0C95  00A5               	movwf	??_setStatus
  8953  0C96  0825               	movf	??_setStatus,w
  8954  0C97  00A7               	movwf	setStatus@dir
  8955  0C98                     i1l4285:	
  8956                           
  8957                           ;settings.c: 14:     unsigned char motor = (s&0b111000)>>3;
  8958  0C98  0829               	movf	setStatus@s,w
  8959  0C99  00A5               	movwf	??_setStatus
  8960  0C9A  3003               	movlw	3
  8961  0C9B                     u351_25:	
  8962  0C9B  36A5               	lsrf	??_setStatus,f
  8963  0C9C  0B89               	decfsz	9,f
  8964  0C9D  2C9B               	goto	u351_25
  8965  0C9E  0825               	movf	??_setStatus,w
  8966  0C9F  3907               	andlw	7
  8967  0CA0  00A6               	movwf	??_setStatus+1
  8968  0CA1  0826               	movf	??_setStatus+1,w
  8969  0CA2  00A8               	movwf	setStatus@motor
  8970  0CA3                     i1l4287:	
  8971                           
  8972                           ;settings.c: 15:     if(v2 >= 0){
  8973  0CA3  1BA4               	btfsc	setStatus@v2+1,7
  8974  0CA4  2CA6               	goto	u352_21
  8975  0CA5  2CA7               	goto	u352_20
  8976  0CA6                     u352_21:	
  8977  0CA6  2CB4               	goto	i1l446
  8978  0CA7                     u352_20:	
  8979  0CA7                     i1l4289:	
  8980                           
  8981                           ;settings.c: 17:         setDrive2(dir,v,v2);
  8982  0CA7  0822               	movf	setStatus@v,w
  8983  0CA8  00A5               	movwf	??_setStatus
  8984  0CA9  0825               	movf	??_setStatus,w
  8985  0CAA  00F6               	movwf	setDrive2@v
  8986  0CAB  0823               	movf	setStatus@v2,w
  8987  0CAC  00A6               	movwf	??_setStatus+1
  8988  0CAD  0826               	movf	??_setStatus+1,w
  8989  0CAE  00F7               	movwf	setDrive2@v2
  8990  0CAF  0827               	movf	setStatus@dir,w
  8991  0CB0  318E  2618  318C   	fcall	_setDrive2
  8992  0CB3  2D01               	goto	i1l447
  8993  0CB4                     i1l446:	
  8994                           ;settings.c: 19:     }
  8995                           
  8996                           
  8997                           ;settings.c: 20:     if(s & 0b01000000){
  8998  0CB4  1F29               	btfss	setStatus@s,6
  8999  0CB5  2CB7               	goto	u353_21
  9000  0CB6  2CB8               	goto	u353_20
  9001  0CB7                     u353_21:	
  9002  0CB7  2CC6               	goto	i1l4299
  9003  0CB8                     u353_20:	
  9004  0CB8                     i1l4293:	
  9005                           
  9006                           ;settings.c: 22:         if(!(s & 0b00100000))
  9007  0CB8  1AA9               	btfsc	setStatus@s,5
  9008  0CB9  2CBB               	goto	u354_21
  9009  0CBA  2CBC               	goto	u354_20
  9010  0CBB                     u354_21:	
  9011  0CBB  2CC1               	goto	i1l4297
  9012  0CBC                     u354_20:	
  9013  0CBC                     i1l4295:	
  9014                           
  9015                           ;settings.c: 23:             setRoutine(s);
  9016  0CBC  0829               	movf	setStatus@s,w
  9017  0CBD  318F  274A  318C   	fcall	_setRoutine
  9018  0CC0  2D01               	goto	i1l447
  9019  0CC1                     i1l4297:	
  9020                           
  9021                           ;settings.c: 25:             revRoutine(s);
  9022  0CC1  0829               	movf	setStatus@s,w
  9023  0CC2  318A  225D  318C   	fcall	_revRoutine
  9024  0CC5  2D01               	goto	i1l447
  9025  0CC6                     i1l4299:	
  9026                           
  9027                           ;settings.c: 28:         if(s & 0b111000){
  9028  0CC6  0829               	movf	setStatus@s,w
  9029  0CC7  3938               	andlw	56
  9030  0CC8  1903               	btfsc	3,2
  9031  0CC9  2CCB               	goto	u355_21
  9032  0CCA  2CCC               	goto	u355_20
  9033  0CCB                     u355_21:	
  9034  0CCB  2CF9               	goto	i1l4321
  9035  0CCC                     u355_20:	
  9036  0CCC                     i1l4301:	
  9037                           
  9038                           ;settings.c: 30:             LATEbits.LATE2 = 0;
  9039  0CCC  111A               	bcf	26,2	;volatile
  9040  0CCD                     i1l4303:	
  9041                           
  9042                           ;settings.c: 31:             if(motor==1)props.revolver.stat |= 0x10;
  9043  0CCD  0328               	decf	setStatus@motor,w
  9044  0CCE  1D03               	btfss	3,2
  9045  0CCF  2CD1               	goto	u356_21
  9046  0CD0  2CD2               	goto	u356_20
  9047  0CD1                     u356_21:	
  9048  0CD1  2CD4               	goto	i1l4307
  9049  0CD2                     u356_20:	
  9050  0CD2                     i1l4305:	
  9051  0CD2  1661               	bsf	_props+8,4
  9052  0CD3  2CEC               	goto	i1l4319
  9053  0CD4                     i1l4307:	
  9054  0CD4  3002               	movlw	2
  9055  0CD5  0628               	xorwf	setStatus@motor,w
  9056  0CD6  1D03               	btfss	3,2
  9057  0CD7  2CD9               	goto	u357_21
  9058  0CD8  2CDA               	goto	u357_20
  9059  0CD9                     u357_21:	
  9060  0CD9  2CDC               	goto	i1l4311
  9061  0CDA                     u357_20:	
  9062  0CDA                     i1l4309:	
  9063  0CDA  15DB               	bsf	_props+2,3
  9064  0CDB  2CEC               	goto	i1l4319
  9065  0CDC                     i1l4311:	
  9066  0CDC  3003               	movlw	3
  9067  0CDD  0628               	xorwf	setStatus@motor,w
  9068  0CDE  1D03               	btfss	3,2
  9069  0CDF  2CE1               	goto	u358_21
  9070  0CE0  2CE2               	goto	u358_20
  9071  0CE1                     u358_21:	
  9072  0CE1  2CE4               	goto	i1l4315
  9073  0CE2                     u358_20:	
  9074  0CE2                     i1l4313:	
  9075  0CE2  15DA               	bsf	_props+1,3
  9076  0CE3  2CEC               	goto	i1l4319
  9077  0CE4                     i1l4315:	
  9078  0CE4  3004               	movlw	4
  9079  0CE5  0628               	xorwf	setStatus@motor,w
  9080  0CE6  1D03               	btfss	3,2
  9081  0CE7  2CE9               	goto	u359_21
  9082  0CE8  2CEA               	goto	u359_20
  9083  0CE9                     u359_21:	
  9084  0CE9  2CEC               	goto	i1l456
  9085  0CEA                     u359_20:	
  9086  0CEA                     i1l4317:	
  9087  0CEA  15D9               	bsf	_props,3
  9088  0CEB  2CEC               	goto	i1l4319
  9089  0CEC                     i1l456:	
  9090  0CEC                     i1l4319:	
  9091                           
  9092                           ;settings.c: 35:             setMotors(motor,dir,v);
  9093  0CEC  0827               	movf	setStatus@dir,w
  9094  0CED  00A5               	movwf	??_setStatus
  9095  0CEE  0825               	movf	??_setStatus,w
  9096  0CEF  00F6               	movwf	i1setMotors@dir
  9097  0CF0  0822               	movf	setStatus@v,w
  9098  0CF1  00A6               	movwf	??_setStatus+1
  9099  0CF2  0826               	movf	??_setStatus+1,w
  9100  0CF3  00F7               	movwf	i1setMotors@v
  9101  0CF4  0828               	movf	setStatus@motor,w
  9102  0CF5  3185  25AB  318C   	fcall	i1_setMotors
  9103                           
  9104                           ;settings.c: 36:         }
  9105  0CF8  2D01               	goto	i1l447
  9106  0CF9                     i1l4321:	
  9107                           
  9108                           ;settings.c: 38:             setDrive(dir,v);
  9109  0CF9  0822               	movf	setStatus@v,w
  9110  0CFA  00A5               	movwf	??_setStatus
  9111  0CFB  0825               	movf	??_setStatus,w
  9112  0CFC  00F6               	movwf	setDrive@v
  9113  0CFD  0827               	movf	setStatus@dir,w
  9114  0CFE  3187  2719  318C   	fcall	_setDrive
  9115  0D01                     i1l447:	
  9116  0D01  0008               	return
  9117  0D02                     __end_of_setStatus:	
  9118                           
  9119                           	psect	text19
  9120  0F4A                     __ptext19:	
  9121 ;; *************** function _setRoutine *****************
  9122 ;; Defined at:
  9123 ;;		line 70 in file "settings.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  s               1    wreg     unsigned char 
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;  s               1    0[BANK0 ] unsigned char 
  9128 ;;  i               1    1[BANK0 ] unsigned char 
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1    wreg      void 
  9131 ;; Registers used:
  9132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9139 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9140 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9141 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;Total ram usage:        4 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; Hardware stack levels required when called:    2
  9145 ;; This function calls:
  9146 ;;		i1_setMotors
  9147 ;; This function is called by:
  9148 ;;		_setStatus
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           
  9153                           ;psect for function _setRoutine
  9154  0F4A                     _setRoutine:	
  9155                           
  9156                           ;incstack = 0
  9157                           ; Regs used in _setRoutine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9158                           ;setRoutine@s stored from wreg
  9159  0F4A  0020               	movlb	0	; select bank0
  9160  0F4B  00A0               	movwf	setRoutine@s
  9161  0F4C                     i1l4067:	
  9162                           
  9163                           ;settings.c: 71:     if(s&0b1111)
  9164  0F4C  0820               	movf	setRoutine@s,w
  9165  0F4D  390F               	andlw	15
  9166  0F4E  1903               	btfsc	3,2
  9167  0F4F  2F51               	goto	u341_21
  9168  0F50  2F52               	goto	u341_20
  9169  0F51                     u341_21:	
  9170  0F51  2F5E               	goto	i1l4071
  9171  0F52                     u341_20:	
  9172  0F52                     i1l4069:	
  9173                           
  9174                           ;settings.c: 72:         props.claw1.time1 = props.time;
  9175  0F52  300D               	movlw	13
  9176  0F53  3E59               	addlw	(low (_props| 0))& (0+255)
  9177  0F54  0086               	movwf	6
  9178  0F55  0187               	clrf	7
  9179  0F56  3F40               	moviw [0]fsr1
  9180  0F57  00DD               	movwf	_props+4
  9181  0F58  3F41               	moviw [1]fsr1
  9182  0F59  00DE               	movwf	_props+5
  9183  0F5A  3F42               	moviw [2]fsr1
  9184  0F5B  00DF               	movwf	_props+6
  9185  0F5C  3F43               	moviw [3]fsr1
  9186  0F5D  00E0               	movwf	_props+7
  9187  0F5E                     i1l4071:	
  9188                           
  9189                           ;settings.c: 75:     props.claw1.clamped &= 0b11110111;
  9190  0F5E  30F7               	movlw	247
  9191  0F5F  00FB               	movwf	??_setRoutine
  9192  0F60  087B               	movf	??_setRoutine,w
  9193  0F61  05D9               	andwf	_props,f
  9194  0F62                     i1l4073:	
  9195                           
  9196                           ;settings.c: 76:     props.claw1.orientation &= 0b11110111;
  9197  0F62  30F7               	movlw	247
  9198  0F63  00FB               	movwf	??_setRoutine
  9199  0F64  087B               	movf	??_setRoutine,w
  9200  0F65  05DA               	andwf	_props+1,f
  9201  0F66                     i1l4075:	
  9202                           
  9203                           ;settings.c: 77:     props.claw1.height &= 0b11110111;
  9204  0F66  30F7               	movlw	247
  9205  0F67  00FB               	movwf	??_setRoutine
  9206  0F68  087B               	movf	??_setRoutine,w
  9207  0F69  05DB               	andwf	_props+2,f
  9208                           
  9209                           ;settings.c: 78:     switch(s&0b1111){
  9210  0F6A  2FDC               	goto	i1l4115
  9211  0F6B                     i1l4077:	
  9212                           
  9213                           ;settings.c: 80:             props.claw1.routine = 0;
  9214  0F6B  01DC               	clrf	_props+3
  9215                           
  9216                           ;settings.c: 81:             break;
  9217  0F6C  2FFF               	goto	i1l492
  9218  0F6D                     i1l4079:	
  9219                           
  9220                           ;settings.c: 83:             setMotors(2,1,64);
  9221  0F6D  01F6               	clrf	i1setMotors@dir
  9222  0F6E  0AF6               	incf	i1setMotors@dir,f
  9223  0F6F  3040               	movlw	64
  9224  0F70  00FB               	movwf	??_setRoutine
  9225  0F71  087B               	movf	??_setRoutine,w
  9226  0F72  00F7               	movwf	i1setMotors@v
  9227  0F73  3002               	movlw	2
  9228  0F74  3185  25AB  318F   	fcall	i1_setMotors
  9229  0F77                     i1l4081:	
  9230                           
  9231                           ;settings.c: 84:             props.claw1.routine = 0x11;
  9232  0F77  3011               	movlw	17
  9233  0F78  00FB               	movwf	??_setRoutine
  9234  0F79  087B               	movf	??_setRoutine,w
  9235  0F7A  0020               	movlb	0	; select bank0
  9236  0F7B  00DC               	movwf	_props+3
  9237                           
  9238                           ;settings.c: 85:             break;
  9239  0F7C  2FFF               	goto	i1l492
  9240  0F7D                     i1l4083:	
  9241                           
  9242                           ;settings.c: 87:             setMotors(2,1,64);
  9243  0F7D  01F6               	clrf	i1setMotors@dir
  9244  0F7E  0AF6               	incf	i1setMotors@dir,f
  9245  0F7F  3040               	movlw	64
  9246  0F80  00FB               	movwf	??_setRoutine
  9247  0F81  087B               	movf	??_setRoutine,w
  9248  0F82  00F7               	movwf	i1setMotors@v
  9249  0F83  3002               	movlw	2
  9250  0F84  3185  25AB  318F   	fcall	i1_setMotors
  9251  0F87                     i1l4085:	
  9252                           
  9253                           ;settings.c: 88:             props.claw1.routine = 0x24;
  9254  0F87  3024               	movlw	36
  9255  0F88  00FB               	movwf	??_setRoutine
  9256  0F89  087B               	movf	??_setRoutine,w
  9257  0F8A  0020               	movlb	0	; select bank0
  9258  0F8B  00DC               	movwf	_props+3
  9259                           
  9260                           ;settings.c: 89:             break;
  9261  0F8C  2FFF               	goto	i1l492
  9262  0F8D                     i1l4087:	
  9263                           
  9264                           ;settings.c: 91:             setMotors(4,1,64);
  9265  0F8D  01F6               	clrf	i1setMotors@dir
  9266  0F8E  0AF6               	incf	i1setMotors@dir,f
  9267  0F8F  3040               	movlw	64
  9268  0F90  00FB               	movwf	??_setRoutine
  9269  0F91  087B               	movf	??_setRoutine,w
  9270  0F92  00F7               	movwf	i1setMotors@v
  9271  0F93  3004               	movlw	4
  9272  0F94  3185  25AB  318F   	fcall	i1_setMotors
  9273  0F97                     i1l4089:	
  9274                           
  9275                           ;settings.c: 92:             props.claw1.routine = 0x31;
  9276  0F97  3031               	movlw	49
  9277  0F98  00FB               	movwf	??_setRoutine
  9278  0F99  087B               	movf	??_setRoutine,w
  9279  0F9A  0020               	movlb	0	; select bank0
  9280  0F9B  00DC               	movwf	_props+3
  9281                           
  9282                           ;settings.c: 93:             break;
  9283  0F9C  2FFF               	goto	i1l492
  9284  0F9D                     i1l4091:	
  9285                           
  9286                           ;settings.c: 95:             setMotors(4,0,64);
  9287  0F9D  01F6               	clrf	i1setMotors@dir
  9288  0F9E  3040               	movlw	64
  9289  0F9F  00FB               	movwf	??_setRoutine
  9290  0FA0  087B               	movf	??_setRoutine,w
  9291  0FA1  00F7               	movwf	i1setMotors@v
  9292  0FA2  3004               	movlw	4
  9293  0FA3  3185  25AB  318F   	fcall	i1_setMotors
  9294  0FA6                     i1l4093:	
  9295                           
  9296                           ;settings.c: 96:             props.claw1.routine = 0x41;
  9297  0FA6  3041               	movlw	65
  9298  0FA7  00FB               	movwf	??_setRoutine
  9299  0FA8  087B               	movf	??_setRoutine,w
  9300  0FA9  0020               	movlb	0	; select bank0
  9301  0FAA  00DC               	movwf	_props+3
  9302                           
  9303                           ;settings.c: 97:             break;
  9304  0FAB  2FFF               	goto	i1l492
  9305  0FAC                     i1l4095:	
  9306                           
  9307                           ;settings.c: 99:             setMotors(2,0,64);
  9308  0FAC  01F6               	clrf	i1setMotors@dir
  9309  0FAD  3040               	movlw	64
  9310  0FAE  00FB               	movwf	??_setRoutine
  9311  0FAF  087B               	movf	??_setRoutine,w
  9312  0FB0  00F7               	movwf	i1setMotors@v
  9313  0FB1  3002               	movlw	2
  9314  0FB2  3185  25AB  318F   	fcall	i1_setMotors
  9315                           
  9316                           ;settings.c: 100:             setMotors(3,0,64);
  9317  0FB5  01F6               	clrf	i1setMotors@dir
  9318  0FB6  3040               	movlw	64
  9319  0FB7  00FB               	movwf	??_setRoutine
  9320  0FB8  087B               	movf	??_setRoutine,w
  9321  0FB9  00F7               	movwf	i1setMotors@v
  9322  0FBA  3003               	movlw	3
  9323  0FBB  3185  25AB  318F   	fcall	i1_setMotors
  9324  0FBE                     i1l4097:	
  9325                           
  9326                           ;settings.c: 101:             props.claw1.routine = 0x52;
  9327  0FBE  3052               	movlw	82
  9328  0FBF  00FB               	movwf	??_setRoutine
  9329  0FC0  087B               	movf	??_setRoutine,w
  9330  0FC1  0020               	movlb	0	; select bank0
  9331  0FC2  00DC               	movwf	_props+3
  9332                           
  9333                           ;settings.c: 102:             break;
  9334  0FC3  2FFF               	goto	i1l492
  9335  0FC4                     i1l4099:	
  9336                           
  9337                           ;settings.c: 104:             props.claw1.routine = 0x64;
  9338  0FC4  3064               	movlw	100
  9339  0FC5  00FB               	movwf	??_setRoutine
  9340  0FC6  087B               	movf	??_setRoutine,w
  9341  0FC7  00DC               	movwf	_props+3
  9342                           
  9343                           ;settings.c: 105:             break;
  9344  0FC8  2FFF               	goto	i1l492
  9345  0FC9                     i1l4101:	
  9346                           
  9347                           ;settings.c: 107:             for(char i=0;i<5;++i)
  9348  0FC9  01A1               	clrf	setRoutine@i
  9349  0FCA                     i1l4107:	
  9350                           
  9351                           ;settings.c: 108:                 setMotors(i,0,0);
  9352  0FCA  01F6               	clrf	i1setMotors@dir
  9353  0FCB  01F7               	clrf	i1setMotors@v
  9354  0FCC  0821               	movf	setRoutine@i,w
  9355  0FCD  3185  25AB  318F   	fcall	i1_setMotors
  9356  0FD0                     i1l4109:	
  9357  0FD0  3001               	movlw	1
  9358  0FD1  00FB               	movwf	??_setRoutine
  9359  0FD2  087B               	movf	??_setRoutine,w
  9360  0FD3  0020               	movlb	0	; select bank0
  9361  0FD4  07A1               	addwf	setRoutine@i,f
  9362  0FD5                     i1l4111:	
  9363  0FD5  3005               	movlw	5
  9364  0FD6  0221               	subwf	setRoutine@i,w
  9365  0FD7  1C03               	skipc
  9366  0FD8  2FDA               	goto	u342_21
  9367  0FD9  2FDB               	goto	u342_20
  9368  0FDA                     u342_21:	
  9369  0FDA  2FCA               	goto	i1l4107
  9370  0FDB                     u342_20:	
  9371  0FDB  2FFF               	goto	i1l492
  9372  0FDC                     i1l4115:	
  9373  0FDC  0820               	movf	setRoutine@s,w
  9374  0FDD  390F               	andlw	15
  9375  0FDE  00FB               	movwf	??_setRoutine
  9376  0FDF  01FC               	clrf	??_setRoutine+1
  9377                           
  9378                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9379                           ; Switch size 1, requested type "simple"
  9380                           ; Number of cases is 1, Range of values is 0 to 0
  9381                           ; switch strategies available:
  9382                           ; Name         Instructions Cycles
  9383                           ; simple_byte            4     3 (average)
  9384                           ; direct_byte            8     6 (fixed)
  9385                           ; jumptable            260     6 (fixed)
  9386                           ;	Chosen strategy is simple_byte
  9387  0FE0  087C               	movf	??_setRoutine+1,w
  9388  0FE1  3A00               	xorlw	0	; case 0
  9389  0FE2  1903               	skipnz
  9390  0FE3  2FE5               	goto	i1l5165
  9391  0FE4  2FFF               	goto	i1l492
  9392  0FE5                     i1l5165:	
  9393                           
  9394                           ; Switch size 1, requested type "simple"
  9395                           ; Number of cases is 8, Range of values is 0 to 15
  9396                           ; switch strategies available:
  9397                           ; Name         Instructions Cycles
  9398                           ; simple_byte           25    13 (average)
  9399                           ; direct_byte           38     6 (fixed)
  9400                           ; jumptable            260     6 (fixed)
  9401                           ;	Chosen strategy is simple_byte
  9402  0FE5  087B               	movf	??_setRoutine,w
  9403  0FE6  3A00               	xorlw	0	; case 0
  9404  0FE7  1903               	skipnz
  9405  0FE8  2F6B               	goto	i1l4077
  9406  0FE9  3A01               	xorlw	1	; case 1
  9407  0FEA  1903               	skipnz
  9408  0FEB  2F6D               	goto	i1l4079
  9409  0FEC  3A03               	xorlw	3	; case 2
  9410  0FED  1903               	skipnz
  9411  0FEE  2F7D               	goto	i1l4083
  9412  0FEF  3A01               	xorlw	1	; case 3
  9413  0FF0  1903               	skipnz
  9414  0FF1  2F8D               	goto	i1l4087
  9415  0FF2  3A07               	xorlw	7	; case 4
  9416  0FF3  1903               	skipnz
  9417  0FF4  2F9D               	goto	i1l4091
  9418  0FF5  3A01               	xorlw	1	; case 5
  9419  0FF6  1903               	skipnz
  9420  0FF7  2FAC               	goto	i1l4095
  9421  0FF8  3A03               	xorlw	3	; case 6
  9422  0FF9  1903               	skipnz
  9423  0FFA  2FC4               	goto	i1l4099
  9424  0FFB  3A09               	xorlw	9	; case 15
  9425  0FFC  1903               	skipnz
  9426  0FFD  2FC9               	goto	i1l4101
  9427  0FFE  2FFF               	goto	i1l492
  9428  0FFF                     i1l492:	
  9429  0FFF  0008               	return
  9430  1000                     __end_of_setRoutine:	
  9431                           
  9432                           	psect	text20
  9433  0E18                     __ptext20:	
  9434 ;; *************** function _setDrive2 *****************
  9435 ;; Defined at:
  9436 ;;		line 251 in file "settings.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;  dir             1    wreg     unsigned char 
  9439 ;;  v               1    6[COMMON] unsigned char 
  9440 ;;  v2              1    7[COMMON] unsigned char 
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;  dir             1   10[COMMON] unsigned char 
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  1    wreg      void 
  9445 ;; Registers used:
  9446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9455 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;Total ram usage:        5 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; Hardware stack levels required when called:    1
  9459 ;; This function calls:
  9460 ;;		i1_setPWM
  9461 ;; This function is called by:
  9462 ;;		_setStatus
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           
  9467                           ;psect for function _setDrive2
  9468  0E18                     _setDrive2:	
  9469                           
  9470                           ;incstack = 0
  9471                           ; Regs used in _setDrive2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9472                           ;setDrive2@dir stored from wreg
  9473  0E18  00FA               	movwf	setDrive2@dir
  9474  0E19                     i1l4003:	
  9475                           
  9476                           ;settings.c: 252:     if((driveDir != dir) || (drivePWM1 != v) || (drivePWM2 != v2)){
  9477  0E19  0020               	movlb	0	; select bank0
  9478  0E1A  0855               	movf	_driveDir,w
  9479  0E1B  067A               	xorwf	setDrive2@dir,w
  9480  0E1C  1D03               	skipz
  9481  0E1D  2E1F               	goto	u338_21
  9482  0E1E  2E20               	goto	u338_20
  9483  0E1F                     u338_21:	
  9484  0E1F  2E2C               	goto	i1l4009
  9485  0E20                     u338_20:	
  9486  0E20                     i1l4005:	
  9487  0E20  0854               	movf	_drivePWM1,w
  9488  0E21  0676               	xorwf	setDrive2@v,w
  9489  0E22  1D03               	skipz
  9490  0E23  2E25               	goto	u339_21
  9491  0E24  2E26               	goto	u339_20
  9492  0E25                     u339_21:	
  9493  0E25  2E2C               	goto	i1l4009
  9494  0E26                     u339_20:	
  9495  0E26                     i1l4007:	
  9496  0E26  0853               	movf	_drivePWM2,w
  9497  0E27  0677               	xorwf	setDrive2@v2,w
  9498  0E28  1903               	skipnz
  9499  0E29  2E2B               	goto	u340_21
  9500  0E2A  2E2C               	goto	u340_20
  9501  0E2B                     u340_21:	
  9502  0E2B  2EAF               	goto	i1l531
  9503  0E2C                     u340_20:	
  9504  0E2C                     i1l4009:	
  9505                           
  9506                           ;settings.c: 253:         driveDir = dir;
  9507  0E2C  087A               	movf	setDrive2@dir,w
  9508  0E2D  00F8               	movwf	??_setDrive2
  9509  0E2E  0878               	movf	??_setDrive2,w
  9510  0E2F  00D5               	movwf	_driveDir
  9511                           
  9512                           ;settings.c: 254:         drivePWM1 = v;
  9513  0E30  0876               	movf	setDrive2@v,w
  9514  0E31  00F8               	movwf	??_setDrive2
  9515  0E32  0878               	movf	??_setDrive2,w
  9516  0E33  00D4               	movwf	_drivePWM1
  9517                           
  9518                           ;settings.c: 255:         drivePWM2 = v2;
  9519  0E34  0877               	movf	setDrive2@v2,w
  9520  0E35  00F8               	movwf	??_setDrive2
  9521  0E36  0878               	movf	??_setDrive2,w
  9522  0E37  00D3               	movwf	_drivePWM2
  9523                           
  9524                           ;settings.c: 256:         switch(dir){
  9525  0E38  2E9F               	goto	i1l4061
  9526  0E39                     i1l4011:	
  9527                           
  9528                           ;settings.c: 258:                 TRISA |= 0b00111111;
  9529  0E39  303F               	movlw	63
  9530  0E3A  00F8               	movwf	??_setDrive2
  9531  0E3B  0878               	movf	??_setDrive2,w
  9532  0E3C  0491               	iorwf	17,f	;volatile
  9533  0E3D                     i1l4013:	
  9534                           
  9535                           ;settings.c: 259:                 RA0PPS = 13;
  9536  0E3D  300D               	movlw	13
  9537  0E3E  003E               	movlb	30	; select bank30
  9538  0E3F  0090               	movwf	16	;volatile
  9539  0E40                     i1l4015:	
  9540                           
  9541                           ;settings.c: 260:                 RA1PPS = 0x23;
  9542  0E40  3023               	movlw	35
  9543  0E41  0091               	movwf	17	;volatile
  9544  0E42                     i1l4017:	
  9545                           
  9546                           ;settings.c: 261:                 RA2PPS = 14;
  9547  0E42  300E               	movlw	14
  9548  0E43  0092               	movwf	18	;volatile
  9549  0E44                     i1l4019:	
  9550                           
  9551                           ;settings.c: 262:                 RA3PPS = 0;
  9552  0E44  0193               	clrf	19	;volatile
  9553  0E45                     i1l4021:	
  9554                           
  9555                           ;settings.c: 263:                 RA4PPS = 0x22;
  9556  0E45  3022               	movlw	34
  9557  0E46  0094               	movwf	20	;volatile
  9558  0E47                     i1l4023:	
  9559                           
  9560                           ;settings.c: 264:                 RA5PPS = 0;
  9561  0E47  0195               	clrf	21	;volatile
  9562                           
  9563                           ;settings.c: 265:                 LATA &= 0b11000000;
  9564  0E48  30C0               	movlw	192
  9565  0E49  00F8               	movwf	??_setDrive2
  9566  0E4A  0878               	movf	??_setDrive2,w
  9567  0E4B  0020               	movlb	0	; select bank0
  9568  0E4C  0596               	andwf	22,f	;volatile
  9569  0E4D                     i1l4025:	
  9570                           
  9571                           ;settings.c: 266:                 CWG3ISM = 0b0111;
  9572  0E4D  3007               	movlw	7
  9573  0E4E  002D               	movlb	13	; select bank13
  9574  0E4F  008D               	movwf	13	;volatile
  9575  0E50                     i1l4027:	
  9576                           
  9577                           ;settings.c: 267:                 setPWM(5,v);
  9578  0E50  0876               	movf	setDrive2@v,w
  9579  0E51  00F8               	movwf	??_setDrive2
  9580  0E52  0878               	movf	??_setDrive2,w
  9581  0E53  00F0               	movwf	i1setPWM@pwm
  9582  0E54  3005               	movlw	5
  9583  0E55  318B  2387  318E   	fcall	i1_setPWM
  9584  0E58                     i1l4029:	
  9585                           
  9586                           ;settings.c: 268:                 setPWM(6,v2);
  9587  0E58  0877               	movf	setDrive2@v2,w
  9588  0E59  00F8               	movwf	??_setDrive2
  9589  0E5A  0878               	movf	??_setDrive2,w
  9590  0E5B  00F0               	movwf	i1setPWM@pwm
  9591  0E5C  3006               	movlw	6
  9592  0E5D  318B  2387  318E   	fcall	i1_setPWM
  9593  0E60                     i1l4031:	
  9594                           
  9595                           ;settings.c: 269:                 setPWM(7,245);
  9596  0E60  30F5               	movlw	245
  9597  0E61  00F8               	movwf	??_setDrive2
  9598  0E62  0878               	movf	??_setDrive2,w
  9599  0E63  00F0               	movwf	i1setPWM@pwm
  9600  0E64  3007               	movlw	7
  9601  0E65  318B  2387  318E   	fcall	i1_setPWM
  9602  0E68                     i1l4033:	
  9603                           
  9604                           ;settings.c: 270:                 TRISA &= 0b11000000;
  9605  0E68  30C0               	movlw	192
  9606  0E69  00F8               	movwf	??_setDrive2
  9607  0E6A  0878               	movf	??_setDrive2,w
  9608  0E6B  0020               	movlb	0	; select bank0
  9609  0E6C  0591               	andwf	17,f	;volatile
  9610                           
  9611                           ;settings.c: 271:                 break;
  9612  0E6D  2EAF               	goto	i1l531
  9613  0E6E                     i1l4035:	
  9614                           
  9615                           ;settings.c: 273:                 TRISA |= 0b00111111;
  9616  0E6E  303F               	movlw	63
  9617  0E6F  00F8               	movwf	??_setDrive2
  9618  0E70  0878               	movf	??_setDrive2,w
  9619  0E71  0491               	iorwf	17,f	;volatile
  9620  0E72                     i1l4037:	
  9621                           
  9622                           ;settings.c: 274:                 CWG3ISM = 0b0101;
  9623  0E72  3005               	movlw	5
  9624  0E73  002D               	movlb	13	; select bank13
  9625  0E74  008D               	movwf	13	;volatile
  9626  0E75                     i1l4039:	
  9627                           
  9628                           ;settings.c: 275:                 CWG1ISM = 0b0110;
  9629  0E75  3006               	movlw	6
  9630  0E76  002C               	movlb	12	; select bank12
  9631  0E77  008D               	movwf	13	;volatile
  9632  0E78                     i1l4041:	
  9633                           
  9634                           ;settings.c: 276:                 RA0PPS = 0x23;
  9635  0E78  3023               	movlw	35
  9636  0E79  003E               	movlb	30	; select bank30
  9637  0E7A  0090               	movwf	16	;volatile
  9638  0E7B                     i1l4043:	
  9639                           
  9640                           ;settings.c: 277:                 RA1PPS = 0;
  9641  0E7B  0191               	clrf	17	;volatile
  9642  0E7C                     i1l4045:	
  9643                           
  9644                           ;settings.c: 278:                 RA2PPS = 0x02;
  9645  0E7C  3002               	movlw	2
  9646  0E7D  0092               	movwf	18	;volatile
  9647  0E7E                     i1l4047:	
  9648                           
  9649                           ;settings.c: 279:                 RA3PPS = 0x22;
  9650  0E7E  3022               	movlw	34
  9651  0E7F  0093               	movwf	19	;volatile
  9652  0E80                     i1l4049:	
  9653                           
  9654                           ;settings.c: 280:                 RA4PPS = 0;
  9655  0E80  0194               	clrf	20	;volatile
  9656  0E81                     i1l4051:	
  9657                           
  9658                           ;settings.c: 281:                 RA5PPS = 0x01;
  9659  0E81  3001               	movlw	1
  9660  0E82  0095               	movwf	21	;volatile
  9661                           
  9662                           ;settings.c: 282:                 LATA &= 0b11000000;
  9663  0E83  30C0               	movlw	192
  9664  0E84  00F8               	movwf	??_setDrive2
  9665  0E85  0878               	movf	??_setDrive2,w
  9666  0E86  0020               	movlb	0	; select bank0
  9667  0E87  0596               	andwf	22,f	;volatile
  9668  0E88                     i1l4053:	
  9669                           
  9670                           ;settings.c: 283:                 LATA |= 0b00000010;
  9671  0E88  1496               	bsf	22,1	;volatile
  9672  0E89                     i1l4055:	
  9673                           
  9674                           ;settings.c: 284:                 setPWM(5,v);
  9675  0E89  0876               	movf	setDrive2@v,w
  9676  0E8A  00F8               	movwf	??_setDrive2
  9677  0E8B  0878               	movf	??_setDrive2,w
  9678  0E8C  00F0               	movwf	i1setPWM@pwm
  9679  0E8D  3005               	movlw	5
  9680  0E8E  318B  2387  318E   	fcall	i1_setPWM
  9681  0E91                     i1l4057:	
  9682                           
  9683                           ;settings.c: 285:                 setPWM(6,v2);
  9684  0E91  0877               	movf	setDrive2@v2,w
  9685  0E92  00F8               	movwf	??_setDrive2
  9686  0E93  0878               	movf	??_setDrive2,w
  9687  0E94  00F0               	movwf	i1setPWM@pwm
  9688  0E95  3006               	movlw	6
  9689  0E96  318B  2387  318E   	fcall	i1_setPWM
  9690                           
  9691                           ;settings.c: 286:                 TRISA &= 0b11000000;
  9692  0E99  30C0               	movlw	192
  9693  0E9A  00F8               	movwf	??_setDrive2
  9694  0E9B  0878               	movf	??_setDrive2,w
  9695  0E9C  0020               	movlb	0	; select bank0
  9696  0E9D  0591               	andwf	17,f	;volatile
  9697                           
  9698                           ;settings.c: 309:                 break;
  9699  0E9E  2EAF               	goto	i1l531
  9700  0E9F                     i1l4061:	
  9701  0E9F  087A               	movf	setDrive2@dir,w
  9702  0EA0  00F8               	movwf	??_setDrive2
  9703  0EA1  01F9               	clrf	??_setDrive2+1
  9704                           
  9705                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9706                           ; Switch size 1, requested type "simple"
  9707                           ; Number of cases is 1, Range of values is 0 to 0
  9708                           ; switch strategies available:
  9709                           ; Name         Instructions Cycles
  9710                           ; simple_byte            4     3 (average)
  9711                           ; direct_byte            8     6 (fixed)
  9712                           ; jumptable            260     6 (fixed)
  9713                           ;	Chosen strategy is simple_byte
  9714  0EA2  0879               	movf	??_setDrive2+1,w
  9715  0EA3  3A00               	xorlw	0	; case 0
  9716  0EA4  1903               	skipnz
  9717  0EA5  2EA7               	goto	i1l5167
  9718  0EA6  2EAF               	goto	i1l531
  9719  0EA7                     i1l5167:	
  9720                           
  9721                           ; Switch size 1, requested type "simple"
  9722                           ; Number of cases is 2, Range of values is 0 to 1
  9723                           ; switch strategies available:
  9724                           ; Name         Instructions Cycles
  9725                           ; simple_byte            7     4 (average)
  9726                           ; direct_byte           10     6 (fixed)
  9727                           ; jumptable            260     6 (fixed)
  9728                           ;	Chosen strategy is simple_byte
  9729  0EA7  0878               	movf	??_setDrive2,w
  9730  0EA8  3A00               	xorlw	0	; case 0
  9731  0EA9  1903               	skipnz
  9732  0EAA  2E39               	goto	i1l4011
  9733  0EAB  3A01               	xorlw	1	; case 1
  9734  0EAC  1903               	skipnz
  9735  0EAD  2E6E               	goto	i1l4035
  9736  0EAE  2EAF               	goto	i1l531
  9737  0EAF                     i1l531:	
  9738  0EAF  0008               	return
  9739  0EB0                     __end_of_setDrive2:	
  9740                           
  9741                           	psect	text21
  9742  0719                     __ptext21:	
  9743 ;; *************** function _setDrive *****************
  9744 ;; Defined at:
  9745 ;;		line 183 in file "settings.c"
  9746 ;; Parameters:    Size  Location     Type
  9747 ;;  dir             1    wreg     unsigned char 
  9748 ;;  v               1    6[COMMON] unsigned char 
  9749 ;; Auto vars:     Size  Location     Type
  9750 ;;  dir             1    9[COMMON] unsigned char 
  9751 ;; Return value:  Size  Location     Type
  9752 ;;                  1    wreg      void 
  9753 ;; Registers used:
  9754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9755 ;; Tracked objects:
  9756 ;;		On entry : 0/0
  9757 ;;		On exit  : 0/0
  9758 ;;		Unchanged: 0/0
  9759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9760 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9764 ;;Total ram usage:        4 bytes
  9765 ;; Hardware stack levels used:    1
  9766 ;; Hardware stack levels required when called:    1
  9767 ;; This function calls:
  9768 ;;		i1_setPWM
  9769 ;; This function is called by:
  9770 ;;		_setStatus
  9771 ;; This function uses a non-reentrant model
  9772 ;;
  9773                           
  9774                           
  9775                           ;psect for function _setDrive
  9776  0719                     _setDrive:	
  9777                           
  9778                           ;incstack = 0
  9779                           ; Regs used in _setDrive: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9780                           ;setDrive@dir stored from wreg
  9781  0719  00F9               	movwf	setDrive@dir
  9782  071A                     i1l4129:	
  9783                           
  9784                           ;settings.c: 184:     if((driveDir != dir) || (drivePWM1 != v) || (drivePWM2 != v)){
  9785  071A  0020               	movlb	0	; select bank0
  9786  071B  0855               	movf	_driveDir,w
  9787  071C  0679               	xorwf	setDrive@dir,w
  9788  071D  1D03               	skipz
  9789  071E  2F20               	goto	u345_21
  9790  071F  2F21               	goto	u345_20
  9791  0720                     u345_21:	
  9792  0720  2F2D               	goto	i1l4135
  9793  0721                     u345_20:	
  9794  0721                     i1l4131:	
  9795  0721  0854               	movf	_drivePWM1,w
  9796  0722  0676               	xorwf	setDrive@v,w
  9797  0723  1D03               	skipz
  9798  0724  2F26               	goto	u346_21
  9799  0725  2F27               	goto	u346_20
  9800  0726                     u346_21:	
  9801  0726  2F2D               	goto	i1l4135
  9802  0727                     u346_20:	
  9803  0727                     i1l4133:	
  9804  0727  0853               	movf	_drivePWM2,w
  9805  0728  0676               	xorwf	setDrive@v,w
  9806  0729  1903               	skipnz
  9807  072A  2F2C               	goto	u347_21
  9808  072B  2F2D               	goto	u347_20
  9809  072C                     u347_21:	
  9810  072C  2FF6               	goto	i1l521
  9811  072D                     u347_20:	
  9812  072D                     i1l4135:	
  9813                           
  9814                           ;settings.c: 185:         driveDir = dir;
  9815  072D  0879               	movf	setDrive@dir,w
  9816  072E  00F7               	movwf	??_setDrive
  9817  072F  0877               	movf	??_setDrive,w
  9818  0730  00D5               	movwf	_driveDir
  9819                           
  9820                           ;settings.c: 186:         drivePWM1 = v;
  9821  0731  0876               	movf	setDrive@v,w
  9822  0732  00F7               	movwf	??_setDrive
  9823  0733  0877               	movf	??_setDrive,w
  9824  0734  00D4               	movwf	_drivePWM1
  9825                           
  9826                           ;settings.c: 187:         drivePWM2 = v;
  9827  0735  0876               	movf	setDrive@v,w
  9828  0736  00F7               	movwf	??_setDrive
  9829  0737  0877               	movf	??_setDrive,w
  9830  0738  00D3               	movwf	_drivePWM2
  9831                           
  9832                           ;settings.c: 188:         switch(dir){
  9833  0739  2FE0               	goto	i1l4235
  9834  073A                     i1l4137:	
  9835                           
  9836                           ;settings.c: 190:                 TRISA |= 0b00111111;
  9837  073A  303F               	movlw	63
  9838  073B  00F7               	movwf	??_setDrive
  9839  073C  0877               	movf	??_setDrive,w
  9840  073D  0491               	iorwf	17,f	;volatile
  9841  073E                     i1l4139:	
  9842                           
  9843                           ;settings.c: 191:                 RA0PPS = 13;
  9844  073E  300D               	movlw	13
  9845  073F  003E               	movlb	30	; select bank30
  9846  0740  0090               	movwf	16	;volatile
  9847  0741                     i1l4141:	
  9848                           
  9849                           ;settings.c: 192:                 RA1PPS = 0x23;
  9850  0741  3023               	movlw	35
  9851  0742  0091               	movwf	17	;volatile
  9852  0743                     i1l4143:	
  9853                           
  9854                           ;settings.c: 193:                 RA2PPS = 14;
  9855  0743  300E               	movlw	14
  9856  0744  0092               	movwf	18	;volatile
  9857  0745                     i1l4145:	
  9858                           
  9859                           ;settings.c: 194:                 RA3PPS = 0;
  9860  0745  0193               	clrf	19	;volatile
  9861  0746                     i1l4147:	
  9862                           
  9863                           ;settings.c: 195:                 RA4PPS = 0x22;
  9864  0746  3022               	movlw	34
  9865  0747  0094               	movwf	20	;volatile
  9866  0748                     i1l4149:	
  9867                           
  9868                           ;settings.c: 196:                 RA5PPS = 0;
  9869  0748  0195               	clrf	21	;volatile
  9870                           
  9871                           ;settings.c: 197:                 LATA &= 0b11000000;
  9872  0749  30C0               	movlw	192
  9873  074A  00F7               	movwf	??_setDrive
  9874  074B  0877               	movf	??_setDrive,w
  9875  074C  0020               	movlb	0	; select bank0
  9876  074D  0596               	andwf	22,f	;volatile
  9877  074E                     i1l4151:	
  9878                           
  9879                           ;settings.c: 198:                 CWG3ISM = 0b0111;
  9880  074E  3007               	movlw	7
  9881  074F  002D               	movlb	13	; select bank13
  9882  0750  008D               	movwf	13	;volatile
  9883  0751                     i1l4153:	
  9884                           
  9885                           ;settings.c: 199:                 setPWM(5,v);
  9886  0751  0876               	movf	setDrive@v,w
  9887  0752  00F7               	movwf	??_setDrive
  9888  0753  0877               	movf	??_setDrive,w
  9889  0754  00F0               	movwf	i1setPWM@pwm
  9890  0755  3005               	movlw	5
  9891  0756  318B  2387  3187   	fcall	i1_setPWM
  9892  0759                     i1l4155:	
  9893                           
  9894                           ;settings.c: 200:                 setPWM(6,v);
  9895  0759  0876               	movf	setDrive@v,w
  9896  075A  00F7               	movwf	??_setDrive
  9897  075B  0877               	movf	??_setDrive,w
  9898  075C  00F0               	movwf	i1setPWM@pwm
  9899  075D  3006               	movlw	6
  9900  075E  318B  2387  3187   	fcall	i1_setPWM
  9901  0761                     i1l4157:	
  9902                           
  9903                           ;settings.c: 201:                 setPWM(7,245);
  9904  0761  30F5               	movlw	245
  9905  0762  00F7               	movwf	??_setDrive
  9906  0763  0877               	movf	??_setDrive,w
  9907  0764  00F0               	movwf	i1setPWM@pwm
  9908  0765  3007               	movlw	7
  9909  0766  318B  2387  3187   	fcall	i1_setPWM
  9910  0769                     i1l4159:	
  9911                           
  9912                           ;settings.c: 202:                 TRISA &= 0b11000000;
  9913  0769  30C0               	movlw	192
  9914  076A  00F7               	movwf	??_setDrive
  9915  076B  0877               	movf	??_setDrive,w
  9916  076C  0020               	movlb	0	; select bank0
  9917  076D  0591               	andwf	17,f	;volatile
  9918                           
  9919                           ;settings.c: 203:                 break;
  9920  076E  2FF6               	goto	i1l521
  9921  076F                     i1l4161:	
  9922                           
  9923                           ;settings.c: 205:                 TRISA |= 0b00111111;
  9924  076F  303F               	movlw	63
  9925  0770  00F7               	movwf	??_setDrive
  9926  0771  0877               	movf	??_setDrive,w
  9927  0772  0491               	iorwf	17,f	;volatile
  9928  0773                     i1l4163:	
  9929                           
  9930                           ;settings.c: 206:                 CWG3ISM = 0b0101;
  9931  0773  3005               	movlw	5
  9932  0774  002D               	movlb	13	; select bank13
  9933  0775  008D               	movwf	13	;volatile
  9934  0776                     i1l4165:	
  9935                           
  9936                           ;settings.c: 207:                 CWG1ISM = 0b0110;
  9937  0776  3006               	movlw	6
  9938  0777  002C               	movlb	12	; select bank12
  9939  0778  008D               	movwf	13	;volatile
  9940  0779                     i1l4167:	
  9941                           
  9942                           ;settings.c: 208:                 RA0PPS = 0x23;
  9943  0779  3023               	movlw	35
  9944  077A  003E               	movlb	30	; select bank30
  9945  077B  0090               	movwf	16	;volatile
  9946  077C                     i1l4169:	
  9947                           
  9948                           ;settings.c: 209:                 RA1PPS = 0;
  9949  077C  0191               	clrf	17	;volatile
  9950  077D                     i1l4171:	
  9951                           
  9952                           ;settings.c: 210:                 RA2PPS = 0x02;
  9953  077D  3002               	movlw	2
  9954  077E  0092               	movwf	18	;volatile
  9955  077F                     i1l4173:	
  9956                           
  9957                           ;settings.c: 211:                 RA3PPS = 0x22;
  9958  077F  3022               	movlw	34
  9959  0780  0093               	movwf	19	;volatile
  9960  0781                     i1l4175:	
  9961                           
  9962                           ;settings.c: 212:                 RA4PPS = 0;
  9963  0781  0194               	clrf	20	;volatile
  9964  0782                     i1l4177:	
  9965                           
  9966                           ;settings.c: 213:                 RA5PPS = 0x01;
  9967  0782  3001               	movlw	1
  9968  0783  0095               	movwf	21	;volatile
  9969                           
  9970                           ;settings.c: 214:                 LATA &= 0b11000000;
  9971  0784  30C0               	movlw	192
  9972  0785  00F7               	movwf	??_setDrive
  9973  0786  0877               	movf	??_setDrive,w
  9974  0787  0020               	movlb	0	; select bank0
  9975  0788  0596               	andwf	22,f	;volatile
  9976  0789                     i1l4179:	
  9977                           
  9978                           ;settings.c: 215:                 LATA |= 0b00000010;
  9979  0789  1496               	bsf	22,1	;volatile
  9980  078A                     i1l4181:	
  9981                           
  9982                           ;settings.c: 216:                 setPWM(5,v);
  9983  078A  0876               	movf	setDrive@v,w
  9984  078B  00F7               	movwf	??_setDrive
  9985  078C  0877               	movf	??_setDrive,w
  9986  078D  00F0               	movwf	i1setPWM@pwm
  9987  078E  3005               	movlw	5
  9988  078F  318B  2387  3187   	fcall	i1_setPWM
  9989  0792                     i1l4183:	
  9990                           
  9991                           ;settings.c: 217:                 setPWM(6,v);
  9992  0792  0876               	movf	setDrive@v,w
  9993  0793  00F7               	movwf	??_setDrive
  9994  0794  0877               	movf	??_setDrive,w
  9995  0795  00F0               	movwf	i1setPWM@pwm
  9996  0796  3006               	movlw	6
  9997  0797  318B  2387  3187   	fcall	i1_setPWM
  9998                           
  9999                           ;settings.c: 218:                 TRISA &= 0b11000000;
 10000  079A  30C0               	movlw	192
 10001  079B  00F7               	movwf	??_setDrive
 10002  079C  0877               	movf	??_setDrive,w
 10003  079D  0020               	movlb	0	; select bank0
 10004  079E  0591               	andwf	17,f	;volatile
 10005                           
 10006                           ;settings.c: 219:                 break;
 10007  079F  2FF6               	goto	i1l521
 10008  07A0                     i1l4185:	
 10009                           
 10010                           ;settings.c: 221:                 TRISA |= 0b00111111;
 10011  07A0  303F               	movlw	63
 10012  07A1  00F7               	movwf	??_setDrive
 10013  07A2  0877               	movf	??_setDrive,w
 10014  07A3  0491               	iorwf	17,f	;volatile
 10015  07A4                     i1l4187:	
 10016                           
 10017                           ;settings.c: 222:                 CWG3ISM = 0b0101;
 10018  07A4  3005               	movlw	5
 10019  07A5  002D               	movlb	13	; select bank13
 10020  07A6  008D               	movwf	13	;volatile
 10021  07A7                     i1l4189:	
 10022                           
 10023                           ;settings.c: 223:                 RA0PPS = 0;
 10024  07A7  003E               	movlb	30	; select bank30
 10025  07A8  0190               	clrf	16	;volatile
 10026  07A9                     i1l4191:	
 10027                           
 10028                           ;settings.c: 224:                 RA1PPS = 0x23;
 10029  07A9  3023               	movlw	35
 10030  07AA  0091               	movwf	17	;volatile
 10031  07AB                     i1l4193:	
 10032                           
 10033                           ;settings.c: 225:                 RA2PPS = 0x23;
 10034  07AB  3023               	movlw	35
 10035  07AC  0092               	movwf	18	;volatile
 10036  07AD                     i1l4195:	
 10037                           
 10038                           ;settings.c: 226:                 RA3PPS = 0;
 10039  07AD  0193               	clrf	19	;volatile
 10040  07AE                     i1l4197:	
 10041                           
 10042                           ;settings.c: 227:                 RA4PPS = 0;
 10043  07AE  0194               	clrf	20	;volatile
 10044  07AF                     i1l4199:	
 10045                           
 10046                           ;settings.c: 228:                 RA5PPS = 0x22;
 10047  07AF  3022               	movlw	34
 10048  07B0  0095               	movwf	21	;volatile
 10049  07B1                     i1l4201:	
 10050                           
 10051                           ;settings.c: 229:                 LATA &= 0b11000000;
 10052  07B1  30C0               	movlw	192
 10053  07B2  00F7               	movwf	??_setDrive
 10054  07B3  0877               	movf	??_setDrive,w
 10055  07B4  0020               	movlb	0	; select bank0
 10056  07B5  0596               	andwf	22,f	;volatile
 10057  07B6                     i1l4203:	
 10058                           
 10059                           ;settings.c: 230:                 LATA |= 0b00000001;
 10060  07B6  1416               	bsf	22,0	;volatile
 10061  07B7                     i1l4205:	
 10062                           
 10063                           ;settings.c: 231:                 setPWM(5,v);
 10064  07B7  0876               	movf	setDrive@v,w
 10065  07B8  00F7               	movwf	??_setDrive
 10066  07B9  0877               	movf	??_setDrive,w
 10067  07BA  00F0               	movwf	i1setPWM@pwm
 10068  07BB  3005               	movlw	5
 10069  07BC  318B  2387  3187   	fcall	i1_setPWM
 10070  07BF  2F69               	goto	i1l4159
 10071  07C0                     i1l4209:	
 10072                           
 10073                           ;settings.c: 235:                 TRISA |= 0b00111111;
 10074  07C0  303F               	movlw	63
 10075  07C1  00F7               	movwf	??_setDrive
 10076  07C2  0877               	movf	??_setDrive,w
 10077  07C3  0491               	iorwf	17,f	;volatile
 10078  07C4                     i1l4211:	
 10079                           
 10080                           ;settings.c: 236:                 CWG3ISM = 0b0101;
 10081  07C4  3005               	movlw	5
 10082  07C5  002D               	movlb	13	; select bank13
 10083  07C6  008D               	movwf	13	;volatile
 10084  07C7                     i1l4213:	
 10085                           
 10086                           ;settings.c: 237:                 RA0PPS = 0x23;
 10087  07C7  3023               	movlw	35
 10088  07C8  003E               	movlb	30	; select bank30
 10089  07C9  0090               	movwf	16	;volatile
 10090  07CA                     i1l4215:	
 10091                           
 10092                           ;settings.c: 238:                 RA1PPS = 0x23;
 10093  07CA  3023               	movlw	35
 10094  07CB  0091               	movwf	17	;volatile
 10095  07CC                     i1l4217:	
 10096                           
 10097                           ;settings.c: 239:                 RA2PPS = 0;
 10098  07CC  0192               	clrf	18	;volatile
 10099  07CD                     i1l4219:	
 10100                           
 10101                           ;settings.c: 240:                 RA3PPS = 0x22;
 10102  07CD  3022               	movlw	34
 10103  07CE  0093               	movwf	19	;volatile
 10104  07CF                     i1l4221:	
 10105                           
 10106                           ;settings.c: 241:                 RA4PPS = 0;
 10107  07CF  0194               	clrf	20	;volatile
 10108  07D0                     i1l4223:	
 10109                           
 10110                           ;settings.c: 242:                 RA5PPS = 0;
 10111  07D0  0195               	clrf	21	;volatile
 10112  07D1                     i1l4225:	
 10113                           
 10114                           ;settings.c: 243:                 LATA &= 0b11000000;
 10115  07D1  30C0               	movlw	192
 10116  07D2  00F7               	movwf	??_setDrive
 10117  07D3  0877               	movf	??_setDrive,w
 10118  07D4  0020               	movlb	0	; select bank0
 10119  07D5  0596               	andwf	22,f	;volatile
 10120  07D6                     i1l4227:	
 10121                           
 10122                           ;settings.c: 244:                 LATA |= 0b00000100;
 10123  07D6  1516               	bsf	22,2	;volatile
 10124  07D7                     i1l4229:	
 10125                           
 10126                           ;settings.c: 245:                 setPWM(5,v);
 10127  07D7  0876               	movf	setDrive@v,w
 10128  07D8  00F7               	movwf	??_setDrive
 10129  07D9  0877               	movf	??_setDrive,w
 10130  07DA  00F0               	movwf	i1setPWM@pwm
 10131  07DB  3005               	movlw	5
 10132  07DC  318B  2387  3187   	fcall	i1_setPWM
 10133  07DF  2F69               	goto	i1l4159
 10134  07E0                     i1l4235:	
 10135  07E0  0879               	movf	setDrive@dir,w
 10136  07E1  00F7               	movwf	??_setDrive
 10137  07E2  01F8               	clrf	??_setDrive+1
 10138                           
 10139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10140                           ; Switch size 1, requested type "simple"
 10141                           ; Number of cases is 1, Range of values is 0 to 0
 10142                           ; switch strategies available:
 10143                           ; Name         Instructions Cycles
 10144                           ; simple_byte            4     3 (average)
 10145                           ; direct_byte            8     6 (fixed)
 10146                           ; jumptable            260     6 (fixed)
 10147                           ;	Chosen strategy is simple_byte
 10148  07E3  0878               	movf	??_setDrive+1,w
 10149  07E4  3A00               	xorlw	0	; case 0
 10150  07E5  1903               	skipnz
 10151  07E6  2FE8               	goto	i1l5169
 10152  07E7  2FF6               	goto	i1l521
 10153  07E8                     i1l5169:	
 10154                           
 10155                           ; Switch size 1, requested type "simple"
 10156                           ; Number of cases is 4, Range of values is 0 to 3
 10157                           ; switch strategies available:
 10158                           ; Name         Instructions Cycles
 10159                           ; simple_byte           13     7 (average)
 10160                           ; direct_byte           14     6 (fixed)
 10161                           ; jumptable            260     6 (fixed)
 10162                           ;	Chosen strategy is simple_byte
 10163  07E8  0877               	movf	??_setDrive,w
 10164  07E9  3A00               	xorlw	0	; case 0
 10165  07EA  1903               	skipnz
 10166  07EB  2F3A               	goto	i1l4137
 10167  07EC  3A01               	xorlw	1	; case 1
 10168  07ED  1903               	skipnz
 10169  07EE  2F6F               	goto	i1l4161
 10170  07EF  3A03               	xorlw	3	; case 2
 10171  07F0  1903               	skipnz
 10172  07F1  2FA0               	goto	i1l4185
 10173  07F2  3A01               	xorlw	1	; case 3
 10174  07F3  1903               	skipnz
 10175  07F4  2FC0               	goto	i1l4209
 10176  07F5  2FF6               	goto	i1l521
 10177  07F6                     i1l521:	
 10178  07F6  0008               	return
 10179  07F7                     __end_of_setDrive:	
 10180                           
 10181                           	psect	text22
 10182  0A5D                     __ptext22:	
 10183 ;; *************** function _revRoutine *****************
 10184 ;; Defined at:
 10185 ;;		line 113 in file "settings.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  s               1    wreg     unsigned char 
 10188 ;; Auto vars:     Size  Location     Type
 10189 ;;  s               1   13[COMMON] unsigned char 
 10190 ;; Return value:  Size  Location     Type
 10191 ;;                  1    wreg      void 
 10192 ;; Registers used:
 10193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10194 ;; Tracked objects:
 10195 ;;		On entry : 0/0
 10196 ;;		On exit  : 0/0
 10197 ;;		Unchanged: 0/0
 10198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10201 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10202 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10203 ;;Total ram usage:        3 bytes
 10204 ;; Hardware stack levels used:    1
 10205 ;; Hardware stack levels required when called:    2
 10206 ;; This function calls:
 10207 ;;		i1_setMotors
 10208 ;; This function is called by:
 10209 ;;		_setStatus
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           
 10213                           
 10214                           ;psect for function _revRoutine
 10215  0A5D                     _revRoutine:	
 10216                           
 10217                           ;incstack = 0
 10218                           ; Regs used in _revRoutine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10219                           ;revRoutine@s stored from wreg
 10220  0A5D  00FD               	movwf	revRoutine@s
 10221  0A5E                     i1l4121:	
 10222                           
 10223                           ;settings.c: 114:     props.revolver.stat = (s<<2)&0b11000000+s&0b1111;
 10224  0A5E  087D               	movf	revRoutine@s,w
 10225  0A5F  00FB               	movwf	??_revRoutine
 10226  0A60  3002               	movlw	2
 10227  0A61                     u343_25:	
 10228  0A61  35FB               	lslf	??_revRoutine,f
 10229  0A62  0B89               	decfsz	9,f
 10230  0A63  2A61               	goto	u343_25
 10231  0A64  087D               	movf	revRoutine@s,w
 10232  0A65  3EC0               	addlw	192
 10233  0A66  057B               	andwf	??_revRoutine,w
 10234  0A67  390F               	andlw	15
 10235  0A68  00FC               	movwf	??_revRoutine+1
 10236  0A69  087C               	movf	??_revRoutine+1,w
 10237  0A6A  0020               	movlb	0	; select bank0
 10238  0A6B  00E1               	movwf	_props+8
 10239  0A6C                     i1l4123:	
 10240                           
 10241                           ;settings.c: 115:     if(s&0x10)
 10242  0A6C  1E7D               	btfss	revRoutine@s,4
 10243  0A6D  2A6F               	goto	u344_21
 10244  0A6E  2A70               	goto	u344_20
 10245  0A6F                     u344_21:	
 10246  0A6F  2A7B               	goto	i1l4127
 10247  0A70                     u344_20:	
 10248  0A70                     i1l4125:	
 10249                           
 10250                           ;settings.c: 116:         setMotors(1,1,255);
 10251  0A70  01F6               	clrf	i1setMotors@dir
 10252  0A71  0AF6               	incf	i1setMotors@dir,f
 10253  0A72  30FF               	movlw	255
 10254  0A73  00FB               	movwf	??_revRoutine
 10255  0A74  087B               	movf	??_revRoutine,w
 10256  0A75  00F7               	movwf	i1setMotors@v
 10257  0A76  3001               	movlw	1
 10258  0A77  3185  25AB  318A   	fcall	i1_setMotors
 10259  0A7A  2A84               	goto	i1l497
 10260  0A7B                     i1l4127:	
 10261                           
 10262                           ;settings.c: 118:         setMotors(1,0,255);
 10263  0A7B  01F6               	clrf	i1setMotors@dir
 10264  0A7C  30FF               	movlw	255
 10265  0A7D  00FB               	movwf	??_revRoutine
 10266  0A7E  087B               	movf	??_revRoutine,w
 10267  0A7F  00F7               	movwf	i1setMotors@v
 10268  0A80  3001               	movlw	1
 10269  0A81  3185  25AB  318A   	fcall	i1_setMotors
 10270  0A84                     i1l497:	
 10271  0A84  0008               	return
 10272  0A85                     __end_of_revRoutine:	
 10273                           
 10274                           	psect	text23
 10275  05AB                     __ptext23:	
 10276 ;; *************** function i1_setMotors *****************
 10277 ;; Defined at:
 10278 ;;		line 121 in file "settings.c"
 10279 ;; Parameters:    Size  Location     Type
 10280 ;;  motor           1    wreg     unsigned char 
 10281 ;;  dir             1    6[COMMON] unsigned char 
 10282 ;;  v               1    7[COMMON] unsigned char 
 10283 ;; Auto vars:     Size  Location     Type
 10284 ;;  motor           1   10[COMMON] unsigned char 
 10285 ;; Return value:  Size  Location     Type
 10286 ;;                  1    wreg      void 
 10287 ;; Registers used:
 10288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10289 ;; Tracked objects:
 10290 ;;		On entry : 0/0
 10291 ;;		On exit  : 0/0
 10292 ;;		Unchanged: 0/0
 10293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10297 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10298 ;;Total ram usage:        5 bytes
 10299 ;; Hardware stack levels used:    1
 10300 ;; Hardware stack levels required when called:    1
 10301 ;; This function calls:
 10302 ;;		i1___bmul
 10303 ;;		i1_setPWM
 10304 ;; This function is called by:
 10305 ;;		_setStatus
 10306 ;;		_setRoutine
 10307 ;;		_revRoutine
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           
 10311                           
 10312                           ;psect for function i1_setMotors
 10313  05AB                     i1_setMotors:	
 10314                           
 10315                           ;incstack = 0
 10316                           ; Regs used in i1_setMotors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10317                           ;i1setMotors@motor stored from wreg
 10318  05AB  00FA               	movwf	i1setMotors@motor
 10319  05AC                     i1l3915:	
 10320                           
 10321                           ;settings.c: 122:     dir = dir==1;
 10322  05AC  0376               	decf	i1setMotors@dir,w
 10323  05AD  1903               	btfsc	3,2
 10324  05AE  2DB0               	goto	u310_21
 10325  05AF  2DB2               	goto	u310_20
 10326  05B0                     u310_21:	
 10327  05B0  3001               	movlw	1
 10328  05B1  2DB3               	goto	u311_20
 10329  05B2                     u310_20:	
 10330  05B2  3000               	movlw	0
 10331  05B3                     u311_20:	
 10332  05B3  00F8               	movwf	??i1_setMotors
 10333  05B4  0878               	movf	??i1_setMotors,w
 10334  05B5  00F6               	movwf	i1setMotors@dir
 10335  05B6                     i1l3917:	
 10336                           
 10337                           ;settings.c: 123:     if((motorDirArr[motor] != dir) || (motorPWMArr[motor] != v)){
 10338  05B6  087A               	movf	i1setMotors@motor,w
 10339  05B7  3E4F               	addlw	(low (_motorDirArr| 0))& (0+255)
 10340  05B8  0086               	movwf	6
 10341  05B9  0187               	clrf	7
 10342  05BA  0801               	movf	1,w
 10343  05BB  0676               	xorwf	i1setMotors@dir,w
 10344  05BC  1D03               	skipz
 10345  05BD  2DBF               	goto	u312_21
 10346  05BE  2DC0               	goto	u312_20
 10347  05BF                     u312_21:	
 10348  05BF  2DCA               	goto	i1l3921
 10349  05C0                     u312_20:	
 10350  05C0                     i1l3919:	
 10351  05C0  087A               	movf	i1setMotors@motor,w
 10352  05C1  3E4B               	addlw	(low (_motorPWMArr| 0))& (0+255)
 10353  05C2  0086               	movwf	6
 10354  05C3  0187               	clrf	7
 10355  05C4  0801               	movf	1,w
 10356  05C5  0677               	xorwf	i1setMotors@v,w
 10357  05C6  1903               	skipnz
 10358  05C7  2DC9               	goto	u313_21
 10359  05C8  2DCA               	goto	u313_20
 10360  05C9                     u313_21:	
 10361  05C9  2F18               	goto	i1l509
 10362  05CA                     u313_20:	
 10363  05CA                     i1l3921:	
 10364                           
 10365                           ;settings.c: 124:         motorDirArr[motor] = dir;
 10366  05CA  0876               	movf	i1setMotors@dir,w
 10367  05CB  00F8               	movwf	??i1_setMotors
 10368  05CC  087A               	movf	i1setMotors@motor,w
 10369  05CD  3E4F               	addlw	(low (_motorDirArr| 0))& (0+255)
 10370  05CE  0086               	movwf	6
 10371  05CF  0187               	clrf	7
 10372  05D0  0878               	movf	??i1_setMotors,w
 10373  05D1  0081               	movwf	1
 10374                           
 10375                           ;settings.c: 125:         motorPWMArr[motor] = v;
 10376  05D2  0877               	movf	i1setMotors@v,w
 10377  05D3  00F8               	movwf	??i1_setMotors
 10378  05D4  087A               	movf	i1setMotors@motor,w
 10379  05D5  3E4B               	addlw	(low (_motorPWMArr| 0))& (0+255)
 10380  05D6  0086               	movwf	6
 10381  05D7  0187               	clrf	7
 10382  05D8  0878               	movf	??i1_setMotors,w
 10383  05D9  0081               	movwf	1
 10384                           
 10385                           ;settings.c: 126:         switch(motor){
 10386  05DA  2F02               	goto	i1l3997
 10387  05DB                     i1l3923:	
 10388                           
 10389                           ;settings.c: 128:                 TRISC |= 0b01010101;
 10390  05DB  3055               	movlw	85
 10391  05DC  00F8               	movwf	??i1_setMotors
 10392  05DD  0878               	movf	??i1_setMotors,w
 10393  05DE  0020               	movlb	0	; select bank0
 10394  05DF  0493               	iorwf	19,f	;volatile
 10395  05E0                     i1l3925:	
 10396                           
 10397                           ;settings.c: 129:                 RC6PPS = 9*(!dir);
 10398  05E0  3009               	movlw	9
 10399  05E1  00F8               	movwf	??i1_setMotors
 10400  05E2  0878               	movf	??i1_setMotors,w
 10401  05E3  00F0               	movwf	i1___bmul@multiplicand
 10402  05E4  0876               	movf	i1setMotors@dir,w
 10403  05E5  1903               	btfsc	3,2
 10404  05E6  2DE8               	goto	u314_21
 10405  05E7  2DEA               	goto	u314_20
 10406  05E8                     u314_21:	
 10407  05E8  3001               	movlw	1
 10408  05E9  2DEB               	goto	u315_20
 10409  05EA                     u314_20:	
 10410  05EA  3000               	movlw	0
 10411  05EB                     u315_20:	
 10412  05EB  3189  21B6  3185   	fcall	i1___bmul
 10413  05EE  003E               	movlb	30	; select bank30
 10414  05EF  00A6               	movwf	38	;volatile
 10415  05F0                     i1l3927:	
 10416                           
 10417                           ;settings.c: 130:                 RC2PPS = 0;
 10418  05F0  01A2               	clrf	34	;volatile
 10419  05F1                     i1l3929:	
 10420                           
 10421                           ;settings.c: 131:                 RC4PPS = 9*dir;
 10422  05F1  3009               	movlw	9
 10423  05F2  00F8               	movwf	??i1_setMotors
 10424  05F3  0878               	movf	??i1_setMotors,w
 10425  05F4  00F0               	movwf	i1___bmul@multiplicand
 10426  05F5  0876               	movf	i1setMotors@dir,w
 10427  05F6  3189  21B6  3185   	fcall	i1___bmul
 10428  05F9  003E               	movlb	30	; select bank30
 10429  05FA  00A4               	movwf	36	;volatile
 10430  05FB                     i1l3931:	
 10431                           
 10432                           ;settings.c: 132:                 RC0PPS = 0;
 10433  05FB  01A0               	clrf	32	;volatile
 10434                           
 10435                           ;settings.c: 133:                 LATCbits.LATC6 = !dir;
 10436  05FC  0876               	movf	i1setMotors@dir,w
 10437  05FD  1903               	btfsc	3,2
 10438  05FE  2E00               	goto	u316_21
 10439  05FF  2E03               	goto	u316_20
 10440  0600                     u316_21:	
 10441  0600  0020               	movlb	0	; select bank0
 10442  0601  1718               	bsf	24,6	;volatile
 10443  0602  2E05               	goto	u317_24
 10444  0603                     u316_20:	
 10445  0603  0020               	movlb	0	; select bank0
 10446  0604  1318               	bcf	24,6	;volatile
 10447  0605                     u317_24:	
 10448  0605                     i1l3933:	
 10449                           
 10450                           ;settings.c: 134:                 LATCbits.LATC2 = dir;
 10451  0605  0C76               	rrf	i1setMotors@dir,w
 10452  0606  1C03               	skipc
 10453  0607  1118               	bcf	24,2	;volatile
 10454  0608  1803               	skipnc
 10455  0609  1518               	bsf	24,2	;volatile
 10456  060A                     i1l3935:	
 10457                           
 10458                           ;settings.c: 135:                 LATCbits.LATC4 = dir;
 10459  060A  0C76               	rrf	i1setMotors@dir,w
 10460  060B  1C03               	skipc
 10461  060C  1218               	bcf	24,4	;volatile
 10462  060D  1803               	skipnc
 10463  060E  1618               	bsf	24,4	;volatile
 10464                           
 10465                           ;settings.c: 136:                 LATCbits.LATC0 = !dir;
 10466  060F  0876               	movf	i1setMotors@dir,w
 10467  0610  1903               	btfsc	3,2
 10468  0611  2E13               	goto	u318_21
 10469  0612  2E16               	goto	u318_20
 10470  0613                     u318_21:	
 10471  0613  0020               	movlb	0	; select bank0
 10472  0614  1418               	bsf	24,0	;volatile
 10473  0615  2E18               	goto	u319_24
 10474  0616                     u318_20:	
 10475  0616  0020               	movlb	0	; select bank0
 10476  0617  1018               	bcf	24,0	;volatile
 10477  0618                     u319_24:	
 10478  0618                     i1l3937:	
 10479                           
 10480                           ;settings.c: 137:                 setPWM(1,v);
 10481  0618  0877               	movf	i1setMotors@v,w
 10482  0619  00F8               	movwf	??i1_setMotors
 10483  061A  0878               	movf	??i1_setMotors,w
 10484  061B  00F0               	movwf	i1setPWM@pwm
 10485  061C  3001               	movlw	1
 10486  061D  318B  2387  3185   	fcall	i1_setPWM
 10487  0620                     i1l3939:	
 10488                           
 10489                           ;settings.c: 138:                 TRISC &= 0b10101010;
 10490  0620  30AA               	movlw	170
 10491  0621  00F8               	movwf	??i1_setMotors
 10492  0622  0878               	movf	??i1_setMotors,w
 10493  0623  0020               	movlb	0	; select bank0
 10494  0624  0593               	andwf	19,f	;volatile
 10495                           
 10496                           ;settings.c: 139:                 break;
 10497  0625  2F18               	goto	i1l509
 10498  0626                     i1l3941:	
 10499                           
 10500                           ;settings.c: 141:                 TRISC |= 0b10101010;
 10501  0626  30AA               	movlw	170
 10502  0627  00F8               	movwf	??i1_setMotors
 10503  0628  0878               	movf	??i1_setMotors,w
 10504  0629  0020               	movlb	0	; select bank0
 10505  062A  0493               	iorwf	19,f	;volatile
 10506  062B                     i1l3943:	
 10507                           
 10508                           ;settings.c: 142:                 RC7PPS = 10*(!dir);
 10509  062B  300A               	movlw	10
 10510  062C  00F8               	movwf	??i1_setMotors
 10511  062D  0878               	movf	??i1_setMotors,w
 10512  062E  00F0               	movwf	i1___bmul@multiplicand
 10513  062F  0876               	movf	i1setMotors@dir,w
 10514  0630  1903               	btfsc	3,2
 10515  0631  2E33               	goto	u320_21
 10516  0632  2E35               	goto	u320_20
 10517  0633                     u320_21:	
 10518  0633  3001               	movlw	1
 10519  0634  2E36               	goto	u321_20
 10520  0635                     u320_20:	
 10521  0635  3000               	movlw	0
 10522  0636                     u321_20:	
 10523  0636  3189  21B6  3185   	fcall	i1___bmul
 10524  0639  003E               	movlb	30	; select bank30
 10525  063A  00A7               	movwf	39	;volatile
 10526  063B                     i1l3945:	
 10527                           
 10528                           ;settings.c: 143:                 RC3PPS = 0;
 10529  063B  01A3               	clrf	35	;volatile
 10530  063C                     i1l3947:	
 10531                           
 10532                           ;settings.c: 144:                 RC5PPS = 10*dir;
 10533  063C  300A               	movlw	10
 10534  063D  00F8               	movwf	??i1_setMotors
 10535  063E  0878               	movf	??i1_setMotors,w
 10536  063F  00F0               	movwf	i1___bmul@multiplicand
 10537  0640  0876               	movf	i1setMotors@dir,w
 10538  0641  3189  21B6  3185   	fcall	i1___bmul
 10539  0644  003E               	movlb	30	; select bank30
 10540  0645  00A5               	movwf	37	;volatile
 10541  0646                     i1l3949:	
 10542                           
 10543                           ;settings.c: 145:                 RC1PPS = 0;
 10544  0646  01A1               	clrf	33	;volatile
 10545                           
 10546                           ;settings.c: 146:                 LATCbits.LATC7 = !dir;
 10547  0647  0876               	movf	i1setMotors@dir,w
 10548  0648  1903               	btfsc	3,2
 10549  0649  2E4B               	goto	u322_21
 10550  064A  2E4E               	goto	u322_20
 10551  064B                     u322_21:	
 10552  064B  0020               	movlb	0	; select bank0
 10553  064C  1798               	bsf	24,7	;volatile
 10554  064D  2E50               	goto	u323_24
 10555  064E                     u322_20:	
 10556  064E  0020               	movlb	0	; select bank0
 10557  064F  1398               	bcf	24,7	;volatile
 10558  0650                     u323_24:	
 10559  0650                     i1l3951:	
 10560                           
 10561                           ;settings.c: 147:                 LATCbits.LATC3 = dir;
 10562  0650  0C76               	rrf	i1setMotors@dir,w
 10563  0651  1C03               	skipc
 10564  0652  1198               	bcf	24,3	;volatile
 10565  0653  1803               	skipnc
 10566  0654  1598               	bsf	24,3	;volatile
 10567  0655                     i1l3953:	
 10568                           
 10569                           ;settings.c: 148:                 LATCbits.LATC5 = dir;
 10570  0655  0C76               	rrf	i1setMotors@dir,w
 10571  0656  1C03               	skipc
 10572  0657  1298               	bcf	24,5	;volatile
 10573  0658  1803               	skipnc
 10574  0659  1698               	bsf	24,5	;volatile
 10575                           
 10576                           ;settings.c: 149:                 LATCbits.LATC1 = !dir;
 10577  065A  0876               	movf	i1setMotors@dir,w
 10578  065B  1903               	btfsc	3,2
 10579  065C  2E5E               	goto	u324_21
 10580  065D  2E61               	goto	u324_20
 10581  065E                     u324_21:	
 10582  065E  0020               	movlb	0	; select bank0
 10583  065F  1498               	bsf	24,1	;volatile
 10584  0660  2E63               	goto	u325_24
 10585  0661                     u324_20:	
 10586  0661  0020               	movlb	0	; select bank0
 10587  0662  1098               	bcf	24,1	;volatile
 10588  0663                     u325_24:	
 10589  0663                     i1l3955:	
 10590                           
 10591                           ;settings.c: 150:                 setPWM(2,v);
 10592  0663  0877               	movf	i1setMotors@v,w
 10593  0664  00F8               	movwf	??i1_setMotors
 10594  0665  0878               	movf	??i1_setMotors,w
 10595  0666  00F0               	movwf	i1setPWM@pwm
 10596  0667  3002               	movlw	2
 10597  0668  318B  2387  3185   	fcall	i1_setPWM
 10598  066B                     i1l3957:	
 10599                           
 10600                           ;settings.c: 151:                 TRISC &= 0b01010101;
 10601  066B  3055               	movlw	85
 10602  066C  00F8               	movwf	??i1_setMotors
 10603  066D  0878               	movf	??i1_setMotors,w
 10604  066E  0020               	movlb	0	; select bank0
 10605  066F  0593               	andwf	19,f	;volatile
 10606                           
 10607                           ;settings.c: 152:                 break;
 10608  0670  2F18               	goto	i1l509
 10609  0671                     i1l3959:	
 10610                           
 10611                           ;settings.c: 154:                 TRISD |= 0b01010101;
 10612  0671  3055               	movlw	85
 10613  0672  00F8               	movwf	??i1_setMotors
 10614  0673  0878               	movf	??i1_setMotors,w
 10615  0674  0020               	movlb	0	; select bank0
 10616  0675  0494               	iorwf	20,f	;volatile
 10617  0676                     i1l3961:	
 10618                           
 10619                           ;settings.c: 155:                 RD4PPS = 11*(!dir);
 10620  0676  300B               	movlw	11
 10621  0677  00F8               	movwf	??i1_setMotors
 10622  0678  0878               	movf	??i1_setMotors,w
 10623  0679  00F0               	movwf	i1___bmul@multiplicand
 10624  067A  0876               	movf	i1setMotors@dir,w
 10625  067B  1903               	btfsc	3,2
 10626  067C  2E7E               	goto	u326_21
 10627  067D  2E80               	goto	u326_20
 10628  067E                     u326_21:	
 10629  067E  3001               	movlw	1
 10630  067F  2E81               	goto	u327_20
 10631  0680                     u326_20:	
 10632  0680  3000               	movlw	0
 10633  0681                     u327_20:	
 10634  0681  3189  21B6  3185   	fcall	i1___bmul
 10635  0684  003E               	movlb	30	; select bank30
 10636  0685  00AC               	movwf	44	;volatile
 10637  0686                     i1l3963:	
 10638                           
 10639                           ;settings.c: 156:                 RD0PPS = 0;
 10640  0686  01A8               	clrf	40	;volatile
 10641  0687                     i1l3965:	
 10642                           
 10643                           ;settings.c: 157:                 RD6PPS = 11*dir;
 10644  0687  300B               	movlw	11
 10645  0688  00F8               	movwf	??i1_setMotors
 10646  0689  0878               	movf	??i1_setMotors,w
 10647  068A  00F0               	movwf	i1___bmul@multiplicand
 10648  068B  0876               	movf	i1setMotors@dir,w
 10649  068C  3189  21B6  3185   	fcall	i1___bmul
 10650  068F  003E               	movlb	30	; select bank30
 10651  0690  00AE               	movwf	46	;volatile
 10652  0691                     i1l3967:	
 10653                           
 10654                           ;settings.c: 158:                 RD2PPS = 0;
 10655  0691  01AA               	clrf	42	;volatile
 10656                           
 10657                           ;settings.c: 159:                 LATDbits.LATD4 = !dir;
 10658  0692  0876               	movf	i1setMotors@dir,w
 10659  0693  1903               	btfsc	3,2
 10660  0694  2E96               	goto	u328_21
 10661  0695  2E99               	goto	u328_20
 10662  0696                     u328_21:	
 10663  0696  0020               	movlb	0	; select bank0
 10664  0697  1619               	bsf	25,4	;volatile
 10665  0698  2E9B               	goto	u329_24
 10666  0699                     u328_20:	
 10667  0699  0020               	movlb	0	; select bank0
 10668  069A  1219               	bcf	25,4	;volatile
 10669  069B                     u329_24:	
 10670  069B                     i1l3969:	
 10671                           
 10672                           ;settings.c: 160:                 LATDbits.LATD0 = dir;
 10673  069B  0C76               	rrf	i1setMotors@dir,w
 10674  069C  1C03               	skipc
 10675  069D  1019               	bcf	25,0	;volatile
 10676  069E  1803               	skipnc
 10677  069F  1419               	bsf	25,0	;volatile
 10678  06A0                     i1l3971:	
 10679                           
 10680                           ;settings.c: 161:                 LATDbits.LATD6 = dir;
 10681  06A0  0C76               	rrf	i1setMotors@dir,w
 10682  06A1  1C03               	skipc
 10683  06A2  1319               	bcf	25,6	;volatile
 10684  06A3  1803               	skipnc
 10685  06A4  1719               	bsf	25,6	;volatile
 10686                           
 10687                           ;settings.c: 162:                 LATDbits.LATD2 = !dir;
 10688  06A5  0876               	movf	i1setMotors@dir,w
 10689  06A6  1903               	btfsc	3,2
 10690  06A7  2EA9               	goto	u330_21
 10691  06A8  2EAC               	goto	u330_20
 10692  06A9                     u330_21:	
 10693  06A9  0020               	movlb	0	; select bank0
 10694  06AA  1519               	bsf	25,2	;volatile
 10695  06AB  2EAE               	goto	u331_24
 10696  06AC                     u330_20:	
 10697  06AC  0020               	movlb	0	; select bank0
 10698  06AD  1119               	bcf	25,2	;volatile
 10699  06AE                     u331_24:	
 10700  06AE                     i1l3973:	
 10701                           
 10702                           ;settings.c: 163:                 setPWM(3,v);
 10703  06AE  0877               	movf	i1setMotors@v,w
 10704  06AF  00F8               	movwf	??i1_setMotors
 10705  06B0  0878               	movf	??i1_setMotors,w
 10706  06B1  00F0               	movwf	i1setPWM@pwm
 10707  06B2  3003               	movlw	3
 10708  06B3  318B  2387  3185   	fcall	i1_setPWM
 10709  06B6                     i1l3975:	
 10710                           
 10711                           ;settings.c: 164:                 TRISD &= 0b10101010;
 10712  06B6  30AA               	movlw	170
 10713  06B7  00F8               	movwf	??i1_setMotors
 10714  06B8  0878               	movf	??i1_setMotors,w
 10715  06B9  0020               	movlb	0	; select bank0
 10716  06BA  0594               	andwf	20,f	;volatile
 10717                           
 10718                           ;settings.c: 165:                 break;
 10719  06BB  2F18               	goto	i1l509
 10720  06BC                     i1l3977:	
 10721                           
 10722                           ;settings.c: 167:                 TRISD |= 0b01010101;
 10723  06BC  3055               	movlw	85
 10724  06BD  00F8               	movwf	??i1_setMotors
 10725  06BE  0878               	movf	??i1_setMotors,w
 10726  06BF  0020               	movlb	0	; select bank0
 10727  06C0  0494               	iorwf	20,f	;volatile
 10728  06C1                     i1l3979:	
 10729                           
 10730                           ;settings.c: 168:                 RD5PPS = 12*(!dir);
 10731  06C1  300C               	movlw	12
 10732  06C2  00F8               	movwf	??i1_setMotors
 10733  06C3  0878               	movf	??i1_setMotors,w
 10734  06C4  00F0               	movwf	i1___bmul@multiplicand
 10735  06C5  0876               	movf	i1setMotors@dir,w
 10736  06C6  1903               	btfsc	3,2
 10737  06C7  2EC9               	goto	u332_21
 10738  06C8  2ECB               	goto	u332_20
 10739  06C9                     u332_21:	
 10740  06C9  3001               	movlw	1
 10741  06CA  2ECC               	goto	u333_20
 10742  06CB                     u332_20:	
 10743  06CB  3000               	movlw	0
 10744  06CC                     u333_20:	
 10745  06CC  3189  21B6  3185   	fcall	i1___bmul
 10746  06CF  003E               	movlb	30	; select bank30
 10747  06D0  00AD               	movwf	45	;volatile
 10748  06D1                     i1l3981:	
 10749                           
 10750                           ;settings.c: 169:                 RD1PPS = 0;
 10751  06D1  01A9               	clrf	41	;volatile
 10752  06D2                     i1l3983:	
 10753                           
 10754                           ;settings.c: 170:                 RD7PPS = 12*dir;
 10755  06D2  300C               	movlw	12
 10756  06D3  00F8               	movwf	??i1_setMotors
 10757  06D4  0878               	movf	??i1_setMotors,w
 10758  06D5  00F0               	movwf	i1___bmul@multiplicand
 10759  06D6  0876               	movf	i1setMotors@dir,w
 10760  06D7  3189  21B6  3185   	fcall	i1___bmul
 10761  06DA  003E               	movlb	30	; select bank30
 10762  06DB  00AF               	movwf	47	;volatile
 10763  06DC                     i1l3985:	
 10764                           
 10765                           ;settings.c: 171:                 RD3PPS = 0;
 10766  06DC  01AB               	clrf	43	;volatile
 10767                           
 10768                           ;settings.c: 172:                 LATDbits.LATD5 = !dir;
 10769  06DD  0876               	movf	i1setMotors@dir,w
 10770  06DE  1903               	btfsc	3,2
 10771  06DF  2EE1               	goto	u334_21
 10772  06E0  2EE4               	goto	u334_20
 10773  06E1                     u334_21:	
 10774  06E1  0020               	movlb	0	; select bank0
 10775  06E2  1699               	bsf	25,5	;volatile
 10776  06E3  2EE6               	goto	u335_24
 10777  06E4                     u334_20:	
 10778  06E4  0020               	movlb	0	; select bank0
 10779  06E5  1299               	bcf	25,5	;volatile
 10780  06E6                     u335_24:	
 10781  06E6                     i1l3987:	
 10782                           
 10783                           ;settings.c: 173:                 LATDbits.LATD1 = dir;
 10784  06E6  0C76               	rrf	i1setMotors@dir,w
 10785  06E7  1C03               	skipc
 10786  06E8  1099               	bcf	25,1	;volatile
 10787  06E9  1803               	skipnc
 10788  06EA  1499               	bsf	25,1	;volatile
 10789  06EB                     i1l3989:	
 10790                           
 10791                           ;settings.c: 174:                 LATDbits.LATD7 = dir;
 10792  06EB  0C76               	rrf	i1setMotors@dir,w
 10793  06EC  1C03               	skipc
 10794  06ED  1399               	bcf	25,7	;volatile
 10795  06EE  1803               	skipnc
 10796  06EF  1799               	bsf	25,7	;volatile
 10797                           
 10798                           ;settings.c: 175:                 LATDbits.LATD3 = !dir;
 10799  06F0  0876               	movf	i1setMotors@dir,w
 10800  06F1  1903               	btfsc	3,2
 10801  06F2  2EF4               	goto	u336_21
 10802  06F3  2EF7               	goto	u336_20
 10803  06F4                     u336_21:	
 10804  06F4  0020               	movlb	0	; select bank0
 10805  06F5  1599               	bsf	25,3	;volatile
 10806  06F6  2EF9               	goto	u337_24
 10807  06F7                     u336_20:	
 10808  06F7  0020               	movlb	0	; select bank0
 10809  06F8  1199               	bcf	25,3	;volatile
 10810  06F9                     u337_24:	
 10811  06F9                     i1l3991:	
 10812                           
 10813                           ;settings.c: 176:                 setPWM(4,v);
 10814  06F9  0877               	movf	i1setMotors@v,w
 10815  06FA  00F8               	movwf	??i1_setMotors
 10816  06FB  0878               	movf	??i1_setMotors,w
 10817  06FC  00F0               	movwf	i1setPWM@pwm
 10818  06FD  3004               	movlw	4
 10819  06FE  318B  2387  3185   	fcall	i1_setPWM
 10820  0701  2EB6               	goto	i1l3975
 10821  0702                     i1l3997:	
 10822  0702  087A               	movf	i1setMotors@motor,w
 10823  0703  00F8               	movwf	??i1_setMotors
 10824  0704  01F9               	clrf	??i1_setMotors+1
 10825                           
 10826                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10827                           ; Switch size 1, requested type "simple"
 10828                           ; Number of cases is 1, Range of values is 0 to 0
 10829                           ; switch strategies available:
 10830                           ; Name         Instructions Cycles
 10831                           ; simple_byte            4     3 (average)
 10832                           ; direct_byte            8     6 (fixed)
 10833                           ; jumptable            260     6 (fixed)
 10834                           ;	Chosen strategy is simple_byte
 10835  0705  0879               	movf	??i1_setMotors+1,w
 10836  0706  3A00               	xorlw	0	; case 0
 10837  0707  1903               	skipnz
 10838  0708  2F0A               	goto	i1l5171
 10839  0709  2F18               	goto	i1l509
 10840  070A                     i1l5171:	
 10841                           
 10842                           ; Switch size 1, requested type "simple"
 10843                           ; Number of cases is 4, Range of values is 1 to 4
 10844                           ; switch strategies available:
 10845                           ; Name         Instructions Cycles
 10846                           ; simple_byte           13     7 (average)
 10847                           ; direct_byte           17     9 (fixed)
 10848                           ; jumptable            263     9 (fixed)
 10849                           ;	Chosen strategy is simple_byte
 10850  070A  0878               	movf	??i1_setMotors,w
 10851  070B  3A01               	xorlw	1	; case 1
 10852  070C  1903               	skipnz
 10853  070D  2DDB               	goto	i1l3923
 10854  070E  3A03               	xorlw	3	; case 2
 10855  070F  1903               	skipnz
 10856  0710  2E26               	goto	i1l3941
 10857  0711  3A01               	xorlw	1	; case 3
 10858  0712  1903               	skipnz
 10859  0713  2E71               	goto	i1l3959
 10860  0714  3A07               	xorlw	7	; case 4
 10861  0715  1903               	skipnz
 10862  0716  2EBC               	goto	i1l3977
 10863  0717  2F18               	goto	i1l509
 10864  0718                     i1l509:	
 10865  0718  0008               	return
 10866  0719                     __end_ofi1_setMotors:	
 10867                           
 10868                           	psect	text24
 10869  0B87                     __ptext24:	
 10870 ;; *************** function i1_setPWM *****************
 10871 ;; Defined at:
 10872 ;;		line 43 in file "settings.c"
 10873 ;; Parameters:    Size  Location     Type
 10874 ;;  module          1    wreg     unsigned char 
 10875 ;;  pwm             1    0[COMMON] unsigned char 
 10876 ;; Auto vars:     Size  Location     Type
 10877 ;;  module          1    3[COMMON] unsigned char 
 10878 ;; Return value:  Size  Location     Type
 10879 ;;                  1    wreg      void 
 10880 ;; Registers used:
 10881 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10882 ;; Tracked objects:
 10883 ;;		On entry : 0/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10887 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10890 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10891 ;;Total ram usage:        6 bytes
 10892 ;; Hardware stack levels used:    1
 10893 ;; This function calls:
 10894 ;;		Nothing
 10895 ;; This function is called by:
 10896 ;;		_setDrive
 10897 ;;		_setDrive2
 10898 ;;		i1_setMotors
 10899 ;; This function uses a non-reentrant model
 10900 ;;
 10901                           
 10902                           
 10903                           ;psect for function i1_setPWM
 10904  0B87                     i1_setPWM:	
 10905                           
 10906                           ;incstack = 0
 10907                           ; Regs used in i1_setPWM: [wreg-fsr0h+status,2+status,0]
 10908                           ;i1setPWM@module stored from wreg
 10909  0B87  00F3               	movwf	i1setPWM@module
 10910  0B88                     i1l3873:	
 10911                           
 10912                           ;settings.c: 44:     pwm = pwm<=250 ? pwm : 250;
 10913  0B88  30FB               	movlw	251
 10914  0B89  0270               	subwf	i1setPWM@pwm,w
 10915  0B8A  1C03               	skipc
 10916  0B8B  2B8D               	goto	u307_21
 10917  0B8C  2B8E               	goto	u307_20
 10918  0B8D                     u307_21:	
 10919  0B8D  2B93               	goto	i1l3877
 10920  0B8E                     u307_20:	
 10921  0B8E                     i1l3875:	
 10922  0B8E  30FA               	movlw	250
 10923  0B8F  00F4               	movwf	i1_setPWM$1156
 10924  0B90  3000               	movlw	0
 10925  0B91  00F5               	movwf	i1_setPWM$1156+1
 10926  0B92  2B9A               	goto	i1l466
 10927  0B93                     i1l3877:	
 10928  0B93  0870               	movf	i1setPWM@pwm,w
 10929  0B94  00F1               	movwf	??i1_setPWM
 10930  0B95  01F2               	clrf	??i1_setPWM+1
 10931  0B96  0871               	movf	??i1_setPWM,w
 10932  0B97  00F4               	movwf	i1_setPWM$1156
 10933  0B98  0872               	movf	??i1_setPWM+1,w
 10934  0B99  00F5               	movwf	i1_setPWM$1156+1
 10935  0B9A                     i1l466:	
 10936  0B9A  0874               	movf	i1_setPWM$1156,w
 10937  0B9B  00F1               	movwf	??i1_setPWM
 10938  0B9C  0871               	movf	??i1_setPWM,w
 10939  0B9D  00F0               	movwf	i1setPWM@pwm
 10940                           
 10941                           ;settings.c: 45:     switch(module){
 10942  0B9E  2BBB               	goto	i1l3895
 10943  0B9F                     i1l3879:	
 10944                           
 10945                           ;settings.c: 47:             CCPR1H = pwm;
 10946  0B9F  0870               	movf	i1setPWM@pwm,w
 10947  0BA0  0026               	movlb	6	; select bank6
 10948  0BA1  008D               	movwf	13	;volatile
 10949                           
 10950                           ;settings.c: 48:             break;
 10951  0BA2  2BDA               	goto	i1l476
 10952  0BA3                     i1l3881:	
 10953                           
 10954                           ;settings.c: 50:             CCPR2H = pwm;
 10955  0BA3  0870               	movf	i1setPWM@pwm,w
 10956  0BA4  0026               	movlb	6	; select bank6
 10957  0BA5  0091               	movwf	17	;volatile
 10958                           
 10959                           ;settings.c: 51:             break;
 10960  0BA6  2BDA               	goto	i1l476
 10961  0BA7                     i1l3883:	
 10962                           
 10963                           ;settings.c: 53:             CCPR3H = pwm;
 10964  0BA7  0870               	movf	i1setPWM@pwm,w
 10965  0BA8  0026               	movlb	6	; select bank6
 10966  0BA9  0095               	movwf	21	;volatile
 10967                           
 10968                           ;settings.c: 54:             break;
 10969  0BAA  2BDA               	goto	i1l476
 10970  0BAB                     i1l3885:	
 10971                           
 10972                           ;settings.c: 56:             CCPR4H = pwm;
 10973  0BAB  0870               	movf	i1setPWM@pwm,w
 10974  0BAC  0026               	movlb	6	; select bank6
 10975  0BAD  0099               	movwf	25	;volatile
 10976                           
 10977                           ;settings.c: 57:             break;
 10978  0BAE  2BDA               	goto	i1l476
 10979  0BAF                     i1l3887:	
 10980                           
 10981                           ;settings.c: 59:             CCPR5H = pwm;
 10982  0BAF  0870               	movf	i1setPWM@pwm,w
 10983  0BB0  0026               	movlb	6	; select bank6
 10984  0BB1  009D               	movwf	29	;volatile
 10985                           
 10986                           ;settings.c: 60:             break;
 10987  0BB2  2BDA               	goto	i1l476
 10988  0BB3                     i1l3889:	
 10989                           
 10990                           ;settings.c: 62:             PWM6DCH = pwm;
 10991  0BB3  0870               	movf	i1setPWM@pwm,w
 10992  0BB4  0027               	movlb	7	; select bank7
 10993  0BB5  008D               	movwf	13	;volatile
 10994                           
 10995                           ;settings.c: 63:             break;
 10996  0BB6  2BDA               	goto	i1l476
 10997  0BB7                     i1l3891:	
 10998                           
 10999                           ;settings.c: 65:             PWM7DCH = pwm;
 11000  0BB7  0870               	movf	i1setPWM@pwm,w
 11001  0BB8  0027               	movlb	7	; select bank7
 11002  0BB9  0091               	movwf	17	;volatile
 11003                           
 11004                           ;settings.c: 66:             break;
 11005  0BBA  2BDA               	goto	i1l476
 11006  0BBB                     i1l3895:	
 11007  0BBB  0873               	movf	i1setPWM@module,w
 11008  0BBC  00F1               	movwf	??i1_setPWM
 11009  0BBD  01F2               	clrf	??i1_setPWM+1
 11010                           
 11011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11012                           ; Switch size 1, requested type "simple"
 11013                           ; Number of cases is 1, Range of values is 0 to 0
 11014                           ; switch strategies available:
 11015                           ; Name         Instructions Cycles
 11016                           ; simple_byte            4     3 (average)
 11017                           ; direct_byte            8     6 (fixed)
 11018                           ; jumptable            260     6 (fixed)
 11019                           ;	Chosen strategy is simple_byte
 11020  0BBE  0872               	movf	??i1_setPWM+1,w
 11021  0BBF  3A00               	xorlw	0	; case 0
 11022  0BC0  1903               	skipnz
 11023  0BC1  2BC3               	goto	i1l5173
 11024  0BC2  2BDA               	goto	i1l476
 11025  0BC3                     i1l5173:	
 11026                           
 11027                           ; Switch size 1, requested type "simple"
 11028                           ; Number of cases is 7, Range of values is 1 to 7
 11029                           ; switch strategies available:
 11030                           ; Name         Instructions Cycles
 11031                           ; simple_byte           22    12 (average)
 11032                           ; direct_byte           23     9 (fixed)
 11033                           ; jumptable            263     9 (fixed)
 11034                           ;	Chosen strategy is simple_byte
 11035  0BC3  0871               	movf	??i1_setPWM,w
 11036  0BC4  3A01               	xorlw	1	; case 1
 11037  0BC5  1903               	skipnz
 11038  0BC6  2B9F               	goto	i1l3879
 11039  0BC7  3A03               	xorlw	3	; case 2
 11040  0BC8  1903               	skipnz
 11041  0BC9  2BA3               	goto	i1l3881
 11042  0BCA  3A01               	xorlw	1	; case 3
 11043  0BCB  1903               	skipnz
 11044  0BCC  2BA7               	goto	i1l3883
 11045  0BCD  3A07               	xorlw	7	; case 4
 11046  0BCE  1903               	skipnz
 11047  0BCF  2BAB               	goto	i1l3885
 11048  0BD0  3A01               	xorlw	1	; case 5
 11049  0BD1  1903               	skipnz
 11050  0BD2  2BAF               	goto	i1l3887
 11051  0BD3  3A03               	xorlw	3	; case 6
 11052  0BD4  1903               	skipnz
 11053  0BD5  2BB3               	goto	i1l3889
 11054  0BD6  3A01               	xorlw	1	; case 7
 11055  0BD7  1903               	skipnz
 11056  0BD8  2BB7               	goto	i1l3891
 11057  0BD9  2BDA               	goto	i1l476
 11058  0BDA                     i1l476:	
 11059  0BDA  0008               	return
 11060  0BDB                     __end_ofi1_setPWM:	
 11061                           
 11062                           	psect	text25
 11063  09B6                     __ptext25:	
 11064 ;; *************** function i1___bmul *****************
 11065 ;; Defined at:
 11066 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul8.c"
 11067 ;; Parameters:    Size  Location     Type
 11068 ;;  multiplier      1    wreg     unsigned char 
 11069 ;;  multiplicand    1    0[COMMON] unsigned char 
 11070 ;; Auto vars:     Size  Location     Type
 11071 ;;  multiplier      1    3[COMMON] unsigned char 
 11072 ;;  __bmul          1    2[COMMON] unsigned char 
 11073 ;; Return value:  Size  Location     Type
 11074 ;;                  1    wreg      unsigned char 
 11075 ;; Registers used:
 11076 ;;		wreg, status,2, status,0
 11077 ;; Tracked objects:
 11078 ;;		On entry : 0/0
 11079 ;;		On exit  : 0/0
 11080 ;;		Unchanged: 0/0
 11081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11082 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11085 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11086 ;;Total ram usage:        4 bytes
 11087 ;; Hardware stack levels used:    1
 11088 ;; This function calls:
 11089 ;;		Nothing
 11090 ;; This function is called by:
 11091 ;;		i1_setMotors
 11092 ;; This function uses a non-reentrant model
 11093 ;;
 11094                           
 11095                           
 11096                           ;psect for function i1___bmul
 11097  09B6                     i1___bmul:	
 11098                           
 11099                           ;incstack = 0
 11100                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 11101                           ;i1___bmul@multiplier stored from wreg
 11102  09B6  00F3               	movwf	i1___bmul@multiplier
 11103  09B7                     i1l3901:	
 11104  09B7  01F2               	clrf	i1___bmul@product
 11105  09B8                     i1l3903:	
 11106  09B8  1C73               	btfss	i1___bmul@multiplier,0
 11107  09B9  29BB               	goto	u308_21
 11108  09BA  29BC               	goto	u308_20
 11109  09BB                     u308_21:	
 11110  09BB  29C0               	goto	i1l3907
 11111  09BC                     u308_20:	
 11112  09BC                     i1l3905:	
 11113  09BC  0870               	movf	i1___bmul@multiplicand,w
 11114  09BD  00F1               	movwf	??i1___bmul
 11115  09BE  0871               	movf	??i1___bmul,w
 11116  09BF  07F2               	addwf	i1___bmul@product,f
 11117  09C0                     i1l3907:	
 11118  09C0  1003               	clrc
 11119  09C1  0DF0               	rlf	i1___bmul@multiplicand,f
 11120  09C2                     i1l3909:	
 11121  09C2  1003               	clrc
 11122  09C3  0CF3               	rrf	i1___bmul@multiplier,f
 11123  09C4  0873               	movf	i1___bmul@multiplier,w
 11124  09C5  1D03               	btfss	3,2
 11125  09C6  29C8               	goto	u309_21
 11126  09C7  29C9               	goto	u309_20
 11127  09C8                     u309_21:	
 11128  09C8  29B8               	goto	i1l3903
 11129  09C9                     u309_20:	
 11130  09C9                     i1l3911:	
 11131  09C9  0872               	movf	i1___bmul@product,w
 11132  09CA                     i1l883:	
 11133  09CA  0008               	return
 11134  09CB                     __end_ofi1___bmul:	
 11135                           
 11136                           	psect	text26
 11137  0AB5                     __ptext26:	
 11138 ;; *************** function _handleRead *****************
 11139 ;; Defined at:
 11140 ;;		line 64 in file "i2c.c"
 11141 ;; Parameters:    Size  Location     Type
 11142 ;;		None
 11143 ;; Auto vars:     Size  Location     Type
 11144 ;;		None
 11145 ;; Return value:  Size  Location     Type
 11146 ;;                  1    wreg      void 
 11147 ;; Registers used:
 11148 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11149 ;; Tracked objects:
 11150 ;;		On entry : 0/0
 11151 ;;		On exit  : 0/0
 11152 ;;		Unchanged: 0/0
 11153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11157 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11158 ;;Total ram usage:        2 bytes
 11159 ;; Hardware stack levels used:    1
 11160 ;; This function calls:
 11161 ;;		Nothing
 11162 ;; This function is called by:
 11163 ;;		_i2cISR
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           
 11168                           ;psect for function _handleRead
 11169  0AB5                     _handleRead:	
 11170  0AB5                     i1l3129:	
 11171                           ;incstack = 0
 11172                           ; Regs used in _handleRead: [wreg-fsr0h+status,2+status,0]
 11173                           
 11174                           
 11175                           ;i2c.c: 65:     switch(i2c_settings&0b1111){
 11176  0AB5  2ACD               	goto	i1l3147
 11177  0AB6                     i1l3131:	
 11178                           
 11179                           ;i2c.c: 67:             SSP1BUF = props.claw1.height;
 11180  0AB6  085B               	movf	_props+2,w
 11181  0AB7  0023               	movlb	3	; select bank3
 11182  0AB8  008C               	movwf	12	;volatile
 11183                           
 11184                           ;i2c.c: 68:             break;
 11185  0AB9  2AEB               	goto	i1l309
 11186  0ABA                     i1l3133:	
 11187                           
 11188                           ;i2c.c: 70:             SSP1BUF = props.claw1.orientation;
 11189  0ABA  085A               	movf	_props+1,w
 11190  0ABB  0023               	movlb	3	; select bank3
 11191  0ABC  008C               	movwf	12	;volatile
 11192                           
 11193                           ;i2c.c: 71:             break;
 11194  0ABD  2AEB               	goto	i1l309
 11195  0ABE                     i1l3135:	
 11196                           
 11197                           ;i2c.c: 73:             SSP1BUF = props.claw1.clamped;
 11198  0ABE  0859               	movf	_props,w
 11199  0ABF  0023               	movlb	3	; select bank3
 11200  0AC0  008C               	movwf	12	;volatile
 11201                           
 11202                           ;i2c.c: 74:             break;
 11203  0AC1  2AEB               	goto	i1l309
 11204  0AC2                     i1l3137:	
 11205                           
 11206                           ;i2c.c: 76:             SSP1BUF = props.revolver.stat;
 11207  0AC2  0861               	movf	_props+8,w
 11208  0AC3  0023               	movlb	3	; select bank3
 11209  0AC4  008C               	movwf	12	;volatile
 11210                           
 11211                           ;i2c.c: 77:             break;
 11212  0AC5  2AEB               	goto	i1l309
 11213  0AC6                     i1l3139:	
 11214                           
 11215                           ;i2c.c: 79:             SSP1BUF = props.claw1.routine;
 11216  0AC6  085C               	movf	_props+3,w
 11217  0AC7  0023               	movlb	3	; select bank3
 11218  0AC8  008C               	movwf	12	;volatile
 11219                           
 11220                           ;i2c.c: 80:             break;
 11221  0AC9  2AEB               	goto	i1l309
 11222  0ACA                     i1l3143:	
 11223                           
 11224                           ;i2c.c: 85:             SSP1BUF = 0;
 11225  0ACA  0023               	movlb	3	; select bank3
 11226  0ACB  018C               	clrf	12	;volatile
 11227                           
 11228                           ;i2c.c: 86:             break;
 11229  0ACC  2AEB               	goto	i1l309
 11230  0ACD                     i1l3147:	
 11231  0ACD  0020               	movlb	0	; select bank0
 11232  0ACE  0857               	movf	_i2c_settings,w
 11233  0ACF  390F               	andlw	15
 11234  0AD0  00F0               	movwf	??_handleRead
 11235  0AD1  01F1               	clrf	??_handleRead+1
 11236                           
 11237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11238                           ; Switch size 1, requested type "simple"
 11239                           ; Number of cases is 1, Range of values is 0 to 0
 11240                           ; switch strategies available:
 11241                           ; Name         Instructions Cycles
 11242                           ; simple_byte            4     3 (average)
 11243                           ; direct_byte            8     6 (fixed)
 11244                           ; jumptable            260     6 (fixed)
 11245                           ;	Chosen strategy is simple_byte
 11246  0AD2  0871               	movf	??_handleRead+1,w
 11247  0AD3  3A00               	xorlw	0	; case 0
 11248  0AD4  1903               	skipnz
 11249  0AD5  2AD7               	goto	i1l5175
 11250  0AD6  2ACA               	goto	i1l3143
 11251  0AD7                     i1l5175:	
 11252                           
 11253                           ; Switch size 1, requested type "simple"
 11254                           ; Number of cases is 6, Range of values is 0 to 5
 11255                           ; switch strategies available:
 11256                           ; Name         Instructions Cycles
 11257                           ; direct_byte           18     6 (fixed)
 11258                           ; simple_byte           19    10 (average)
 11259                           ; jumptable            260     6 (fixed)
 11260                           ;	Chosen strategy is simple_byte
 11261  0AD7  0870               	movf	??_handleRead,w
 11262  0AD8  3A00               	xorlw	0	; case 0
 11263  0AD9  1903               	skipnz
 11264  0ADA  2AB6               	goto	i1l3131
 11265  0ADB  3A01               	xorlw	1	; case 1
 11266  0ADC  1903               	skipnz
 11267  0ADD  2ABA               	goto	i1l3133
 11268  0ADE  3A03               	xorlw	3	; case 2
 11269  0ADF  1903               	skipnz
 11270  0AE0  2ABE               	goto	i1l3135
 11271  0AE1  3A01               	xorlw	1	; case 3
 11272  0AE2  1903               	skipnz
 11273  0AE3  2AC2               	goto	i1l3137
 11274  0AE4  3A07               	xorlw	7	; case 4
 11275  0AE5  1903               	skipnz
 11276  0AE6  2AC6               	goto	i1l3139
 11277  0AE7  3A01               	xorlw	1	; case 5
 11278  0AE8  1903               	skipnz
 11279  0AE9  2AC2               	goto	i1l3137
 11280  0AEA  2ACA               	goto	i1l3143
 11281  0AEB                     i1l309:	
 11282  0AEB  0008               	return
 11283  0AEC                     __end_of_handleRead:	
 11284  007E                     btemp	set	126	;btemp
 11285  007E                     int$flags	set	126
 11286  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         31
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      64
    BANK1            80      9       9
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    updateTime@p	PTR struct properties size(1) Largest target is 17
		 -> props(BANK0[17]), 

    testButtons@lift	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.height(BANK0[1]), 

    testButtons@rotate	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.orientation(BANK0[1]), 

    testButtons@p	PTR struct properties size(1) Largest target is 17
		 -> props(BANK0[17]), 

    testButtons@clamp	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.clamped(BANK0[1]), 

    updateMovement@lift	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.height(BANK0[1]), 

    updateMovement@rotate	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.orientation(BANK0[1]), 

    updateMovement@p	PTR struct properties size(1) Largest target is 17
		 -> props(BANK0[17]), 

    updateMovement@clamp	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.clamped(BANK0[1]), 

    updateMotors@lift	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.height(BANK0[1]), 

    updateMotors@rotate	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.orientation(BANK0[1]), 

    updateMotors@p	PTR struct properties size(1) Largest target is 17
		 -> props(BANK0[17]), 

    updateMotors@clamp	PTR unsigned char  size(1) Largest target is 1
		 -> props.claw1.clamped(BANK0[1]), 

    updateSys@p	PTR struct properties size(1) Largest target is 17
		 -> props(BANK0[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _setStatus->_revRoutine
    _setRoutine->i1_setMotors
    _setDrive2->i1_setPWM
    _setDrive->i1_setPWM
    _revRoutine->i1_setMotors
    i1_setMotors->i1_setPWM

Critical Paths under _main in BANK0

    _updateSys->_updateMotors
    _updateSys->_updateTime
    _updateMovement->_setMotors
    _updateMotors->_setMotors
    _setMotors->_setPWM

Critical Paths under _ISR in BANK0

    _ISR->_i2cISR
    _i2cISR->_handleWrite
    _handleWrite->_setStatus
    _setStatus->_setRoutine

Critical Paths under _main in BANK1

    _main->_updateSys
    _updateSys->_updateMovement

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19985
                       _configureCPU
                       _configureI2C
                       _configureIOs
                       _configurePWM
                    _configureTimers
                          _updateSys
 ---------------------------------------------------------------------------------
 (1) _updateSys                                            1     1      0   19985
                                              8 BANK1      1     1      0
                        _testButtons
                       _updateMotors
                     _updateMovement
                         _updateTime
 ---------------------------------------------------------------------------------
 (2) _updateTime                                          17    17      0     546
                                             16 BANK0     17    17      0
 ---------------------------------------------------------------------------------
 (2) _updateMovement                                      13    13      0   12131
                                             27 BANK0      5     5      0
                                              0 BANK1      8     8      0
                          _setMotors
                           _setProps
 ---------------------------------------------------------------------------------
 (3) _setProps                                             5     3      2    3606
                                             16 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _updateMotors                                         6     6      0    6414
                                             27 BANK0      6     6      0
                          _setMotors
 ---------------------------------------------------------------------------------
 (3) _setMotors                                            5     3      2    5947
                                             22 BANK0      5     3      2
                             ___bmul
                             _setPWM
 ---------------------------------------------------------------------------------
 (4) _setPWM                                               6     5      1    1370
                                             16 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     856
                                             16 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _testButtons                                          5     5      0     622
                                             16 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _configureTimers                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurePWM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureIOs                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureI2C                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configureCPU                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0   13856
                             _i2cISR
 ---------------------------------------------------------------------------------
 (6) _i2cISR                                               2     2      0   13856
                                             14 BANK0      2     2      0
                         _handleRead
                        _handleWrite
 ---------------------------------------------------------------------------------
 (7) _handleWrite                                          4     4      0   13819
                                             10 BANK0      4     4      0
                          _setStatus
 ---------------------------------------------------------------------------------
 (8) _setStatus                                            8     5      3   13695
                                              2 BANK0      8     5      3
                         _revRoutine
                           _setDrive
                          _setDrive2
                         _setRoutine
                        i1_setMotors
 ---------------------------------------------------------------------------------
 (9) _setRoutine                                           4     4      0    3368
                                             11 COMMON     2     2      0
                                              0 BANK0      2     2      0
                        i1_setMotors
 ---------------------------------------------------------------------------------
 (9) _setDrive2                                            5     3      2    1431
                                              6 COMMON     5     3      2
                           i1_setPWM
 ---------------------------------------------------------------------------------
 (9) _setDrive                                             4     3      1    1403
                                              6 COMMON     4     3      1
                           i1_setPWM
 ---------------------------------------------------------------------------------
 (9) _revRoutine                                           3     3      0    3300
                                             11 COMMON     3     3      0
                        i1_setMotors
 ---------------------------------------------------------------------------------
 (9) i1_setMotors                                          5     3      2    3207
                                              6 COMMON     5     3      2
                           i1___bmul
                           i1_setPWM
 ---------------------------------------------------------------------------------
 (10) i1_setPWM                                            6     5      1     910
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (10) i1___bmul                                            4     3      1     416
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) _handleRead                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configureCPU
   _configureI2C
   _configureIOs
   _configurePWM
   _configureTimers
   _updateSys
     _testButtons
     _updateMotors
       _setMotors
         ___bmul
         _setPWM
     _updateMovement
       _setMotors
         ___bmul
         _setPWM
       _setProps
     _updateTime

 _ISR (ROOT)
   _i2cISR
     _handleRead
     _handleWrite
       _setStatus
         _revRoutine
           i1_setMotors
             i1___bmul
             i1_setPWM
         _setDrive
           i1_setPWM
         _setDrive2
           i1_setPWM
         _setRoutine
           i1_setMotors
             i1___bmul
             i1_setPWM
         i1_setMotors
           i1___bmul
           i1_setPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      9       9       7       11.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      57      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      57      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Jan 28 18:53:22 2020

           ?_configureI2C 0070             ?_configureCPU 0070             ?_configureIOs 0070  
           ?_configurePWM 0070            ___bmul@product 0032               __CFG_CP$OFF 0000  
             __CFG_LVP$ON 0000                       l231 09A5                       l240 09B5  
                     l234 0A5C                       l243 09E0                       l600 004A  
                     l249 0C90                       l601 0055                       l610 0326  
                     l700 0D86                       l604 008A                       l509 05AA  
                     l705 0E17                       l466 0BEF                       l476 0C2F  
                     l680 0437                       l584 0A16                       l683 0B33  
                     l596 0F49                       l599 003F                       l883 09F6  
                     _PR2 028D              __CFG_CPD$OFF 0000                       _ISR 0004  
            __CFG_BORV$LO 0000                       wreg 0009                      ?_ISR 0070  
         updateTime@tPrev 003C              __CFG_ZCD$OFF 0000                      l4241 0BDD  
                    l4251 0BFC                      l4243 0BE3                      l4331 0469  
                    l4323 043A                      l4411 0AEE                      l4501 0D74  
                    l4253 0C00                      l4245 0BE8                      l4341 0494  
                    l4333 046D                      l4405 0594                      l4325 0444  
                    l4503 0D78                      l4271 09E4                      l4255 0C04  
                    l4247 0BF4                      l4263 0C10                      l4351 04B9  
                    l4343 0499                      l4335 047D                      l4327 044E  
                    l4511 002D                      l4505 0D7E                      l4273 09E8  
                    l5161 0C18                      l4257 0C08                      l4249 0BF8  
                    l4361 04E5                      l4353 04C9                      l4345 04A7  
                    l4337 047E                      l4329 0458                      l4601 01FC  
                    l5153 0190                      l4521 005C                      l4513 0034  
                    l4275 09EC                      l4259 0C0C                      l4371 0515  
                    l4363 04F3                      l4355 04CA                      l4347 04AF  
                    l4339 0489                      l5155 02F0                      l4611 0221  
                    l4603 0208                      l4531 0096                      l4523 0066  
                    l4515 003B                      l4507 0020                      l4451 0DAC  
                    l4443 0D89                      l4461 0D12                      l4277 09EE  
                    l4269 09E3                      l4381 053F                      l4373 0516  
                    l4365 04FB                      l4357 04D5                      l4349 04B5  
                    l5157 0312                      l4621 029C                      l4613 0228  
                    l4605 020D                      l4541 00B1                      l4525 006E  
                    l4517 0046                      l4509 0026                      l4453 0DDA  
                    l4445 0D91                      l4471 0D2B                      l4463 0D16  
                    l4455 0D04                      l4279 09F5                      l5159 059C  
                    l4391 0562                      l4383 0547                      l4375 0521  
                    l4367 0501                      l4359 04E0                      l4711 0EBB  
                    l4631 02CA                      l4623 02A4                      l4615 025A  
                    l4607 0214                      l4551 012C                      l4543 00B8  
                    l4535 009C                      l4527 0078                      l4519 0051  
                    l4447 0D98                      l4801 0C50                      l4481 0D46  
                    l4473 0D32                      l4465 0D1B                      l4457 0D08  
                    l4393 056D                      l4385 054D                      l4377 052C  
                    l4369 0505                      l4721 0EED                      l4713 0EC0  
                    l4641 02E6                      l4633 02D2                      l4625 02AF  
                    l4617 0262                      l4609 021A                      l4561 0157  
                    l4553 0134                      l4545 00EA                      l4537 00A4  
                    l4529 0080                      l4449 0DA2                      l4811 0C5D  
                    l4803 0C52                      l4491 0D62                      l4483 0D4B  
                    l4475 0D36                      l4467 0D22                      l4459 0D0D  
                    l4395 0578                      l4387 0551                      l4379 0531  
                    l4731 0F23                      l4723 0EF5                      l4715 0EC7  
                    l4707 0EB2                      l4651 0339                      l4635 02D8  
                    l4627 02B7                      l4619 026A                      l4571 017F  
                    l4563 015E                      l4555 013C                      l4547 00F2  
                    l4539 00AA                      l4741 0A38                      l4821 0C69  
                    l4813 0C5F                      l4805 0C54                      l4493 0D66  
                    l4485 0D52                      l4477 0D3B                      l4469 0D26  
                    l4397 057D                      l4389 0561                      l4733 0F2E  
                    l4725 0F00                      l4717 0ED2                      l4709 0EB6  
                    l4661 0395                      l4653 0341                      l4637 02DF  
                    l4629 02BE                      l4581 01AC                      l4565 016A  
                    l4557 0143                      l4549 00FA                      l4645 02FE  
                    l4901 0A31                      l4751 0A50                      l4743 0A44  
                    l4831 0C72                      l4823 0C6A                      l4815 0C60  
                    l4807 0C57                      l4495 0D67                      l4487 0D56  
                    l4479 0D42                      l4399 058B                      l4735 0F43  
                    l4727 0F15                      l4719 0EE7                      l4671 03D8  
                    l4655 034E                      l4663 03B7                      l4591 01D4  
                    l4583 01B3                      l4575 0186                      l4567 0172  
                    l4559 014F                      l4647 0326                      l4737 099C  
                    l4753 0A52                      l4745 0A47                      l4841 0C7F  
                    l4833 0C75                      l4825 0C6C                      l4817 0C61  
                    l4809 0C5C                      l4761 09A6                      l4497 0D6C  
                    l4489 0D5B                      l4729 0F1B                      l4681 03FF  
                    l4673 03DF                      l4657 0359                      l4649 032F  
                    l4665 03C2                      l4593 01E0                      l4585 01BF  
                    l4577 019E                      l4569 0178                      l4739 09A3  
                    l4755 0A53                      l4747 0A4B                      l4851 0C8B  
                    l4843 0C82                      l4835 0C77                      l4827 0C6D  
                    l4819 0C64                      l4771 0C30                      l4763 09AE  
                    l4499 0D73                      l4691 0426                      l4683 0406  
                    l4675 03E9                      l4667 03CA                      l4659 038C  
                    l4595 01E7                      l4587 01C7                      l4579 01A6  
                    l4757 0A54                      l4749 0A4D                      l4853 0C8D  
                    l4845 0C84                      l4837 0C7B                      l4829 0C70  
                    l4781 0C44                      l4773 0C3E                      l4765 09AF  
                    l4693 042D                      l4685 0410                      l4677 03F1  
                    l4669 03D1                      l4597 01EE                      l4589 01CD  
                    l4759 0A5A                      l4855 0C8F                      l4847 0C88  
                    l4839 0C7D                      l4791 0C4A                      l4783 0C45  
                    l4775 0C40                      l4767 09B3                      l4687 0418  
                    l4679 03F8                      l4599 01F5                      l4769 09CB  
                    l4849 0C89                      l4793 0C4C                      l4785 0C46  
                    l4777 0C41                      l4689 041F                      l4795 0C4D  
                    l4787 0C47                      l4779 0C43                      l4883 09F9  
                    l4797 0C4E                      l4789 0C49                      l4885 0A07  
                    l4893 0A17                      l4799 0C4F                      l4887 0A0C  
                    l4895 0A26                      l4897 0A28                      l4899 0A29  
                    _LATA 0016                      _LATB 0017                      _LATC 0018  
                    u4000 0D56                      _LATD 0019                      u4001 0D55  
                    _LATE 001A                      u4010 0D66                      u4011 0D65  
                    u4020 0D78                      u4100 00A4                      u4021 0D77  
                    u4101 00A3                      u4110 00EA                      u4030 003B  
                    u4111 00E9                      u4031 003A                      u4200 01F5  
                    u4120 012C                      u4040 0046                      u4201 01F4  
                    u4121 012B                      u4041 0045                      u4210 020D  
                    u4130 013C                      u4050 0051                      u4211 020C  
                    u4131 013B                      u4051 0050                      u3500 09F5  
                    u4300 0341                      u4220 0214                      u4140 0157  
                    u4060 005C                      u3501 09F4                      u4301 0340  
                    u4221 0213                      u4141 0156                      u4061 005B  
                    u4310 038C                      u4230 025A                      u4150 0172  
                    u4070 006E                      u4311 038B                      u4231 0259  
                    u4151 0171                      u4071 006D                      u3600 0440  
                    u4400 0406                      u4320 0395                      u4240 029C  
                    u4160 01A6                      u4080 0080                      u3601 043E  
                    u4401 0405                      u4321 0394                      u4241 029B  
                    u4161 01A5                      u4081 007F                      u3610 0441  
                    u4410 0418                      u4330 03CA                      u4250 02B7  
                    u4170 01C7                      u4090 009B                      u4411 0417  
                    u4331 03C9                      u4251 02B6                      u4171 01C6  
                    u4091 009A                      u3700 04C3                      u3620 044E  
                    u4500 0F00                      u4420 041F                      u4340 03D1  
                    u4260 02D2                      u4180 01E7                      u3701 04C1  
                    u3621 044D                      u4501 0EFF                      u4421 041E  
                    u4341 03D0                      u4261 02D1                      u4181 01E6  
                    u3710 04C4                      u3630 0458                      u4510 0F08  
                    u4430 0426                      u4350 03D8                      u4190 01EE  
                    u3631 0457                      u4511 0F06                      u4431 0425  
                    u4351 03D7                      u4191 01ED                      u3480 0BE3  
                    u3800 053D                      u3720 04DE                      u3640 0477  
                    u4520 0F09                      u4440 042D                      u4360 03DF  
                    u4280 032F                      u3481 0BE2                      u3801 053A  
                    u3721 04DB                      u3641 0475                      u4441 042C  
                    u4361 03DE                      u4281 032E                      u3490 09E8  
                    u3650 0478                      u4530 0F23                      u4450 0EC7  
                    u4370 03F1                      u4290 0339                      u3491 09E7  
                    u4531 0F22                      u4451 0EC6                      u4371 03F0  
                    u4291 0338                      u4275 0306                      u3820 055B  
                    u3740 04F1                      u3660 0492                      u4540 0F2E  
                    u4460 0ED2                      u4380 03F8                      u3821 0559  
                    u3741 04EE                      u3661 048F                      u4541 0F2D  
                    u4461 0ED1                      u4381 03F7                      u3830 055C  
                    u3814 053F                      u3734 04E0                      u4550 0F36  
                    u4470 0EDA                      u4390 03FF                      u4551 0F34  
                    u4471 0ED8                      u4391 03FE                      u3840 0576  
                    u3760 050F                      u3680 04A5                      u4560 0F37  
                    u4480 0EDB                      u3841 0573                      u3761 050D  
                    u3681 04A2                      u3905 0B08                      u3770 0510  
                    u3754 04F3                      u3674 0494                      u4490 0EF5  
                    u4491 0EF4                      u3915 0B13                      u3860 0589  
                    u3780 052A                      u3861 0586                      u3781 0527  
                    u3925 0B1F                      u3854 0578                      u3694 04A7  
                    u3950 0DAC                      u3935 0B2A                      u3951 0DAB  
                    u3960 0D16                      u3961 0D15                      u3970 0D26  
                    u3874 058B                      u3794 052C                      u3971 0D25  
                    u3955 0DA8                      u3980 0D36                      u3981 0D35  
                    u3885 0AF1                      u3990 0D46                      u3991 0D45  
                    u3895 0AFC                      _WPUA 0F39                      _WPUB 0F44  
                    _WPUC 0F4F                      _WPUD 0F5A                      _WPUE 0F65  
         updateMovement@p 003F           updateMovement@s 003B              __CFG_WRT$OFF 0000  
  __end_of_updateMovement 0438          ?_configureTimers 0070                      _main 0A17  
                    fsr0h 0005                      fsr1h 0007                      indf0 0000  
                    fsr0l 0004                      indf1 0001                      fsr1l 0006  
                    btemp 007E             __CFG_BOREN$ON 0000         testButtons@rotate 0032  
                    start 0010            ??_configureI2C 0030         ___bmul@multiplier 0033  
           __CFG_MCLRE$ON 0000            ??_configureCPU 0030            ??_configureIOs 0030  
          ??_configurePWM 0030            setMotors@motor 003A                     ??_ISR 007E  
                   _ADACQ 009D                     ?_main 0070                     _ADCLK 0098  
                   _ADCNT 010C                     _ADPCH 009E                     _ADREF 009A  
                   _ADPRE 009C             __CFG_WDTE$OFF 0000                     _T3CLK 0217  
                   _T2CON 028E                     _T3CON 0214                     i1l309 0AEB  
                   i1l280 0AA0                     i1l521 07F6                     i1l337 000E  
                   i1l531 0EAF                     i1l292 0B41                     i1l509 0718  
                   i1l446 0CB4                     i1l447 0D01                     i1l287 0AB4  
                   i1l456 0CEC                     i1l296 0B6C                     i1l297 0B86  
                   i1l466 0B9A                     i1l476 0BDA                     i1l492 0FFF  
                   i1l497 0A84                     i1l883 09CA                     _TMR0H 001D  
                   _TMR0L 001C                     _TRISA 0011                     _TRISB 0012  
                   _TRISC 0013                     _TRISD 0014                     _TRISE 0015  
          __CFG_FCMEN$OFF 0000                     _props 0059          updateMotors@lift 003F  
             i1_setMotors 05AB          __end_ofi1___bmul 09CB           ?_updateMovement 003A  
                   status 0003                     wtemp0 007E          __end_ofi1_setPWM 0BDB  
          __CFG_CSWEN$OFF 0000           __initialization 0012                _i2c_status 0058  
            __end_of_main 0A38                    ??_main 0041      __size_of_handleWrite 0053  
                  _ADCON0 0093                    _ADCON1 0094                    _ADCON2 0095  
                  _ADCON3 0096                    _CCPR1H 030D                    _CCPR2H 0311  
                  _CCPR1L 030C                    _CCPR3H 0315                    _CCPR2L 0310  
                  _CCPR4H 0319                    _CCPR3L 0314                    _CCPR5H 031D  
                  _CCPR4L 0318                    _CCPR5L 031C                    _ANSELA 0F38  
                  _ANSELB 0F43                    _ANSELC 0F4E                    _ANSELD 0F59  
                  _ANSELE 0F64        __CFG_RSTOSC$HFINT1 0000                    _T0CON0 001E  
                  _T0CON1 001F                    _T3GCON 0215                    _RA0PPS 0F10  
                  _RA1PPS 0F11                    _RA2PPS 0F12                    _RA3PPS 0F13  
                  _RC0PPS 0F20                    _RA4PPS 0F14                    _RC1PPS 0F21  
                  _RA5PPS 0F15                    _RA6PPS 0F16                    _RC2PPS 0F22  
                  _RD0PPS 0F28                    _RA7PPS 0F17                    _RC3PPS 0F23  
                  _RD1PPS 0F29                    _RB6PPS 0F1E                    _RC4PPS 0F24  
                  _RD2PPS 0F2A                    _RB7PPS 0F1F                    _RC5PPS 0F25  
                  _RD3PPS 0F2B                    i1l3131 0AB6                    i1l4011 0E39  
                  i1l4003 0E19                    _RC6PPS 0F26                    _RD4PPS 0F2C  
                  i1l3133 0ABA                    i1l4021 0E45                    i1l4013 0E3D  
                  i1l4005 0E20                    i1l4101 0FC9                    i1l3143 0ACA  
                  i1l3135 0ABE                    i1l4031 0E60                    i1l4023 0E47  
                  i1l4015 0E40                    i1l4007 0E26                    i1l4111 0FD5  
                  i1l3137 0AC2                    i1l3129 0AB5                    i1l4121 0A5E  
                  i1l4201 07B1                    i1l4041 0E78                    i1l4033 0E68  
                  i1l4025 0E4D                    i1l4017 0E42                    i1l4009 0E2C  
                  i1l3139 0AC6                    i1l3147 0ACD                    i1l4123 0A6C  
                  i1l4211 07C4                    i1l4203 07B6                    i1l4131 0721  
                  i1l4051 0E81                    i1l4043 0E7B                    i1l4035 0E6E  
                  i1l4027 0E50                    i1l4019 0E44                    i1l4107 0FCA  
                  i1l4115 0FDC                    _RC7PPS 0F27                    _RD5PPS 0F2D  
                  i1l4125 0A70                    i1l4221 07CF                    i1l4213 07C7  
                  i1l4205 07B7                    i1l4141 0741                    i1l4133 0727  
                  i1l4053 0E88                    i1l4045 0E7C                    i1l4037 0E72  
                  i1l4029 0E58                    i1l4061 0E9F                    i1l4109 0FD0  
                  i1l4301 0CCC                    i1l4127 0A7B                    i1l4223 07D0  
                  i1l4215 07CA                    i1l4151 074E                    i1l4143 0743  
                  i1l4135 072D                    i1l4055 0E89                    i1l4047 0E7E  
                  i1l4039 0E75                    i1l4071 0F5E                    i1l4311 0CDC  
                  i1l4303 0CCD                    i1l4225 07D1                    i1l4217 07CC  
                  i1l4209 07C0                    i1l4161 076F                    i1l4153 0751  
                  i1l4145 0745                    i1l4137 073A                    i1l4129 071A  
                  i1l4057 0E91                    i1l4049 0E80                    i1l4081 0F77  
                  i1l4073 0F62                    i1l4313 0CE2                    i1l4305 0CD2  
                  i1l4321 0CF9                    i1l4227 07D6                    i1l4219 07CD  
                  i1l4171 077D                    i1l4163 0773                    i1l4155 0759  
                  i1l4147 0746                    i1l4139 073E                    i1l4235 07E0  
                  i1l4091 0F9D                    i1l4083 0F7D                    i1l4075 0F66  
                  i1l4067 0F4C                    i1l4315 0CE4                    i1l4307 0CD4  
                  _RD6PPS 0F2E                    i1l4229 07D7                    i1l4181 078A  
                  i1l4173 077F                    i1l4165 0776                    i1l4157 0761  
                  i1l4149 0748                    i1l4093 0FA6                    i1l4085 0F87  
                  i1l4077 0F6B                    i1l4069 0F52                    i1l4317 0CEA  
                  i1l4309 0CDA                    i1l4421 0B44                    i1l4413 0B36  
                  i1l4191 07A9                    i1l4183 0792                    i1l4175 0781  
                  i1l4167 0779                    i1l4159 0769                    i1l4095 0FAC  
                  i1l4087 0F8D                    i1l4079 0F6D                    i1l4319 0CEC  
                  i1l4431 0B6E                    i1l4423 0B48                    i1l4415 0B37  
                  i1l4193 07AB                    i1l4185 07A0                    i1l4177 0782  
                  i1l4169 077C                    i1l4097 0FBE                    i1l4089 0F97  
                  i1l4425 0B54                    i1l4417 0B3B                    i1l5171 070A  
                  i1l4195 07AD                    i1l4187 07A4                    i1l4179 0789  
                  i1l4099 0FC4                    i1l4283 0C93                    i1l5163 0B7B  
                  i1l4427 0B5A                    i1l4419 0B40                    i1l4435 0B73  
                  _RD7PPS 0F2F                    i1l3901 09B7                    i1l5173 0BC3  
                  i1l4197 07AE                    i1l4189 07A7                    i1l5165 0FE5  
                  i1l4293 0CB8                    i1l4285 0C98                    i1l4429 0B69  
                  i1l5175 0AD7                    i1l3911 09C9                    i1l3903 09B8  
                  i1l4199 07AF                    i1l5167 0EA7                    i1l4295 0CBC  
                  i1l4287 0CA3                    i1l3905 09BC                    i1l3921 05CA  
                  i1l5169 07E8                    i1l4297 0CC1                    i1l4289 0CA7  
          __CFG_WDTCCS$SC 0000                    i1l3907 09C0                    i1l3931 05FB  
                  i1l3923 05DB                    i1l3915 05AC                    i1l4299 0CC6  
                  i1l3909 09C2                    i1l3941 0626                    i1l3933 0605  
                  i1l3925 05E0                    i1l3917 05B6                    i1l3951 0650  
                  i1l3943 062B                    i1l3935 060A                    i1l3927 05F0  
                  i1l3919 05C0                    i1l3881 0BA3                    i1l3873 0B88  
                  i1l3961 0676                    i1l3953 0655                    i1l3945 063B  
                  i1l3937 0618                    i1l3929 05F1                    i1l3891 0BB7  
                  i1l3883 0BA7                    i1l3875 0B8E                    i1l3971 06A0  
                  i1l3963 0686                    i1l3955 0663                    i1l3947 063C  
                  i1l3939 0620                    i1l3885 0BAB                    i1l3877 0B93  
                  i1l3981 06D1                    i1l3973 06AE                    i1l3965 0687  
                  i1l3957 066B                    i1l3949 0646                    i1l4861 0A87  
                  i1l3887 0BAF                    i1l3879 0B9F                    i1l3895 0BBB  
                  i1l3991 06F9                    i1l3983 06D2                    i1l3975 06B6  
                  i1l3967 0691                    i1l3959 0671                    i1l4871 0AA4  
                  i1l4863 0A8D                    u310_20 05B2                    i1l3889 0BB3  
                  i1l3985 06DC                    i1l3977 06BC                    i1l3969 069B  
                  u310_21 05B0                    i1l4881 0AB3                    i1l4873 0AA6  
                  i1l4865 0A92                    i1l4857 0A85                    i1l3987 06E6  
                  i1l3979 06C1                    i1l4875 0AAB                    i1l4867 0A96  
                  i1l4859 0A85                    i1l4891 000B                    i1l3989 06EB  
                  i1l3997 0702                    i1l4877 0AAE                    i1l4869 0A9A  
                  i1l4879 0AB1                    u311_20 05B3                    i1l4889 0006  
                  u320_20 0635                    u312_20 05C0                    u320_21 0633  
                  u312_21 05BF                    _INLVLA 0F3C                    _INLVLB 0F47  
                  _INLVLE 0F68                    u321_20 0636                    u313_20 05CA  
                  _INTCON 000B                    u313_21 05C9                    u330_20 06AC  
                  u322_20 064E                    u314_20 05EA                    u330_21 06A9  
                  u322_21 064B                    u314_21 05E8                    u307_20 0B8E  
                  u315_20 05EB                    _FVRCON 090C                    u307_21 0B8D  
                  u331_24 06AE                    u323_24 0650                    u308_20 09BC  
                  u332_20 06CB                    u324_20 0661                    u316_20 0603  
                  u340_20 0E2C                    u308_21 09BB                    u332_21 06C9  
                  u324_21 065E                    u316_21 0600                    u340_21 0E2B  
                  u309_20 09C9                    u333_20 06CC                    u341_20 0F52  
                  u309_21 09C8                    u341_21 0F51                    u325_24 0663  
                  u317_24 0605                    u334_20 06E4                    u326_20 0680  
                  u318_20 0616                    u342_20 0FDB                    u334_21 06E1  
                  u326_21 067E                    u318_21 0613                    u342_21 0FDA  
                  u327_20 0681                    u335_24 06E6                    u319_24 0618  
                  u343_25 0A61                    u351_25 0C9B                    u336_20 06F7  
                  u328_20 0699                    u344_20 0A70                    u352_20 0CA7  
                  u336_21 06F4                    u328_21 0696                    u344_21 0A6F  
                  u352_21 0CA6                    u345_20 0721                    u353_20 0CB8  
                  u345_21 0720                    u353_21 0CB7                    u337_24 06F9  
                  u329_24 069B                    u346_20 0727                    u338_20 0E20  
                  u354_20 0CBC                    u346_21 0726                    u338_21 0E1F  
                  u354_21 0CBB                    u347_20 072D                    u339_20 0E26  
                  u355_20 0CCC                    u347_21 072C                    u339_21 0E25  
                  u355_21 0CCB                    u356_20 0CD2                    u460_20 0AA4  
                  u356_21 0CD1                    u460_21 0AA3                    u357_20 0CDA  
                  u461_20 0AAB                    u357_21 0CD9                    u461_21 0AAA  
                  u358_20 0CE2                    u462_20 000B                    u358_21 0CE1  
                  u462_21 000A                    u359_20 0CEA                    u359_21 0CE9  
                  u457_20 0A92                    u457_21 0A91                    u394_20 0B40  
                  u458_20 0A96                    u394_21 0B3F                    u458_21 0A95  
                  u459_20 0A9A                    u459_21 0A99                    _OSCFRQ 0893  
                  _SSP1IF 3878                    _i2cISR 0A85            __CFG_PWRTE$OFF 0000  
                  ___bmul 09E1               i1setPWM@pwm 0070            __CFG_STVREN$ON 0000  
                  _setPWM 0BDB         updateMotors@clamp 003D          __end_of_setDrive 07F7  
        __end_of_setProps 0B34              ?_testButtons 002F            setStatus@motor 0028  
    __end_of_configureI2C 09E1      __end_of_configureCPU 09A6      __end_of_configureIOs 0A5D  
    __end_of_configurePWM 0C91   __end_of__initialization 001A       ___bmul@multiplicand 0030  
           updateMotors@p 0040            __pcstackCOMMON 0070                 ?i1___bmul 0070  
            _CWG1CON0bits 0610                 ?i1_setPWM 0070              _CWG3CON0bits 0690  
        i1___bmul@product 0072                __pbssBANK0 004B                   ?_i2cISR 0070  
             setDrive2@v2 0077                __pmaintext 0A17               setDrive@dir 0079  
                 ?___bmul 0030        __size_of_setDrive2 0098                __pintentry 0004  
                 _CCP1CON 030E                   _CCP2CON 0312                   _CCP3CON 0316  
              _handleRead 0AB5                   _CCP4CON 031A                   _CCP5CON 031E  
      __size_of_setMotors 0173                   _CLC1CON 0E10                   _CLC2CON 0E1A  
                 _CLC1POL 0E11                   _CLC2POL 0E1B                   ?_setPWM 0030  
      __size_of_setStatus 0071                ??i1___bmul 0071                   _CWG1DBF 060F  
                 _CWG1DBR 060E                   _CWG3DBF 068F                   _CWG3DBR 068E  
                 _CWG1ISM 060D                   _CWG3ISM 068D                ??i1_setPWM 0071  
                 _OSCCON1 088D          i1setMotors@motor 007A                   i2cISR@d 002F  
                 _PWM6DCH 038D                   _PWM6DCL 038C                   _PWM7DCH 0391  
                 _PWM7DCL 0390                   _PWM6CON 038E        __size_of_updateSys 0020  
                 _PWM7CON 0392                   _SSP1ADD 018D          ??_updateMovement 00A0  
                 _SSP1BUF 018C             i1_setPWM$1156 0074              ?i1_setMotors 0076  
      updateMovement@lift 003E               revRoutine@s 007D                   _i2c_val 0056  
               ?_setDrive 0076           __size_of_i2cISR 0030                 ?_setProps 0030  
             setStatus@v2 0023  __size_of_configureTimers 0010      __CFG_SCANE$available 0000  
         __size_of___bmul 0016               setRoutine@i 0021               setRoutine@s 0020  
         __size_of_setPWM 0055                   __ptext1 09F7                   __ptext2 0D87  
                 __ptext3 001E                   __ptext4 0AEC                   __ptext5 0EB0  
                 __ptext6 0438                   __ptext7 0BDB                   __ptext8 09E1  
                 __ptext9 0D02     __size_of_configureI2C 0016     __size_of_configureCPU 000A  
            __size_of_ISR 000C     __size_of_configureIOs 0025     __size_of_configurePWM 0061  
               _T2CONbits 028E       i1___bmul@multiplier 0073      __size_of_testButtons 0085  
                 clrloop0 07F8         __end_of_setDrive2 0EB0      end_of_initialization 001A  
       __end_of_setMotors 05AB        updateMotors@rotate 003E         __end_of_setStatus 0D02  
              _revRoutine 0A5D                _setRoutine 0F4A              i1setMotors@v 0077  
              ??_setDrive 0077                ??_setProps 0032         __end_of_updateSys 0A17  
            _configureI2C 09CB              _configureCPU 099C              _configureIOs 0A38  
            _configurePWM 0C30               ?_handleRead 0070     __CFG_WDTCPS$WDTCPS_31 0000  
               _PORTAbits 000C                 _PORTBbits 000D                 _PORTEbits 0010  
           ??_handleWrite 002A                _updateTime 0D87          __CFG_FEXTOSC$OFF 0000  
          updateTime@tNow 003E          testButtons@clamp 0031             ?_updateMotors 003A  
          __end_of_i2cISR 0AB5               _CLC1CONbits 0E10            __end_of___bmul 09F7  
             _CLC2CONbits 0E1A              _i2c_settings 0057      updateMovement@rotate 003D  
          __end_of_setPWM 0C30         ??_configureTimers 0030              setPWM@module 0033  
       __size_ofi1___bmul 0015       start_initialization 0012               updateTime@p 0040  
             __end_of_ISR 0010         __size_ofi1_setPWM 0054       __end_of_handleWrite 0B87  
     __size_of_handleRead 0037      __size_ofi1_setMotors 016E               ?_revRoutine 0070  
                ??_i2cISR 002E               ?_setRoutine 0070            ??_updateMotors 003B  
        __CFG_LPBOREN$OFF 0000                  ??___bmul 0031                  ??_setPWM 0031  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
             ?_updateTime 002F            i1setPWM@module 0073              setDrive2@dir 007A  
              setDrive2@v 0076         __size_of_setDrive 00DE         __size_of_setProps 0048  
        __CFG_PPS1WAY$OFF 0000                 _drivePWM1 0054                 _drivePWM2 0053  
              setMotors@v 0037                  _CLC1GLS0 0E16                  _CLC1GLS1 0E17  
                _CLC1GLS2 0E18                  _CLC1GLS3 0E19                  _CLC2GLS0 0E20  
                _CLC2GLS1 0E21                  _CLC2GLS2 0E22                  _CLC2GLS3 0E23  
                _CLC1SEL0 0E12                  _CLC1SEL1 0E13                  _CLC2SEL0 0E1C  
                _CLC2SEL1 0E1D       __size_of_revRoutine 0028               _handleWrite 0B34  
     __size_of_setRoutine 00B6                setStatus@s 0029                setStatus@v 0022  
                _CWG1CON0 0610                  _CWG1CON1 0611                  _CWG3CON0 0690  
                _CWG3CON1 0691                  _T2CLKCON 0290                 _setDrive2 0E18  
                _LATCbits 0018                  _LATDbits 0019                  _LATEbits 001A  
               clear_ram0 07F7                  _PIE3bits 0719                 _setMotors 0438  
   i1___bmul@multiplicand 0070                 _setStatus 0C91                  _PIR3bits 070F  
                _PIR4bits 0710       __size_of_updateTime 0091                  _SSP1CON1 0190  
                _SSP1CON2 0191                  _SSP1CON3 0192                  _SSP1STAT 018F  
            ??_handleRead 0070                 _updateSys 09F7                  i1___bmul 09B6  
           ??_testButtons 0030                  i1_setPWM 0B87           testButtons@lift 0033  
    __end_of_updateMotors 0F4A              setMotors@dir 0036       updateMovement@clamp 003C  
              updateSys@p 00A8        __end_of_handleRead 0AEC                ?_setDrive2 0076  
              ?_setMotors 0036   __size_of_updateMovement 041A                ?_setStatus 0022  
         _configureTimers 09A6              setStatus@dir 0027                ?_updateSys 004B  
               setPWM@pwm 0030                _CWG1CLKCON 060C                _CWG3CLKCON 068C  
               setDrive@v 0076               _setPWM$1156 0034                  __ptext10 09A6  
                __ptext11 0C30                  __ptext20 0E18                  __ptext12 0A38  
                __ptext21 0719                  __ptext13 09CB                  __ptext22 0A5D  
                __ptext14 099C                  __ptext23 05AB                  __ptext24 0B87  
                __ptext16 0A85                  __ptext25 09B6                  __ptext17 0B34  
                __ptext26 0AB5                  __ptext18 0C91                  __ptext19 0F4A  
            _SSP1CON1bits 0190              _SSP1CON2bits 0191              _SSP1CON3bits 0192  
          i1setMotors@dir 0076       __end_of_testButtons 0D87                  _driveDir 0055  
               setProps@c 0031                 setProps@l 0034                 setProps@r 0030  
           __size_of_main 0021              ??_revRoutine 007B              ??_setRoutine 007B  
    __CFG_WDTCWS$WDTCWS_7 0000                  _setDrive 0719                  _setProps 0AEC  
                int$flags 007E              _SSP1STATbits 018F        __end_of_revRoutine 0A85  
            ??_updateTime 0030        __end_of_setRoutine 1000               _PWM6CONbits 038E  
           ??i1_setMotors 0078               _PWM7CONbits 0392                  intlevel1 0000  
            handleWrite@d 002D   __end_of_configureTimers 09B6               ??_setDrive2 0078  
       __CFG_CLKOUTEN$OFF 0000               ??_setMotors 0038               ??_setStatus 0025  
             _motorPWMArr 004B               _motorDirArr 004F        __end_of_updateTime 0E18  
   __size_of_updateMotors 009A               ??_updateSys 0041                _SSP1DATPPS 0EC6  
             _testButtons 0D02                _SSP1CLKPPS 0EC5              ?_handleWrite 0070  
            testButtons@p 0034            _updateMovement 001E       __end_ofi1_setMotors 0719  
            _updateMotors 0EB0  
